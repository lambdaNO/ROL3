Résolution exacte pour plat/plat150.dat points à visiter :
Résolution d'initiale :  
> temps total = 104.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 10) (4 -> 96) (5 -> 124) (6 -> 112) (7 -> 62) (8 -> 123) (9 -> 95) (10 -> 3) (11 -> 125) (12 -> 40) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 30) (19 -> 63) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 46) (26 -> 85) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 129) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 78) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 25) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 15) (51 -> 103) (52 -> 28) (53 -> 138) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 19) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 41) (79 -> 47) (80 -> 139) (81 -> 13) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 26) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 117) (90 -> 17) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 4) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 74) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 89) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 11) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 34) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60], [2, 20], [3, 10], [4, 96], [5, 124], [6, 112], [7, 62], [8, 123], [9, 95], [11, 125], [12, 40], [13, 81], [14, 70], [15, 50], [16, 148], [17, 90], [18, 30], [19, 63], [21, 118], [22, 43], [23, 24], [25, 46], [26, 85], [27, 97], [28, 52], [29, 116], [31, 145], [32, 72], [33, 38], [34, 129], [35, 76], [36, 140], [37, 65], [39, 126], [41, 78], [42, 100], [44, 134], [45, 105], [47, 79], [48, 75], [49, 106], [51, 103], [53, 138], [54, 146], [55, 83], [56, 115], [57, 101], [58, 122], [59, 77], [61, 69], [64, 71], [66, 142], [67, 86], [68, 93], [73, 104], [74, 111], [80, 139], [82, 121], [84, 119], [87, 120], [88, 127], [89, 117], [91, 149], [92, 143], [94, 136], [98, 130], [99, 107], [102, 128], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [132, 150], [137, 141]]
> Nombre de cycle(s) trouvé(s) : 75
Itération n° 1 Cassage de contrainte 
> Cycle à casser : [1, 60]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[1,60] + x[60,1] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 106.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 10) (4 -> 96) (5 -> 124) (6 -> 53) (7 -> 62) (8 -> 123) (9 -> 95) (10 -> 3) (11 -> 125) (12 -> 40) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 1) (26 -> 85) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 129) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 78) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 25) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 15) (51 -> 103) (52 -> 28) (53 -> 138) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 63) (61 -> 69) (62 -> 7) (63 -> 19) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 41) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 26) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 117) (90 -> 17) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 4) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 74) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 89) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 11) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 34) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 63, 19, 13, 81, 112, 6, 53, 138, 141, 137, 46, 25], [2, 20], [3, 10], [4, 96], [5, 124], [7, 62], [8, 123], [9, 95], [11, 125], [12, 40], [14, 70], [15, 50], [16, 148], [17, 90], [18, 30], [21, 118], [22, 43], [23, 24], [26, 85], [27, 97], [28, 52], [29, 116], [31, 145], [32, 72], [33, 38], [34, 129], [35, 76], [36, 140], [37, 65], [39, 126], [41, 78], [42, 100], [44, 134], [45, 105], [47, 79], [48, 75], [49, 106], [51, 103], [54, 146], [55, 83], [56, 115], [57, 101], [58, 122], [59, 77], [61, 69], [64, 71], [66, 142], [67, 86], [68, 93], [73, 104], [74, 111], [80, 139], [82, 121], [84, 119], [87, 120], [88, 127], [89, 117], [91, 149], [92, 143], [94, 136], [98, 130], [99, 107], [102, 128], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 69

Itération n° 2 Cassage de contrainte 
> Cycle à casser : [2, 20]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[2,20] + x[20,2] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 107.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 10) (4 -> 96) (5 -> 124) (6 -> 53) (7 -> 62) (8 -> 123) (9 -> 25) (10 -> 3) (11 -> 125) (12 -> 40) (13 -> 19) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 1) (26 -> 85) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 129) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 78) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 137) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 15) (51 -> 103) (52 -> 28) (53 -> 6) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 63) (61 -> 69) (62 -> 7) (63 -> 34) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 95) (68 -> 93) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 41) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 26) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 117) (90 -> 17) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 4) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 74) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 20) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 86) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 63, 34, 129, 89, 117, 20, 2, 11, 125, 86, 67, 95, 9, 25], [3, 10], [4, 96], [5, 124], [6, 53], [7, 62], [8, 123], [12, 40], [13, 19], [14, 70], [15, 50], [16, 148], [17, 90], [18, 30], [21, 118], [22, 43], [23, 24], [26, 85], [27, 97], [28, 52], [29, 116], [31, 145], [32, 72], [33, 38], [35, 76], [36, 140], [37, 65], [39, 126], [41, 78], [42, 100], [44, 134], [45, 105], [46, 137], [47, 79], [48, 75], [49, 106], [51, 103], [54, 146], [55, 83], [56, 115], [57, 101], [58, 122], [59, 77], [61, 69], [64, 71], [66, 142], [68, 93], [73, 104], [74, 111], [80, 139], [81, 112], [82, 121], [84, 119], [87, 120], [88, 127], [91, 149], [92, 143], [94, 136], [98, 130], [99, 107], [102, 128], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [132, 150], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 68

Itération n° 3 Cassage de contrainte 
> Cycle à casser : [3, 10]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[3,10] + x[10,3] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 108.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 10) (4 -> 96) (5 -> 124) (6 -> 112) (7 -> 62) (8 -> 123) (9 -> 95) (10 -> 116) (11 -> 125) (12 -> 40) (13 -> 19) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 142) (18 -> 30) (19 -> 63) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 46) (26 -> 85) (27 -> 97) (28 -> 52) (29 -> 90) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 129) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 78) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 137) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 15) (51 -> 103) (52 -> 28) (53 -> 6) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 34) (64 -> 71) (65 -> 37) (66 -> 60) (67 -> 48) (68 -> 93) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 3) (76 -> 35) (77 -> 59) (78 -> 41) (79 -> 47) (80 -> 139) (81 -> 13) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 26) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 117) (90 -> 17) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 4) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 74) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 20) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 86) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 137, 141, 138, 53, 6, 112, 81, 13, 19, 63, 34, 129, 89, 117, 20, 2, 11, 125, 86, 67, 48, 75, 3, 10, 116, 29, 90, 17, 142, 66, 60], [4, 96], [5, 124], [7, 62], [8, 123], [9, 95], [12, 40], [14, 70], [15, 50], [16, 148], [18, 30], [21, 118], [22, 43], [23, 24], [26, 85], [27, 97], [28, 52], [31, 145], [32, 72], [33, 38], [35, 76], [36, 140], [37, 65], [39, 126], [41, 78], [42, 100], [44, 134], [45, 105], [47, 79], [49, 106], [51, 103], [54, 146], [55, 83], [56, 115], [57, 101], [58, 122], [59, 77], [61, 69], [64, 71], [68, 93], [73, 104], [74, 111], [80, 139], [82, 121], [84, 119], [87, 120], [88, 127], [91, 149], [92, 143], [94, 136], [98, 130], [99, 107], [102, 128], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 59

Itération n° 4 Cassage de contrainte 
> Cycle à casser : [4, 96]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[4,96] + x[96,4] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 109.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 75) (4 -> 96) (5 -> 124) (6 -> 53) (7 -> 62) (8 -> 123) (9 -> 95) (10 -> 3) (11 -> 2) (12 -> 40) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 30) (19 -> 13) (20 -> 117) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 1) (26 -> 85) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 63) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 78) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 25) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 103) (52 -> 28) (53 -> 138) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 66) (61 -> 69) (62 -> 7) (63 -> 19) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 11) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 41) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 26) (86 -> 125) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 74) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 10) (117 -> 89) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 34) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 17) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 66, 142, 17, 90, 29, 116, 10, 3, 75, 48, 67, 86, 125, 4, 96, 14, 70, 11, 2, 20, 117, 89, 129, 34, 63, 19, 13, 81, 112, 6, 53, 138, 141, 137, 46, 25], [5, 124], [7, 62], [8, 123], [9, 95], [12, 40], [15, 50], [16, 148], [18, 30], [21, 118], [22, 43], [23, 24], [26, 85], [27, 97], [28, 52], [31, 145], [32, 72], [33, 38], [35, 76], [36, 140], [37, 65], [39, 126], [41, 78], [42, 100], [44, 134], [45, 105], [47, 79], [49, 106], [51, 103], [54, 146], [55, 83], [56, 115], [57, 101], [58, 122], [59, 77], [61, 69], [64, 71], [68, 93], [73, 104], [74, 111], [80, 139], [82, 121], [84, 119], [87, 120], [88, 127], [91, 149], [92, 143], [94, 136], [98, 130], [99, 107], [102, 128], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 57

Itération n° 5 Cassage de contrainte 
> Cycle à casser : [5, 124]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[5,124] + x[124,5] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 113.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 75) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 123) (9 -> 95) (10 -> 3) (11 -> 150) (12 -> 40) (13 -> 19) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 78) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 46) (26 -> 85) (27 -> 102) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 129) (35 -> 76) (36 -> 140) (37 -> 6) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 59) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 65) (52 -> 28) (53 -> 138) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 97) (63 -> 34) (64 -> 71) (65 -> 51) (66 -> 60) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 63) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 26) (86 -> 125) (87 -> 120) (88 -> 127) (89 -> 117) (90 -> 17) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 20) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 32) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 142) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 10, 3, 75, 48, 67, 86, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 142, 66, 60], [2, 11, 150, 132, 74, 111, 118, 21, 45, 105, 58, 122, 32, 72, 63, 34, 129, 89, 117, 20], [6, 37], [8, 123], [9, 95], [12, 40], [13, 19], [15, 50], [16, 148], [17, 90], [22, 43], [23, 24], [26, 85], [28, 52], [29, 116], [31, 145], [33, 38], [35, 76], [36, 140], [39, 126], [41, 59], [42, 100], [44, 134], [47, 79], [49, 106], [51, 65], [53, 138], [54, 146], [55, 83], [56, 115], [57, 101], [61, 69], [64, 71], [68, 93], [73, 104], [77, 103], [80, 139], [81, 112], [82, 121], [84, 119], [87, 120], [88, 127], [91, 149], [92, 143], [94, 136], [98, 130], [99, 107], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [137, 141]]
> Nombre de cycle(s) trouvé(s) : 53

Itération n° 6 Cassage de contrainte 
> Cycle à casser : [6, 37]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[6,37] + x[37,6] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 113.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 10) (4 -> 96) (5 -> 119) (6 -> 53) (7 -> 62) (8 -> 123) (9 -> 95) (10 -> 116) (11 -> 125) (12 -> 40) (13 -> 19) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 142) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 46) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 90) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 63) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 78) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 105) (46 -> 137) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 15) (51 -> 103) (52 -> 22) (53 -> 6) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 34) (64 -> 71) (65 -> 37) (66 -> 60) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 41) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 150) (85 -> 26) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 17) (91 -> 149) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 143) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 20) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 3) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 137, 141, 138, 3, 10, 116, 29, 90, 17, 142, 66, 60], [2, 11, 125, 4, 96, 14, 70, 124, 5, 119, 84, 150, 132, 74, 111, 143, 92, 85, 26, 28, 52, 22, 43, 117, 20], [6, 53], [7, 62], [8, 123], [9, 95], [12, 40], [13, 19], [15, 50], [16, 148], [18, 30], [21, 118], [23, 24], [27, 97], [31, 145], [32, 72], [33, 38], [34, 63], [35, 76], [36, 140], [37, 65], [39, 126], [41, 78], [42, 100], [44, 134], [45, 105], [47, 79], [48, 75], [49, 106], [51, 103], [54, 146], [55, 83], [56, 115], [57, 101], [58, 122], [59, 77], [61, 69], [64, 71], [67, 86], [68, 93], [73, 104], [80, 139], [81, 112], [82, 121], [87, 120], [88, 127], [89, 129], [91, 149], [94, 136], [98, 130], [99, 107], [102, 128], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147]]
> Nombre de cycle(s) trouvé(s) : 57

Itération n° 7 Cassage de contrainte 
> Cycle à casser : [6, 53]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[6,53] + x[53,6] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 113.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 75) (4 -> 96) (5 -> 119) (6 -> 37) (7 -> 62) (8 -> 123) (9 -> 95) (10 -> 3) (11 -> 125) (12 -> 40) (13 -> 19) (14 -> 70) (15 -> 34) (16 -> 148) (17 -> 90) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 46) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 63) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 78) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 105) (46 -> 137) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 103) (52 -> 22) (53 -> 6) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 10) (63 -> 60) (64 -> 71) (65 -> 51) (66 -> 142) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 150) (85 -> 26) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 17) (91 -> 149) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 77) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 143) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 20) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 137, 141, 138, 53, 6, 37, 65, 51, 103, 77, 59, 41, 78, 7, 62, 10, 3, 75, 48, 67, 86, 50, 15, 34, 63, 60], [2, 11, 125, 4, 96, 14, 70, 124, 5, 119, 84, 150, 132, 74, 111, 143, 92, 85, 26, 28, 52, 22, 43, 117, 20], [8, 123], [9, 95], [12, 40], [13, 19], [16, 148], [17, 90], [18, 30], [21, 118], [23, 24], [27, 97], [29, 116], [31, 145], [32, 72], [33, 38], [35, 76], [36, 140], [39, 126], [42, 100], [44, 134], [45, 105], [47, 79], [49, 106], [54, 146], [55, 83], [56, 115], [57, 101], [58, 122], [61, 69], [64, 71], [66, 142], [68, 93], [73, 104], [80, 139], [81, 112], [82, 121], [87, 120], [88, 127], [89, 129], [91, 149], [94, 136], [98, 130], [99, 107], [102, 128], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147]]
> Nombre de cycle(s) trouvé(s) : 50

Itération n° 8 Cassage de contrainte 
> Cycle à casser : [8, 123]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[8,123] + x[123,8] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 114.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 75) (4 -> 96) (5 -> 30) (6 -> 53) (7 -> 62) (8 -> 123) (9 -> 95) (10 -> 3) (11 -> 66) (12 -> 143) (13 -> 19) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 78) (19 -> 13) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 46) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 57) (34 -> 63) (35 -> 76) (36 -> 140) (37 -> 6) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 59) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 65) (52 -> 22) (53 -> 138) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 34) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 41) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 26) (86 -> 125) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 17) (91 -> 149) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 60) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 74) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 20) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 40) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 38) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 8) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 10, 3, 75, 48, 67, 86, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 41, 59, 77, 103, 51, 65, 37, 6, 53, 138, 141, 137, 38, 33, 57, 101, 60], [2, 11, 66, 142, 8, 123, 40, 12, 143, 92, 85, 26, 28, 52, 22, 43, 117, 20], [7, 62], [9, 95], [13, 19], [15, 50], [16, 148], [17, 90], [21, 118], [23, 24], [27, 97], [29, 116], [31, 145], [32, 72], [34, 63], [35, 76], [36, 140], [39, 126], [42, 100], [44, 134], [45, 105], [47, 79], [49, 106], [54, 146], [55, 83], [56, 115], [58, 122], [61, 69], [64, 71], [68, 93], [73, 104], [74, 111], [80, 139], [81, 112], [82, 121], [84, 119], [87, 120], [88, 127], [89, 129], [91, 149], [94, 136], [98, 130], [99, 107], [102, 128], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 50

Itération n° 9 Cassage de contrainte 
> Cycle à casser : [7, 62]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[7,62] + x[62,7] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 114.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 10) (4 -> 125) (5 -> 119) (6 -> 53) (7 -> 78) (8 -> 123) (9 -> 95) (10 -> 62) (11 -> 14) (12 -> 143) (13 -> 19) (14 -> 96) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 1) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 129) (35 -> 76) (36 -> 140) (37 -> 6) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 59) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 105) (46 -> 25) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 15) (51 -> 65) (52 -> 22) (53 -> 138) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 66) (61 -> 69) (62 -> 7) (63 -> 34) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 48) (68 -> 93) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 3) (76 -> 35) (77 -> 103) (78 -> 41) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 147) (85 -> 26) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 70) (90 -> 17) (91 -> 149) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 4) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 74) (112 -> 81) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 29) (117 -> 20) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 40) (124 -> 5) (125 -> 86) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 8) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 66, 142, 8, 123, 40, 12, 143, 92, 85, 26, 28, 52, 22, 43, 117, 20, 2, 11, 14, 96, 4, 125, 86, 67, 48, 75, 3, 10, 62, 7, 78, 41, 59, 77, 103, 51, 65, 37, 6, 53, 138, 141, 137, 46, 25], [5, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 129, 89, 70, 124], [9, 95], [13, 19], [15, 50], [16, 148], [17, 90], [18, 30], [21, 118], [23, 24], [27, 97], [29, 116], [31, 145], [32, 72], [33, 38], [35, 76], [36, 140], [39, 126], [42, 100], [45, 105], [47, 79], [49, 106], [54, 146], [55, 83], [57, 101], [58, 122], [61, 69], [64, 71], [68, 93], [73, 104], [74, 111], [80, 139], [81, 112], [82, 121], [87, 120], [88, 127], [91, 149], [94, 136], [98, 130], [99, 107], [102, 128], [109, 131], [110, 144], [113, 133], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 45

Itération n° 10 Cassage de contrainte 
> Cycle à casser : [9, 95]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[9,95] + x[95,9] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 115.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 138) (4 -> 125) (5 -> 124) (6 -> 53) (7 -> 78) (8 -> 123) (9 -> 25) (10 -> 3) (11 -> 150) (12 -> 128) (13 -> 19) (14 -> 96) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 1) (26 -> 85) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 129) (35 -> 76) (36 -> 140) (37 -> 6) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 59) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 15) (51 -> 65) (52 -> 28) (53 -> 111) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 66) (61 -> 69) (62 -> 7) (63 -> 34) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 95) (68 -> 93) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 63) (73 -> 104) (74 -> 84) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 41) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 26) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 117) (90 -> 17) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 27) (103 -> 51) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 20) (118 -> 21) (119 -> 5) (120 -> 87) (121 -> 82) (122 -> 32) (123 -> 40) (124 -> 70) (125 -> 86) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 8) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 66, 142, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 41, 59, 77, 103, 51, 65, 37, 6, 53, 111, 118, 21, 45, 105, 58, 122, 32, 72, 63, 34, 129, 89, 117, 20, 2, 11, 150, 132, 74, 84, 119, 5, 124, 70, 14, 96, 4, 125, 86, 67, 95, 9, 25], [3, 138, 141, 137, 46, 10], [13, 19], [15, 50], [16, 148], [17, 90], [18, 30], [22, 43], [23, 24], [26, 85], [28, 52], [29, 116], [31, 145], [33, 38], [35, 76], [36, 140], [39, 126], [42, 100], [44, 134], [47, 79], [48, 75], [49, 106], [54, 146], [55, 83], [56, 115], [57, 101], [61, 69], [64, 71], [68, 93], [73, 104], [80, 139], [81, 112], [82, 121], [87, 120], [88, 127], [91, 149], [92, 143], [94, 136], [98, 130], [99, 107], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147]]
> Nombre de cycle(s) trouvé(s) : 45

Itération n° 11 Cassage de contrainte 
> Cycle à casser : [13, 19]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[13,19] + x[19,13] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 115.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 10) (4 -> 125) (5 -> 124) (6 -> 53) (7 -> 78) (8 -> 142) (9 -> 95) (10 -> 62) (11 -> 2) (12 -> 40) (13 -> 81) (14 -> 96) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 30) (19 -> 13) (20 -> 117) (21 -> 45) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 9) (26 -> 85) (27 -> 102) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 60) (32 -> 72) (33 -> 38) (34 -> 63) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 123) (41 -> 59) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 137) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 15) (51 -> 17) (52 -> 28) (53 -> 111) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 97) (63 -> 19) (64 -> 71) (65 -> 37) (66 -> 11) (67 -> 48) (68 -> 93) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 132) (75 -> 3) (76 -> 35) (77 -> 103) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 26) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 145) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 74) (96 -> 4) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 77) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 89) (118 -> 21) (119 -> 5) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 70) (125 -> 86) (126 -> 39) (127 -> 88) (128 -> 12) (129 -> 34) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 84) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 132, 150, 84, 119, 5, 124, 70, 14, 96, 4, 125, 86, 67, 48, 75, 3, 10, 62, 97, 27, 102, 128, 12, 40, 123, 8, 142, 66, 11, 2, 20, 117, 89, 129, 34, 63, 19, 13, 81, 112, 6, 53, 111, 118, 21, 45, 105, 77, 103, 51, 17, 90, 145, 31, 60], [7, 78], [15, 50], [16, 148], [18, 30], [22, 43], [23, 24], [26, 85], [28, 52], [29, 116], [32, 72], [33, 38], [35, 76], [36, 140], [37, 65], [39, 126], [41, 59], [42, 100], [44, 134], [46, 137], [47, 79], [49, 106], [54, 146], [55, 83], [56, 115], [57, 101], [58, 122], [61, 69], [64, 71], [68, 93], [73, 104], [80, 139], [82, 121], [87, 120], [88, 127], [91, 149], [92, 143], [94, 136], [98, 130], [99, 107], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 46

Itération n° 12 Cassage de contrainte 
> Cycle à casser : [7, 78]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[7,78] + x[78,7] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 115.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 75) (4 -> 125) (5 -> 119) (6 -> 53) (7 -> 78) (8 -> 123) (9 -> 95) (10 -> 3) (11 -> 70) (12 -> 128) (13 -> 81) (14 -> 96) (15 -> 34) (16 -> 148) (17 -> 90) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 1) (26 -> 9) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 129) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 59) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 25) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 17) (52 -> 28) (53 -> 138) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 66) (61 -> 69) (62 -> 7) (63 -> 19) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 124) (68 -> 93) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 41) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 147) (85 -> 26) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 117) (90 -> 29) (91 -> 149) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 74) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 27) (103 -> 51) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 143) (112 -> 6) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 10) (117 -> 20) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 40) (124 -> 5) (125 -> 86) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 8) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 66, 142, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 41, 59, 77, 103, 51, 17, 90, 29, 116, 10, 3, 75, 48, 67, 124, 5, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 19, 13, 81, 112, 6, 53, 138, 141, 137, 46, 25], [2, 11, 70, 14, 96, 4, 125, 86, 50, 15, 34, 129, 89, 117, 20], [9, 95, 74, 111, 143, 92, 85, 26], [16, 148], [18, 30], [21, 118], [22, 43], [23, 24], [28, 52], [31, 145], [32, 72], [33, 38], [35, 76], [36, 140], [37, 65], [39, 126], [42, 100], [45, 105], [47, 79], [49, 106], [54, 146], [55, 83], [57, 101], [58, 122], [61, 69], [64, 71], [68, 93], [73, 104], [80, 139], [82, 121], [87, 120], [88, 127], [91, 149], [94, 136], [98, 130], [99, 107], [109, 131], [110, 144], [113, 133], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 40

Itération n° 13 Cassage de contrainte 
> Cycle à casser : [16, 148]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[16,148] + x[148,16] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 116.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 75) (4 -> 125) (5 -> 124) (6 -> 16) (7 -> 62) (8 -> 142) (9 -> 25) (10 -> 3) (11 -> 2) (12 -> 40) (13 -> 81) (14 -> 96) (15 -> 34) (16 -> 148) (17 -> 51) (18 -> 30) (19 -> 13) (20 -> 117) (21 -> 118) (22 -> 52) (23 -> 24) (24 -> 23) (25 -> 1) (26 -> 85) (27 -> 102) (28 -> 26) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 63) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 123) (41 -> 78) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 103) (52 -> 28) (53 -> 138) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 31) (61 -> 69) (62 -> 97) (63 -> 19) (64 -> 71) (65 -> 37) (66 -> 11) (67 -> 95) (68 -> 93) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 132) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 74) (85 -> 92) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 17) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 4) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 77) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 53) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 43) (118 -> 21) (119 -> 5) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 70) (125 -> 86) (126 -> 39) (127 -> 88) (128 -> 12) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 66) (143 -> 111) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 84) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 31, 145, 90, 17, 51, 103, 77, 59, 41, 78, 7, 62, 97, 27, 102, 128, 12, 40, 123, 8, 142, 66, 11, 2, 20, 117, 43, 22, 52, 28, 26, 85, 92, 143, 111, 53, 138, 141, 137, 46, 10, 3, 75, 48, 67, 95, 9, 25], [4, 125, 86, 50, 15, 34, 63, 19, 13, 81, 112, 6, 16, 148, 119, 5, 124, 70, 14, 96], [18, 30], [21, 118], [23, 24], [29, 116], [32, 72], [33, 38], [35, 76], [36, 140], [37, 65], [39, 126], [42, 100], [44, 134], [45, 105], [47, 79], [49, 106], [54, 146], [55, 83], [56, 115], [57, 101], [58, 122], [61, 69], [64, 71], [68, 93], [73, 104], [74, 132, 150, 84], [80, 139], [82, 121], [87, 120], [88, 127], [89, 129], [91, 149], [94, 136], [98, 130], [99, 107], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147]]
> Nombre de cycle(s) trouvé(s) : 41

Itération n° 14 Cassage de contrainte 
> Cycle à casser : [18, 30]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[18,30] + x[30,18] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 116.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 75) (4 -> 96) (5 -> 30) (6 -> 16) (7 -> 62) (8 -> 142) (9 -> 26) (10 -> 3) (11 -> 2) (12 -> 40) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 78) (19 -> 13) (20 -> 117) (21 -> 45) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 46) (26 -> 85) (27 -> 102) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 60) (32 -> 72) (33 -> 38) (34 -> 63) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 123) (41 -> 59) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 17) (52 -> 28) (53 -> 138) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 97) (63 -> 19) (64 -> 71) (65 -> 37) (66 -> 11) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 95) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 74) (85 -> 92) (86 -> 125) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 145) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 77) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 89) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 12) (129 -> 34) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 66) (143 -> 111) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 10, 3, 75, 48, 67, 86, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 12, 40, 123, 8, 142, 66, 11, 2, 20, 117, 89, 129, 34, 63, 19, 13, 81, 112, 6, 16, 148, 119, 84, 74, 95, 9, 26, 85, 92, 143, 111, 118, 21, 45, 105, 77, 103, 51, 17, 90, 145, 31, 60], [15, 50], [22, 43], [23, 24], [28, 52], [29, 116], [32, 72], [33, 38], [35, 76], [36, 140], [37, 65], [39, 126], [41, 59], [42, 100], [44, 134], [47, 79], [49, 106], [53, 138], [54, 146], [55, 83], [56, 115], [57, 101], [58, 122], [61, 69], [64, 71], [68, 93], [73, 104], [80, 139], [82, 121], [87, 120], [88, 127], [91, 149], [94, 136], [98, 130], [99, 107], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [132, 150], [137, 141]]
> Nombre de cycle(s) trouvé(s) : 42

Itération n° 15 Cassage de contrainte 
> Cycle à casser : [15, 50]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[15,50] + x[50,15] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 117.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 10) (4 -> 96) (5 -> 30) (6 -> 112) (7 -> 62) (8 -> 142) (9 -> 95) (10 -> 46) (11 -> 125) (12 -> 40) (13 -> 19) (14 -> 70) (15 -> 50) (16 -> 39) (17 -> 51) (18 -> 78) (19 -> 63) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 9) (26 -> 28) (27 -> 102) (28 -> 52) (29 -> 90) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 15) (35 -> 76) (36 -> 140) (37 -> 6) (38 -> 33) (39 -> 126) (40 -> 123) (41 -> 59) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 105) (46 -> 137) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 86) (51 -> 65) (52 -> 22) (53 -> 111) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 97) (63 -> 34) (64 -> 71) (65 -> 37) (66 -> 60) (67 -> 48) (68 -> 93) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 84) (75 -> 3) (76 -> 35) (77 -> 103) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 13) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 26) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 17) (91 -> 149) (92 -> 85) (93 -> 54) (94 -> 136) (95 -> 74) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 77) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 143) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 20) (118 -> 21) (119 -> 148) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 68) (127 -> 88) (128 -> 12) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 116) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 84, 119, 148, 16, 39, 126, 68, 93, 54, 146, 116, 29, 90, 17, 51, 65, 37, 6, 112, 81, 13, 19, 63, 34, 15, 50, 86, 67, 48, 75, 3, 10, 46, 137, 141, 138, 53, 111, 143, 92, 85, 26, 28, 52, 22, 43, 117, 20, 2, 11, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 12, 40, 123, 8, 142, 66, 60], [21, 118], [23, 24], [31, 145], [32, 72], [33, 38], [35, 76], [36, 140], [41, 59], [42, 100], [44, 134], [45, 105], [47, 79], [49, 106], [55, 83], [56, 115], [57, 101], [58, 122], [61, 69], [64, 71], [73, 104], [77, 103], [80, 139], [82, 121], [87, 120], [88, 127], [89, 129], [91, 149], [94, 136], [98, 130], [99, 107], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 37

Itération n° 16 Cassage de contrainte 
> Cycle à casser : [21, 118]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[21,118] + x[118,21] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 117.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 75) (4 -> 96) (5 -> 30) (6 -> 112) (7 -> 62) (8 -> 142) (9 -> 26) (10 -> 3) (11 -> 2) (12 -> 40) (13 -> 19) (14 -> 70) (15 -> 50) (16 -> 137) (17 -> 90) (18 -> 78) (19 -> 63) (20 -> 117) (21 -> 45) (22 -> 43) (23 -> 24) (24 -> 23) (25 -> 46) (26 -> 85) (27 -> 102) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 15) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 123) (41 -> 74) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 86) (51 -> 103) (52 -> 28) (53 -> 6) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 97) (63 -> 60) (64 -> 71) (65 -> 37) (66 -> 11) (67 -> 95) (68 -> 93) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 84) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 13) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 92) (86 -> 125) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 17) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 77) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 89) (118 -> 21) (119 -> 148) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 12) (129 -> 34) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 66) (143 -> 111) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 10, 3, 75, 48, 67, 95, 9, 26, 85, 92, 143, 111, 118, 21, 45, 105, 77, 59, 41, 74, 84, 119, 148, 16, 137, 141, 138, 53, 6, 112, 81, 13, 19, 63, 60], [2, 20, 117, 89, 129, 34, 15, 50, 86, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 12, 40, 123, 8, 142, 66, 11], [17, 90], [22, 43], [23, 24], [28, 52], [29, 116], [31, 145], [32, 72], [33, 38], [35, 76], [36, 140], [37, 65], [39, 126], [42, 100], [44, 134], [47, 79], [49, 106], [51, 103], [54, 146], [55, 83], [56, 115], [57, 101], [58, 122], [61, 69], [64, 71], [68, 93], [73, 104], [80, 139], [82, 121], [87, 120], [88, 127], [91, 149], [94, 136], [98, 130], [99, 107], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 42

Itération n° 17 Cassage de contrainte 
> Cycle à casser : [17, 90]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[17,90] + x[90,17] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 117.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 10) (4 -> 125) (5 -> 124) (6 -> 16) (7 -> 78) (8 -> 142) (9 -> 95) (10 -> 46) (11 -> 2) (12 -> 40) (13 -> 81) (14 -> 96) (15 -> 34) (16 -> 148) (17 -> 90) (18 -> 30) (19 -> 13) (20 -> 117) (21 -> 45) (22 -> 52) (23 -> 24) (24 -> 23) (25 -> 1) (26 -> 85) (27 -> 97) (28 -> 26) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 63) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 123) (41 -> 59) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 25) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 15) (51 -> 17) (52 -> 28) (53 -> 138) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 66) (61 -> 69) (62 -> 7) (63 -> 19) (64 -> 71) (65 -> 37) (66 -> 11) (67 -> 48) (68 -> 27) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 3) (76 -> 35) (77 -> 103) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 150) (85 -> 92) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 67) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 77) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 146) (117 -> 43) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 70) (125 -> 86) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 9) (143 -> 12) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 66, 11, 2, 20, 117, 43, 22, 52, 28, 26, 85, 92, 143, 12, 40, 123, 8, 142, 9, 95, 67, 48, 75, 3, 10, 46, 25], [4, 125, 86, 50, 15, 34, 63, 19, 13, 81, 112, 6, 16, 148, 119, 84, 150, 132, 74, 111, 118, 21, 45, 105, 77, 103, 51, 17, 90, 29, 116, 146, 54, 93, 68, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96], [23, 24], [31, 145], [32, 72], [33, 38], [35, 76], [36, 140], [37, 65], [39, 126], [41, 59], [42, 100], [44, 134], [47, 79], [49, 106], [53, 138], [55, 83], [56, 115], [57, 101], [58, 122], [61, 69], [64, 71], [73, 104], [80, 139], [82, 121], [87, 120], [88, 127], [89, 129], [91, 149], [94, 136], [98, 130], [99, 107], [102, 128], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [137, 141]]
> Nombre de cycle(s) trouvé(s) : 39

Itération n° 18 Cassage de contrainte 
> Cycle à casser : [23, 24]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[23,24] + x[24,23] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 119.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 10) (4 -> 125) (5 -> 124) (6 -> 112) (7 -> 78) (8 -> 142) (9 -> 26) (10 -> 62) (11 -> 2) (12 -> 40) (13 -> 19) (14 -> 96) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 30) (19 -> 63) (20 -> 117) (21 -> 45) (22 -> 43) (23 -> 94) (24 -> 23) (25 -> 46) (26 -> 85) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 122) (33 -> 38) (34 -> 15) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 16) (40 -> 123) (41 -> 24) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 21) (46 -> 137) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 86) (51 -> 103) (52 -> 28) (53 -> 6) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 105) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 72) (64 -> 71) (65 -> 37) (66 -> 60) (67 -> 48) (68 -> 126) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 95) (75 -> 3) (76 -> 35) (77 -> 59) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 13) (82 -> 121) (83 -> 55) (84 -> 150) (85 -> 92) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 4) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 77) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 146) (117 -> 89) (118 -> 111) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 70) (125 -> 11) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 34) (130 -> 98) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 17) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 66) (143 -> 12) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 137, 141, 138, 53, 6, 112, 81, 13, 19, 63, 72, 32, 122, 58, 105, 77, 59, 41, 24, 23, 94, 136, 17, 90, 29, 116, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 150, 132, 74, 95, 9, 26, 85, 92, 143, 12, 40, 123, 8, 142, 66, 60], [2, 20, 117, 89, 129, 34, 15, 50, 86, 67, 48, 75, 3, 10, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96, 4, 125, 11], [21, 45], [22, 43], [27, 97], [28, 52], [31, 145], [33, 38], [35, 76], [36, 140], [37, 65], [42, 100], [44, 134], [47, 79], [49, 106], [51, 103], [55, 83], [56, 115], [57, 101], [61, 69], [64, 71], [73, 104], [80, 139], [82, 121], [87, 120], [88, 127], [91, 149], [98, 130], [99, 107], [102, 128], [108, 135], [109, 131], [110, 144], [111, 118], [113, 133], [114, 147]]
> Nombre de cycle(s) trouvé(s) : 36

Itération n° 19 Cassage de contrainte 
> Cycle à casser : [21, 45]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[21,45] + x[45,21] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 119.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 10) (4 -> 96) (5 -> 30) (6 -> 112) (7 -> 62) (8 -> 142) (9 -> 95) (10 -> 46) (11 -> 2) (12 -> 40) (13 -> 19) (14 -> 70) (15 -> 50) (16 -> 137) (17 -> 136) (18 -> 78) (19 -> 63) (20 -> 117) (21 -> 45) (22 -> 43) (23 -> 24) (24 -> 72) (25 -> 1) (26 -> 9) (27 -> 102) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 85) (33 -> 38) (34 -> 15) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 123) (41 -> 59) (42 -> 100) (43 -> 22) (44 -> 115) (45 -> 105) (46 -> 25) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 86) (51 -> 17) (52 -> 28) (53 -> 6) (54 -> 93) (55 -> 83) (56 -> 114) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 31) (61 -> 69) (62 -> 97) (63 -> 135) (64 -> 71) (65 -> 37) (66 -> 11) (67 -> 48) (68 -> 149) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 3) (76 -> 35) (77 -> 103) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 13) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 26) (86 -> 125) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 75) (92 -> 143) (93 -> 68) (94 -> 23) (95 -> 74) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 77) (106 -> 49) (107 -> 99) (108 -> 134) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 146) (117 -> 89) (118 -> 21) (119 -> 148) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 12) (129 -> 34) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 31, 145, 90, 29, 116, 146, 54, 93, 68, 149, 91, 75, 3, 10, 46, 25], [2, 20, 117, 89, 129, 34, 15, 50, 86, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 12, 40, 123, 8, 142, 66, 11], [6, 112, 81, 13, 19, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 137, 141, 138, 53], [9, 95, 74, 111, 118, 21, 45, 105, 77, 103, 51, 17, 136, 94, 23, 24, 72, 32, 85, 26], [22, 43], [28, 52], [33, 38], [35, 76], [36, 140], [37, 65], [39, 126], [41, 59], [42, 100], [47, 79], [48, 67], [49, 106], [55, 83], [57, 101], [58, 122], [61, 69], [64, 71], [73, 104], [80, 139], [82, 121], [87, 120], [88, 127], [92, 143], [98, 130], [99, 107], [109, 131], [110, 144], [113, 133], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 33

Itération n° 20 Cassage de contrainte 
> Cycle à casser : [22, 43]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[22,43] + x[43,22] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 119.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 75) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 123) (9 -> 25) (10 -> 3) (11 -> 125) (12 -> 143) (13 -> 81) (14 -> 70) (15 -> 34) (16 -> 148) (17 -> 90) (18 -> 78) (19 -> 13) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 72) (25 -> 1) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 122) (33 -> 38) (34 -> 63) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 16) (40 -> 12) (41 -> 59) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 21) (46 -> 137) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 17) (52 -> 22) (53 -> 141) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 105) (59 -> 41) (60 -> 66) (61 -> 69) (62 -> 10) (63 -> 19) (64 -> 71) (65 -> 51) (66 -> 142) (67 -> 86) (68 -> 126) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 95) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 74) (85 -> 26) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 149) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 77) (104 -> 73) (105 -> 45) (106 -> 23) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 53) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 146) (117 -> 20) (118 -> 111) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 40) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 46) (138 -> 49) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 8) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 66, 142, 8, 123, 40, 12, 143, 92, 85, 26, 28, 52, 22, 43, 117, 20, 2, 11, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 10, 3, 75, 48, 67, 86, 50, 15, 34, 63, 19, 13, 81, 112, 6, 37, 65, 51, 17, 90, 29, 116, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 74, 95, 9, 25], [21, 118, 111, 53, 141, 138, 49, 106, 23, 24, 72, 32, 122, 58, 105, 45], [27, 97], [31, 145], [33, 38], [35, 76], [36, 140], [41, 59], [42, 100], [44, 134], [46, 137], [47, 79], [55, 83], [56, 115], [57, 101], [61, 69], [64, 71], [73, 104], [77, 103], [80, 139], [82, 121], [87, 120], [88, 127], [89, 129], [91, 149], [94, 136], [98, 130], [99, 107], [102, 128], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 35

Itération n° 21 Cassage de contrainte 
> Cycle à casser : [27, 97]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[27,97] + x[97,27] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 119.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 75) (4 -> 125) (5 -> 124) (6 -> 53) (7 -> 78) (8 -> 142) (9 -> 95) (10 -> 3) (11 -> 2) (12 -> 40) (13 -> 81) (14 -> 96) (15 -> 34) (16 -> 148) (17 -> 90) (18 -> 30) (19 -> 13) (20 -> 117) (21 -> 118) (22 -> 52) (23 -> 24) (24 -> 72) (25 -> 46) (26 -> 9) (27 -> 97) (28 -> 26) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 122) (33 -> 38) (34 -> 63) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 123) (41 -> 59) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 21) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 17) (52 -> 28) (53 -> 138) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 105) (59 -> 77) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 19) (64 -> 71) (65 -> 37) (66 -> 60) (67 -> 86) (68 -> 27) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 132) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 150) (85 -> 92) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 149) (92 -> 85) (93 -> 68) (94 -> 23) (95 -> 74) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 143) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 146) (117 -> 43) (118 -> 111) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 70) (125 -> 41) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 136) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 16) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 66) (143 -> 12) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 11) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 10, 3, 75, 48, 67, 86, 50, 15, 34, 63, 19, 13, 81, 112, 6, 53, 138, 141, 137, 16, 148, 119, 84, 150, 11, 2, 20, 117, 43, 22, 52, 28, 26, 9, 95, 74, 132, 136, 94, 23, 24, 72, 32, 122, 58, 105, 45, 21, 118, 111, 143, 12, 40, 123, 8, 142, 66, 60], [4, 125, 41, 59, 77, 103, 51, 17, 90, 29, 116, 146, 54, 93, 68, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96], [31, 145], [33, 38], [35, 76], [36, 140], [37, 65], [39, 126], [42, 100], [44, 134], [47, 79], [49, 106], [55, 83], [56, 115], [57, 101], [61, 69], [64, 71], [73, 104], [80, 139], [82, 121], [85, 92], [87, 120], [88, 127], [89, 129], [91, 149], [98, 130], [99, 107], [102, 128], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147]]
> Nombre de cycle(s) trouvé(s) : 33

Itération n° 22 Cassage de contrainte 
> Cycle à casser : [31, 145]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[31,145] + x[145,31] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 119.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 10) (4 -> 125) (5 -> 124) (6 -> 37) (7 -> 78) (8 -> 123) (9 -> 25) (10 -> 46) (11 -> 66) (12 -> 128) (13 -> 81) (14 -> 96) (15 -> 34) (16 -> 148) (17 -> 136) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 72) (25 -> 1) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 122) (33 -> 38) (34 -> 63) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 59) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 21) (46 -> 137) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 17) (52 -> 22) (53 -> 138) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 105) (59 -> 41) (60 -> 31) (61 -> 69) (62 -> 7) (63 -> 19) (64 -> 71) (65 -> 51) (66 -> 142) (67 -> 48) (68 -> 149) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 95) (75 -> 3) (76 -> 35) (77 -> 103) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 74) (85 -> 26) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 75) (92 -> 85) (93 -> 68) (94 -> 23) (95 -> 9) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 27) (103 -> 77) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 143) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 146) (117 -> 20) (118 -> 111) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 40) (124 -> 70) (125 -> 86) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 16) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 53) (142 -> 8) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 31, 145, 90, 29, 116, 146, 54, 93, 68, 149, 91, 75, 3, 10, 46, 137, 16, 148, 119, 84, 74, 95, 9, 25], [2, 11, 66, 142, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96, 4, 125, 86, 50, 15, 34, 63, 19, 13, 81, 112, 6, 37, 65, 51, 17, 136, 94, 23, 24, 72, 32, 122, 58, 105, 45, 21, 118, 111, 143, 92, 85, 26, 28, 52, 22, 43, 117, 20], [33, 38], [35, 76], [36, 140], [39, 126], [41, 59], [42, 100], [44, 134], [47, 79], [48, 67], [49, 106], [53, 138, 141], [55, 83], [56, 115], [57, 101], [61, 69], [64, 71], [73, 104], [77, 103], [80, 139], [82, 121], [87, 120], [88, 127], [89, 129], [98, 130], [99, 107], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 33

Itération n° 23 Cassage de contrainte 
> Cycle à casser : [33, 38]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[33,38] + x[38,33] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 120.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 75) (4 -> 96) (5 -> 124) (6 -> 53) (7 -> 78) (8 -> 123) (9 -> 25) (10 -> 3) (11 -> 2) (12 -> 128) (13 -> 81) (14 -> 38) (15 -> 34) (16 -> 148) (17 -> 51) (18 -> 30) (19 -> 13) (20 -> 117) (21 -> 45) (22 -> 52) (23 -> 94) (24 -> 23) (25 -> 1) (26 -> 85) (27 -> 97) (28 -> 26) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 72) (33 -> 8) (34 -> 63) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 16) (40 -> 12) (41 -> 125) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 103) (52 -> 28) (53 -> 138) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 31) (61 -> 69) (62 -> 7) (63 -> 19) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 86) (68 -> 126) (69 -> 61) (70 -> 11) (71 -> 64) (72 -> 24) (73 -> 104) (74 -> 95) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 74) (85 -> 92) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 27) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 146) (117 -> 43) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 32) (123 -> 40) (124 -> 70) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 17) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 66) (143 -> 111) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 31, 145, 90, 29, 116, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 74, 95, 9, 25], [2, 20, 117, 43, 22, 52, 28, 26, 85, 92, 143, 111, 118, 21, 45, 105, 58, 122, 32, 72, 24, 23, 94, 136, 17, 51, 103, 77, 59, 41, 125, 4, 96, 14, 38, 33, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 11], [3, 75, 48, 67, 86, 50, 15, 34, 63, 19, 13, 81, 112, 6, 53, 138, 141, 137, 46, 10], [35, 76], [36, 140], [37, 65], [42, 100], [44, 134], [47, 79], [49, 106], [55, 83], [56, 115], [57, 101], [61, 69], [64, 71], [66, 142], [73, 104], [80, 139], [82, 121], [87, 120], [88, 127], [89, 129], [91, 149], [98, 130], [99, 107], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 31

Itération n° 24 Cassage de contrainte 
> Cycle à casser : [35, 76]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[35,76] + x[76,35] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 123.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 75) (4 -> 96) (5 -> 30) (6 -> 16) (7 -> 62) (8 -> 38) (9 -> 25) (10 -> 3) (11 -> 125) (12 -> 40) (13 -> 81) (14 -> 70) (15 -> 34) (16 -> 148) (17 -> 51) (18 -> 78) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 106) (24 -> 23) (25 -> 1) (26 -> 28) (27 -> 102) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 36) (34 -> 63) (35 -> 99) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 123) (41 -> 59) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 138) (50 -> 15) (51 -> 17) (52 -> 22) (53 -> 111) (54 -> 46) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 31) (61 -> 69) (62 -> 97) (63 -> 19) (64 -> 71) (65 -> 37) (66 -> 87) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 24) (73 -> 104) (74 -> 95) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 150) (85 -> 26) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 12) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 146) (117 -> 20) (118 -> 21) (119 -> 84) (120 -> 76) (121 -> 82) (122 -> 32) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 142) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 85) (141 -> 137) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 31, 145, 90, 29, 116, 146, 54, 46, 10, 3, 75, 48, 67, 86, 50, 15, 34, 63, 19, 13, 81, 112, 6, 16, 148, 119, 84, 150, 132, 74, 95, 9, 25], [2, 11, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 142, 66, 87, 120, 76, 35, 99, 107, 12, 40, 123, 8, 38, 33, 36, 140, 85, 26, 28, 52, 22, 43, 117, 20], [17, 51], [21, 45, 105, 58, 122, 32, 72, 24, 23, 106, 49, 138, 53, 111, 118], [37, 65], [39, 126], [41, 59], [42, 100], [44, 134], [47, 79], [55, 83], [56, 115], [57, 101], [61, 69], [64, 71], [68, 93], [73, 104], [77, 103], [80, 139], [82, 121], [88, 127], [89, 129], [91, 149], [92, 143], [94, 136], [98, 130], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [137, 141]]
> Nombre de cycle(s) trouvé(s) : 32

Itération n° 25 Cassage de contrainte 
> Cycle à casser : [17, 51]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[17,51] + x[51,17] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 123.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 10) (4 -> 125) (5 -> 124) (6 -> 53) (7 -> 78) (8 -> 123) (9 -> 26) (10 -> 46) (11 -> 70) (12 -> 107) (13 -> 81) (14 -> 96) (15 -> 34) (16 -> 148) (17 -> 136) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 24) (24 -> 72) (25 -> 1) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 85) (33 -> 38) (34 -> 63) (35 -> 76) (36 -> 33) (37 -> 65) (38 -> 137) (39 -> 126) (40 -> 12) (41 -> 59) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 105) (46 -> 25) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 15) (51 -> 17) (52 -> 22) (53 -> 111) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 31) (61 -> 69) (62 -> 7) (63 -> 19) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 48) (68 -> 27) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 95) (75 -> 3) (76 -> 120) (77 -> 103) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 150) (85 -> 140) (86 -> 50) (87 -> 66) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 23) (95 -> 9) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 35) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 51) (104 -> 73) (105 -> 77) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 146) (117 -> 20) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 40) (124 -> 67) (125 -> 86) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 16) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 8) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 31, 145, 90, 29, 116, 146, 54, 93, 68, 27, 97, 62, 7, 78, 18, 30, 5, 124, 67, 48, 75, 3, 10, 46, 25], [2, 11, 70, 14, 96, 4, 125, 86, 50, 15, 34, 63, 19, 13, 81, 112, 6, 53, 111, 118, 21, 45, 105, 77, 103, 51, 17, 136, 94, 23, 24, 72, 32, 85, 140, 36, 33, 38, 137, 16, 148, 119, 84, 150, 132, 74, 95, 9, 26, 28, 52, 22, 43, 117, 20], [8, 123, 40, 12, 107, 99, 35, 76, 120, 87, 66, 142], [37, 65], [39, 126], [41, 59], [42, 100], [44, 134], [47, 79], [49, 106], [55, 83], [56, 115], [57, 101], [58, 122], [61, 69], [64, 71], [73, 104], [80, 139], [82, 121], [88, 127], [89, 129], [91, 149], [92, 143], [98, 130], [102, 128], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 31

Itération n° 26 Cassage de contrainte 
> Cycle à casser : [37, 65]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[37,65] + x[65,37] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 123.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 75) (4 -> 125) (5 -> 124) (6 -> 16) (7 -> 78) (8 -> 38) (9 -> 26) (10 -> 3) (11 -> 66) (12 -> 40) (13 -> 81) (14 -> 96) (15 -> 34) (16 -> 148) (17 -> 51) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 94) (24 -> 23) (25 -> 46) (26 -> 85) (27 -> 97) (28 -> 52) (29 -> 90) (30 -> 5) (31 -> 60) (32 -> 72) (33 -> 36) (34 -> 63) (35 -> 99) (36 -> 140) (37 -> 28) (38 -> 33) (39 -> 126) (40 -> 123) (41 -> 59) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 65) (52 -> 22) (53 -> 138) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 19) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 76) (68 -> 93) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 24) (73 -> 104) (74 -> 95) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 150) (85 -> 92) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 145) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 27) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 12) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 20) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 32) (123 -> 8) (124 -> 70) (125 -> 86) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 17) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 54) (141 -> 137) (142 -> 128) (143 -> 111) (144 -> 110) (145 -> 31) (146 -> 116) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 10, 3, 75, 48, 67, 76, 35, 99, 107, 12, 40, 123, 8, 38, 33, 36, 140, 54, 146, 116, 29, 90, 145, 31, 60], [2, 11, 66, 142, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96, 4, 125, 86, 50, 15, 34, 63, 19, 13, 81, 112, 6, 16, 148, 119, 84, 150, 132, 74, 95, 9, 26, 85, 92, 143, 111, 118, 21, 45, 105, 58, 122, 32, 72, 24, 23, 94, 136, 17, 51, 65, 37, 28, 52, 22, 43, 117, 20], [39, 126], [41, 59], [42, 100], [44, 134], [47, 79], [49, 106], [53, 138], [55, 83], [56, 115], [57, 101], [61, 69], [64, 71], [68, 93], [73, 104], [77, 103], [80, 139], [82, 121], [87, 120], [88, 127], [89, 129], [91, 149], [98, 130], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [137, 141]]
> Nombre de cycle(s) trouvé(s) : 30

Itération n° 27 Cassage de contrainte 
> Cycle à casser : [39, 126]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[39,126] + x[126,39] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 123.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 10) (4 -> 96) (5 -> 30) (6 -> 112) (7 -> 62) (8 -> 38) (9 -> 26) (10 -> 46) (11 -> 125) (12 -> 40) (13 -> 19) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 51) (18 -> 78) (19 -> 63) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 94) (24 -> 23) (25 -> 1) (26 -> 28) (27 -> 102) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 36) (34 -> 15) (35 -> 99) (36 -> 140) (37 -> 6) (38 -> 33) (39 -> 16) (40 -> 123) (41 -> 59) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 105) (46 -> 25) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 86) (51 -> 65) (52 -> 22) (53 -> 138) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 31) (61 -> 69) (62 -> 97) (63 -> 34) (64 -> 71) (65 -> 37) (66 -> 87) (67 -> 48) (68 -> 126) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 24) (73 -> 104) (74 -> 95) (75 -> 3) (76 -> 35) (77 -> 103) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 13) (82 -> 121) (83 -> 55) (84 -> 74) (85 -> 92) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 12) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 146) (117 -> 20) (118 -> 21) (119 -> 84) (120 -> 76) (121 -> 82) (122 -> 32) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 142) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 17) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 85) (141 -> 137) (142 -> 66) (143 -> 111) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 31, 145, 90, 29, 116, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 74, 95, 9, 26, 28, 52, 22, 43, 117, 20, 2, 11, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 142, 66, 87, 120, 76, 35, 99, 107, 12, 40, 123, 8, 38, 33, 36, 140, 85, 92, 143, 111, 118, 21, 45, 105, 58, 122, 32, 72, 24, 23, 94, 136, 17, 51, 65, 37, 6, 112, 81, 13, 19, 63, 34, 15, 50, 86, 67, 48, 75, 3, 10, 46, 25], [41, 59], [42, 100], [44, 134], [47, 79], [49, 106], [53, 138], [55, 83], [56, 115], [57, 101], [61, 69], [64, 71], [73, 104], [77, 103], [80, 139], [82, 121], [88, 127], [89, 129], [91, 149], [98, 130], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [132, 150], [137, 141]]
> Nombre de cycle(s) trouvé(s) : 27

Itération n° 28 Cassage de contrainte 
> Cycle à casser : [41, 59]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[41,59] + x[59,41] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 124.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 10) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 123) (9 -> 95) (10 -> 46) (11 -> 2) (12 -> 107) (13 -> 81) (14 -> 70) (15 -> 34) (16 -> 39) (17 -> 90) (18 -> 78) (19 -> 13) (20 -> 117) (21 -> 45) (22 -> 52) (23 -> 94) (24 -> 23) (25 -> 9) (26 -> 85) (27 -> 102) (28 -> 26) (29 -> 3) (30 -> 18) (31 -> 60) (32 -> 72) (33 -> 38) (34 -> 63) (35 -> 76) (36 -> 33) (37 -> 65) (38 -> 8) (39 -> 126) (40 -> 12) (41 -> 125) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 137) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 15) (51 -> 103) (52 -> 28) (53 -> 111) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 97) (63 -> 19) (64 -> 71) (65 -> 51) (66 -> 11) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 24) (73 -> 104) (74 -> 132) (75 -> 48) (76 -> 67) (77 -> 59) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 140) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 145) (91 -> 149) (92 -> 143) (93 -> 54) (94 -> 136) (95 -> 74) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 35) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 43) (118 -> 21) (119 -> 148) (120 -> 87) (121 -> 82) (122 -> 32) (123 -> 40) (124 -> 5) (125 -> 4) (126 -> 68) (127 -> 88) (128 -> 142) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 17) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 116) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 84) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 132, 150, 84, 119, 148, 16, 39, 126, 68, 93, 54, 146, 116, 29, 3, 10, 46, 137, 141, 138, 53, 111, 118, 21, 45, 105, 58, 122, 32, 72, 24, 23, 94, 136, 17, 90, 145, 31, 60], [2, 20, 117, 43, 22, 52, 28, 26, 85, 140, 36, 33, 38, 8, 123, 40, 12, 107, 99, 35, 76, 67, 86, 50, 15, 34, 63, 19, 13, 81, 112, 6, 37, 65, 51, 103, 77, 59, 41, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 142, 66, 11], [42, 100], [44, 134], [47, 79], [48, 75], [49, 106], [55, 83], [56, 115], [57, 101], [61, 69], [64, 71], [73, 104], [80, 139], [82, 121], [87, 120], [88, 127], [89, 129], [91, 149], [92, 143], [98, 130], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147]]
> Nombre de cycle(s) trouvé(s) : 26

Itération n° 29 Cassage de contrainte 
> Cycle à casser : [42, 100]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[42,100] + x[100,42] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 126.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 75) (4 -> 125) (5 -> 124) (6 -> 37) (7 -> 78) (8 -> 33) (9 -> 95) (10 -> 3) (11 -> 66) (12 -> 40) (13 -> 81) (14 -> 96) (15 -> 34) (16 -> 39) (17 -> 90) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 94) (24 -> 23) (25 -> 9) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 5) (31 -> 60) (32 -> 85) (33 -> 38) (34 -> 63) (35 -> 99) (36 -> 140) (37 -> 65) (38 -> 137) (39 -> 126) (40 -> 123) (41 -> 118) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 42) (52 -> 22) (53 -> 111) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 72) (64 -> 71) (65 -> 51) (66 -> 142) (67 -> 76) (68 -> 93) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 24) (73 -> 104) (74 -> 132) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 26) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 145) (91 -> 149) (92 -> 143) (93 -> 54) (94 -> 136) (95 -> 74) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 57) (102 -> 27) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 12) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 53) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 20) (118 -> 21) (119 -> 148) (120 -> 87) (121 -> 82) (122 -> 32) (123 -> 8) (124 -> 70) (125 -> 86) (126 -> 68) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 17) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 128) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 59) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 84) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 132, 150, 84, 119, 148, 16, 39, 126, 68, 93, 54, 146, 59, 41, 118, 21, 45, 105, 58, 122, 32, 85, 26, 28, 52, 22, 43, 117, 20, 2, 11, 66, 142, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96, 4, 125, 86, 50, 15, 34, 63, 72, 24, 23, 94, 136, 17, 90, 145, 31, 60], [3, 75, 48, 67, 76, 35, 99, 107, 12, 40, 123, 8, 33, 38, 137, 46, 10], [6, 37, 65, 51, 42, 100, 19, 13, 81, 112], [29, 116], [36, 140], [44, 134], [47, 79], [49, 106], [53, 111], [55, 83], [56, 115], [57, 101], [61, 69], [64, 71], [73, 104], [77, 103], [80, 139], [82, 121], [87, 120], [88, 127], [89, 129], [91, 149], [92, 143], [98, 130], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 30

Itération n° 30 Cassage de contrainte 
> Cycle à casser : [29, 116]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[29,116] + x[116,29] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 126.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 75) (4 -> 96) (5 -> 124) (6 -> 37) (7 -> 78) (8 -> 123) (9 -> 95) (10 -> 3) (11 -> 2) (12 -> 143) (13 -> 81) (14 -> 38) (15 -> 34) (16 -> 39) (17 -> 90) (18 -> 30) (19 -> 13) (20 -> 117) (21 -> 45) (22 -> 52) (23 -> 94) (24 -> 23) (25 -> 46) (26 -> 9) (27 -> 97) (28 -> 26) (29 -> 107) (30 -> 5) (31 -> 60) (32 -> 72) (33 -> 8) (34 -> 63) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 125) (42 -> 100) (43 -> 22) (44 -> 115) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 103) (52 -> 28) (53 -> 138) (54 -> 146) (55 -> 83) (56 -> 114) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 135) (64 -> 71) (65 -> 51) (66 -> 142) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 11) (71 -> 64) (72 -> 24) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 120) (77 -> 59) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 32) (86 -> 50) (87 -> 66) (88 -> 127) (89 -> 129) (90 -> 145) (91 -> 149) (92 -> 85) (93 -> 54) (94 -> 136) (95 -> 74) (96 -> 14) (97 -> 62) (98 -> 130) (99 -> 35) (100 -> 19) (101 -> 57) (102 -> 27) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 134) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 43) (118 -> 21) (119 -> 148) (120 -> 87) (121 -> 82) (122 -> 42) (123 -> 40) (124 -> 70) (125 -> 4) (126 -> 68) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 17) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 128) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 116) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 10, 3, 75, 48, 67, 86, 50, 15, 34, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 68, 93, 54, 146, 116, 29, 107, 99, 35, 76, 120, 87, 66, 142, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 11, 2, 20, 117, 43, 22, 52, 28, 26, 9, 95, 74, 111, 118, 21, 45, 105, 58, 122, 42, 100, 19, 13, 81, 112, 6, 37, 65, 51, 103, 77, 59, 41, 125, 4, 96, 14, 38, 33, 8, 123, 40, 12, 143, 92, 85, 32, 72, 24, 23, 94, 136, 17, 90, 145, 31, 60], [36, 140], [47, 79], [49, 106], [53, 138], [55, 83], [57, 101], [61, 69], [64, 71], [73, 104], [80, 139], [82, 121], [88, 127], [89, 129], [91, 149], [98, 130], [109, 131], [110, 144], [113, 133], [132, 150], [137, 141]]
> Nombre de cycle(s) trouvé(s) : 21

Itération n° 31 Cassage de contrainte 
> Cycle à casser : [36, 140]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[36,140] + x[140,36] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 126.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 10) (4 -> 125) (5 -> 124) (6 -> 37) (7 -> 78) (8 -> 123) (9 -> 95) (10 -> 46) (11 -> 2) (12 -> 128) (13 -> 81) (14 -> 96) (15 -> 34) (16 -> 39) (17 -> 90) (18 -> 30) (19 -> 13) (20 -> 117) (21 -> 45) (22 -> 52) (23 -> 94) (24 -> 23) (25 -> 9) (26 -> 85) (27 -> 97) (28 -> 26) (29 -> 107) (30 -> 5) (31 -> 60) (32 -> 59) (33 -> 38) (34 -> 63) (35 -> 76) (36 -> 33) (37 -> 65) (38 -> 14) (39 -> 126) (40 -> 12) (41 -> 74) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 137) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 15) (51 -> 42) (52 -> 28) (53 -> 111) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 72) (64 -> 71) (65 -> 51) (66 -> 142) (67 -> 48) (68 -> 93) (69 -> 61) (70 -> 11) (71 -> 64) (72 -> 24) (73 -> 104) (74 -> 84) (75 -> 3) (76 -> 120) (77 -> 103) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 140) (86 -> 50) (87 -> 66) (88 -> 127) (89 -> 129) (90 -> 145) (91 -> 149) (92 -> 143) (93 -> 54) (94 -> 136) (95 -> 67) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 35) (100 -> 19) (101 -> 57) (102 -> 27) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 43) (118 -> 21) (119 -> 148) (120 -> 87) (121 -> 82) (122 -> 32) (123 -> 40) (124 -> 70) (125 -> 86) (126 -> 68) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 17) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 8) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 116) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 67, 48, 75, 3, 10, 46, 137, 141, 138, 53, 111, 118, 21, 45, 105, 58, 122, 32, 59, 41, 74, 84, 119, 148, 16, 39, 126, 68, 93, 54, 146, 116, 29, 107, 99, 35, 76, 120, 87, 66, 142, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 11, 2, 20, 117, 43, 22, 52, 28, 26, 85, 140, 36, 33, 38, 14, 96, 4, 125, 86, 50, 15, 34, 63, 72, 24, 23, 94, 136, 17, 90, 145, 31, 60], [6, 37, 65, 51, 42, 100, 19, 13, 81, 112], [44, 134], [47, 79], [49, 106], [55, 83], [56, 115], [57, 101], [61, 69], [64, 71], [73, 104], [77, 103], [80, 139], [82, 121], [88, 127], [89, 129], [91, 149], [92, 143], [98, 130], [108, 135], [109, 131], [110, 144], [113, 133], [114, 147], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 25

Itération n° 32 Cassage de contrainte 
> Cycle à casser : [44, 134]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[44,134] + x[134,44] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 126.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 10) (4 -> 125) (5 -> 124) (6 -> 112) (7 -> 78) (8 -> 142) (9 -> 26) (10 -> 46) (11 -> 66) (12 -> 40) (13 -> 19) (14 -> 96) (15 -> 50) (16 -> 148) (17 -> 136) (18 -> 30) (19 -> 100) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 72) (25 -> 1) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 85) (33 -> 38) (34 -> 15) (35 -> 99) (36 -> 33) (37 -> 6) (38 -> 105) (39 -> 16) (40 -> 123) (41 -> 59) (42 -> 51) (43 -> 117) (44 -> 134) (45 -> 21) (46 -> 25) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 86) (51 -> 65) (52 -> 22) (53 -> 138) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 31) (61 -> 69) (62 -> 7) (63 -> 34) (64 -> 71) (65 -> 37) (66 -> 87) (67 -> 48) (68 -> 126) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 95) (75 -> 3) (76 -> 35) (77 -> 103) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 13) (82 -> 121) (83 -> 55) (84 -> 147) (85 -> 140) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 23) (95 -> 9) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 128) (103 -> 27) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 12) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 74) (112 -> 81) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 146) (117 -> 20) (118 -> 111) (119 -> 84) (120 -> 76) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 70) (125 -> 41) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 17) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 31, 145, 90, 29, 116, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 86, 67, 48, 75, 3, 10, 46, 25], [2, 11, 66, 87, 120, 76, 35, 99, 107, 12, 40, 123, 8, 142, 17, 136, 94, 23, 24, 72, 32, 85, 140, 36, 33, 38, 105, 45, 21, 118, 111, 74, 95, 9, 26, 28, 52, 22, 43, 117, 20], [4, 125, 41, 59, 77, 103, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96], [6, 112, 81, 13, 19, 100, 42, 51, 65, 37], [47, 79], [49, 106], [53, 138], [55, 83], [57, 101], [58, 122], [61, 69], [64, 71], [73, 104], [80, 139], [82, 121], [88, 127], [89, 129], [91, 149], [92, 143], [98, 130], [102, 128], [109, 131], [110, 144], [113, 133], [132, 150], [137, 141]]
> Nombre de cycle(s) trouvé(s) : 26

Itération n° 33 Cassage de contrainte 
> Cycle à casser : [47, 79]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[47,79] + x[79,47] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 127.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 10) (4 -> 125) (5 -> 124) (6 -> 112) (7 -> 78) (8 -> 123) (9 -> 95) (10 -> 46) (11 -> 2) (12 -> 128) (13 -> 19) (14 -> 96) (15 -> 34) (16 -> 39) (17 -> 90) (18 -> 30) (19 -> 100) (20 -> 140) (21 -> 45) (22 -> 43) (23 -> 94) (24 -> 23) (25 -> 9) (26 -> 85) (27 -> 97) (28 -> 52) (29 -> 107) (30 -> 5) (31 -> 60) (32 -> 72) (33 -> 38) (34 -> 63) (35 -> 76) (36 -> 33) (37 -> 28) (38 -> 14) (39 -> 126) (40 -> 12) (41 -> 74) (42 -> 51) (43 -> 117) (44 -> 115) (45 -> 105) (46 -> 137) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 15) (51 -> 65) (52 -> 22) (53 -> 6) (54 -> 146) (55 -> 83) (56 -> 114) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 135) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 48) (68 -> 93) (69 -> 61) (70 -> 11) (71 -> 64) (72 -> 24) (73 -> 104) (74 -> 111) (75 -> 3) (76 -> 120) (77 -> 59) (78 -> 18) (79 -> 103) (80 -> 139) (81 -> 13) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 26) (86 -> 50) (87 -> 66) (88 -> 127) (89 -> 129) (90 -> 145) (91 -> 149) (92 -> 143) (93 -> 54) (94 -> 136) (95 -> 67) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 35) (100 -> 42) (101 -> 57) (102 -> 27) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 134) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 47) (118 -> 21) (119 -> 148) (120 -> 87) (121 -> 82) (122 -> 32) (123 -> 40) (124 -> 70) (125 -> 86) (126 -> 68) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 17) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 8) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 116) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 67, 48, 75, 3, 10, 46, 137, 141, 138, 53, 6, 112, 81, 13, 19, 100, 42, 51, 65, 37, 28, 52, 22, 43, 117, 47, 79, 103, 77, 59, 41, 74, 111, 118, 21, 45, 105, 58, 122, 32, 72, 24, 23, 94, 136, 17, 90, 145, 31, 60], [2, 20, 140, 36, 33, 38, 14, 96, 4, 125, 86, 50, 15, 34, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 68, 93, 54, 146, 116, 29, 107, 99, 35, 76, 120, 87, 66, 142, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 11], [26, 85], [49, 106], [55, 83], [57, 101], [61, 69], [64, 71], [73, 104], [80, 139], [82, 121], [88, 127], [89, 129], [91, 149], [92, 143], [98, 130], [109, 131], [110, 144], [113, 133], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 20

Itération n° 34 Cassage de contrainte 
> Cycle à casser : [26, 85]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[26,85] + x[85,26] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 127.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 75) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 142) (9 -> 95) (10 -> 3) (11 -> 2) (12 -> 40) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 78) (19 -> 13) (20 -> 140) (21 -> 45) (22 -> 43) (23 -> 94) (24 -> 23) (25 -> 9) (26 -> 28) (27 -> 102) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 60) (32 -> 72) (33 -> 38) (34 -> 15) (35 -> 99) (36 -> 33) (37 -> 65) (38 -> 137) (39 -> 16) (40 -> 123) (41 -> 118) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 86) (51 -> 42) (52 -> 22) (53 -> 138) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 97) (63 -> 34) (64 -> 71) (65 -> 51) (66 -> 87) (67 -> 124) (68 -> 126) (69 -> 61) (70 -> 11) (71 -> 64) (72 -> 24) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 7) (79 -> 103) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 147) (85 -> 26) (86 -> 125) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 145) (91 -> 149) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 74) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 57) (102 -> 128) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 29) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 143) (112 -> 6) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 146) (117 -> 47) (118 -> 21) (119 -> 84) (120 -> 76) (121 -> 82) (122 -> 32) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 12) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 17) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 53) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 111, 143, 92, 85, 26, 28, 52, 22, 43, 117, 47, 79, 103, 77, 59, 41, 118, 21, 45, 105, 58, 122, 32, 72, 24, 23, 94, 136, 17, 90, 145, 31, 60], [2, 20, 140, 36, 33, 38, 137, 46, 10, 3, 75, 48, 67, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 12, 40, 123, 8, 142, 66, 87, 120, 76, 35, 99, 107, 29, 116, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 86, 125, 4, 96, 14, 70, 11], [6, 37, 65, 51, 42, 100, 19, 13, 81, 112], [49, 106], [53, 138, 141], [55, 83], [57, 101], [61, 69], [64, 71], [73, 104], [80, 139], [82, 121], [88, 127], [89, 129], [91, 149], [98, 130], [109, 131], [110, 144], [113, 133], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 20

Itération n° 35 Cassage de contrainte 
> Cycle à casser : [49, 106]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[49,106] + x[106,49] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 128.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 75) (4 -> 125) (5 -> 124) (6 -> 37) (7 -> 78) (8 -> 142) (9 -> 95) (10 -> 3) (11 -> 66) (12 -> 40) (13 -> 81) (14 -> 96) (15 -> 34) (16 -> 39) (17 -> 51) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 118) (22 -> 52) (23 -> 24) (24 -> 72) (25 -> 9) (26 -> 85) (27 -> 97) (28 -> 26) (29 -> 90) (30 -> 5) (31 -> 60) (32 -> 122) (33 -> 38) (34 -> 63) (35 -> 99) (36 -> 33) (37 -> 65) (38 -> 137) (39 -> 126) (40 -> 123) (41 -> 59) (42 -> 100) (43 -> 22) (44 -> 115) (45 -> 21) (46 -> 10) (47 -> 117) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 42) (52 -> 28) (53 -> 141) (54 -> 146) (55 -> 83) (56 -> 114) (57 -> 101) (58 -> 105) (59 -> 77) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 135) (64 -> 71) (65 -> 20) (66 -> 87) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 41) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 140) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 145) (91 -> 149) (92 -> 143) (93 -> 54) (94 -> 136) (95 -> 74) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 57) (102 -> 27) (103 -> 79) (104 -> 73) (105 -> 45) (106 -> 23) (107 -> 12) (108 -> 134) (109 -> 131) (110 -> 144) (111 -> 53) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 43) (118 -> 111) (119 -> 148) (120 -> 76) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 70) (125 -> 94) (126 -> 68) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 17) (137 -> 46) (138 -> 49) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 128) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 116) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}
> Nombre de cycle(s) trouvé(s) : 19

Itération n° 36 Cassage de contrainte 
> Cycle à casser : [55, 83]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[55,83] + x[83,55] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 132.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 29) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 123) (9 -> 25) (10 -> 3) (11 -> 2) (12 -> 107) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 136) (18 -> 78) (19 -> 13) (20 -> 140) (21 -> 45) (22 -> 52) (23 -> 106) (24 -> 23) (25 -> 1) (26 -> 85) (27 -> 102) (28 -> 26) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 38) (34 -> 15) (35 -> 76) (36 -> 33) (37 -> 65) (38 -> 137) (39 -> 16) (40 -> 12) (41 -> 118) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 117) (48 -> 75) (49 -> 138) (50 -> 86) (51 -> 42) (52 -> 28) (53 -> 111) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 31) (61 -> 69) (62 -> 97) (63 -> 34) (64 -> 71) (65 -> 51) (66 -> 11) (67 -> 48) (68 -> 126) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 24) (73 -> 104) (74 -> 95) (75 -> 91) (76 -> 120) (77 -> 59) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 103) (84 -> 147) (85 -> 32) (86 -> 67) (87 -> 66) (88 -> 127) (89 -> 129) (90 -> 17) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 125) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 35) (100 -> 19) (101 -> 57) (102 -> 128) (103 -> 79) (104 -> 73) (105 -> 77) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 74) (112 -> 6) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 146) (117 -> 43) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 40) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 142) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 53) (142 -> 8) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 55) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 31, 145, 90, 17, 136, 94, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 142, 8, 123, 40, 12, 107, 99, 35, 76, 120, 87, 66, 11, 2, 20, 140, 36, 33, 38, 137, 46, 10, 3, 29, 116, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 86, 67, 48, 75, 91, 149, 55, 83, 103, 79, 47, 117, 43, 22, 52, 28, 26, 85, 32, 72, 24, 23, 106, 49, 138, 141, 53, 111, 74, 95, 9, 25], [6, 37, 65, 51, 42, 100, 19, 13, 81, 112], [21, 45, 105, 77, 59, 41, 118], [57, 101], [58, 122], [61, 69], [64, 71], [73, 104], [80, 139], [82, 121], [88, 127], [89, 129], [92, 143], [98, 130], [109, 131], [110, 144], [113, 133], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 18

Itération n° 37 Cassage de contrainte 
> Cycle à casser : [57, 101]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[57,101] + x[101,57] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 134.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 75) (4 -> 96) (5 -> 124) (6 -> 37) (7 -> 78) (8 -> 123) (9 -> 95) (10 -> 3) (11 -> 150) (12 -> 128) (13 -> 81) (14 -> 38) (15 -> 50) (16 -> 148) (17 -> 51) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 52) (23 -> 106) (24 -> 23) (25 -> 9) (26 -> 85) (27 -> 97) (28 -> 26) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 72) (33 -> 57) (34 -> 15) (35 -> 99) (36 -> 33) (37 -> 65) (38 -> 8) (39 -> 16) (40 -> 12) (41 -> 24) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 117) (48 -> 67) (49 -> 138) (50 -> 86) (51 -> 42) (52 -> 28) (53 -> 141) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 34) (64 -> 71) (65 -> 20) (66 -> 142) (67 -> 76) (68 -> 126) (69 -> 61) (70 -> 89) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 103) (84 -> 147) (85 -> 140) (86 -> 125) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 17) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 74) (96 -> 14) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 60) (102 -> 27) (103 -> 79) (104 -> 73) (105 -> 77) (106 -> 49) (107 -> 29) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 6) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 146) (117 -> 43) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 40) (124 -> 70) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 31) (130 -> 98) (131 -> 109) (132 -> 55) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 94) (137 -> 46) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 111, 118, 21, 45, 105, 77, 59, 41, 24, 23, 106, 49, 138, 53, 141, 137, 46, 10, 3, 75, 48, 67, 76, 35, 99, 107, 29, 116, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 86, 125, 4, 96, 14, 38, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 89, 129, 31, 145, 90, 17, 51, 42, 100, 19, 13, 81, 112, 6, 37, 65, 20, 2, 11, 150, 132, 55, 83, 103, 79, 47, 117, 43, 22, 52, 28, 26, 85, 140, 36, 33, 57, 101, 60], [32, 72], [58, 122], [61, 69], [64, 71], [66, 142], [73, 104], [80, 139], [82, 121], [87, 120], [88, 127], [91, 149], [92, 143], [94, 136], [98, 130], [109, 131], [110, 144], [113, 133]]
> Nombre de cycle(s) trouvé(s) : 18

Itération n° 38 Cassage de contrainte 
> Cycle à casser : [32, 72]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[32,72] + x[72,32] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 134.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 10) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 123) (9 -> 95) (10 -> 46) (11 -> 66) (12 -> 40) (13 -> 81) (14 -> 70) (15 -> 34) (16 -> 39) (17 -> 136) (18 -> 78) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 52) (23 -> 24) (24 -> 72) (25 -> 1) (26 -> 9) (27 -> 102) (28 -> 26) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 85) (33 -> 36) (34 -> 63) (35 -> 99) (36 -> 140) (37 -> 65) (38 -> 137) (39 -> 126) (40 -> 12) (41 -> 59) (42 -> 100) (43 -> 22) (44 -> 115) (45 -> 105) (46 -> 25) (47 -> 117) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 42) (52 -> 28) (53 -> 138) (54 -> 93) (55 -> 149) (56 -> 114) (57 -> 33) (58 -> 122) (59 -> 77) (60 -> 101) (61 -> 69) (62 -> 97) (63 -> 135) (64 -> 71) (65 -> 51) (66 -> 87) (67 -> 86) (68 -> 83) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 41) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 92) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 17) (91 -> 75) (92 -> 143) (93 -> 54) (94 -> 125) (95 -> 74) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 57) (102 -> 128) (103 -> 79) (104 -> 73) (105 -> 38) (106 -> 23) (107 -> 29) (108 -> 134) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 146) (117 -> 43) (118 -> 21) (119 -> 148) (120 -> 76) (121 -> 82) (122 -> 58) (123 -> 31) (124 -> 5) (125 -> 4) (126 -> 68) (127 -> 88) (128 -> 142) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 49) (139 -> 80) (140 -> 20) (141 -> 53) (142 -> 8) (143 -> 111) (144 -> 110) (145 -> 90) (146 -> 3) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 101, 57, 33, 36, 140, 20, 2, 11, 66, 87, 120, 76, 35, 99, 107, 29, 116, 146, 3, 10, 46, 25], [4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 142, 8, 123, 31, 145, 90, 17, 136, 94, 125], [6, 37, 65, 51, 42, 100, 19, 13, 81, 112], [9, 95, 74, 41, 59, 77, 103, 79, 47, 117, 43, 22, 52, 28, 26], [12, 40], [15, 34, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 68, 83, 55, 149, 91, 75, 48, 67, 86, 50], [21, 45, 105, 38, 137, 141, 53, 138, 49, 106, 23, 24, 72, 32, 85, 92, 143, 111, 118], [54, 93], [58, 122], [61, 69], [64, 71], [73, 104], [80, 139], [82, 121], [88, 127], [89, 129], [98, 130], [109, 131], [110, 144], [113, 133], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 21

Itération n° 39 Cassage de contrainte 
> Cycle à casser : [12, 40]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[12,40] + x[40,12] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 134.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 75) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 38) (9 -> 25) (10 -> 3) (11 -> 150) (12 -> 40) (13 -> 81) (14 -> 70) (15 -> 34) (16 -> 39) (17 -> 136) (18 -> 93) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 106) (24 -> 23) (25 -> 1) (26 -> 28) (27 -> 102) (28 -> 52) (29 -> 47) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 36) (34 -> 63) (35 -> 99) (36 -> 140) (37 -> 65) (38 -> 137) (39 -> 126) (40 -> 123) (41 -> 78) (42 -> 100) (43 -> 117) (44 -> 115) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 138) (50 -> 15) (51 -> 42) (52 -> 22) (53 -> 111) (54 -> 146) (55 -> 132) (56 -> 114) (57 -> 33) (58 -> 122) (59 -> 41) (60 -> 101) (61 -> 69) (62 -> 97) (63 -> 135) (64 -> 71) (65 -> 51) (66 -> 87) (67 -> 86) (68 -> 83) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 24) (73 -> 104) (74 -> 95) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 7) (79 -> 103) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 26) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 17) (91 -> 149) (92 -> 143) (93 -> 54) (94 -> 125) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 57) (102 -> 128) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 12) (108 -> 134) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 20) (118 -> 21) (119 -> 148) (120 -> 76) (121 -> 82) (122 -> 32) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 68) (127 -> 88) (128 -> 142) (129 -> 31) (130 -> 98) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 85) (141 -> 53) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 116) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 89) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 101, 57, 33, 36, 140, 85, 26, 28, 52, 22, 43, 117, 20, 2, 11, 150, 89, 129, 31, 145, 90, 17, 136, 94, 125, 4, 96, 14, 70, 124, 5, 30, 18, 93, 54, 146, 116, 29, 47, 79, 103, 77, 59, 41, 78, 7, 62, 97, 27, 102, 128, 142, 66, 87, 120, 76, 35, 99, 107, 12, 40, 123, 8, 38, 137, 46, 10, 3, 75, 48, 67, 86, 50, 15, 34, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 68, 83, 55, 132, 74, 95, 9, 25], [6, 37, 65, 51, 42, 100, 19, 13, 81, 112], [21, 45, 105, 58, 122, 32, 72, 24, 23, 106, 49, 138, 141, 53, 111, 118], [61, 69], [64, 71], [73, 104], [80, 139], [82, 121], [88, 127], [91, 149], [92, 143], [98, 130], [109, 131], [110, 144], [113, 133]]
> Nombre de cycle(s) trouvé(s) : 15

Itération n° 40 Cassage de contrainte 
> Cycle à casser : [61, 69]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[61,69] + x[69,61] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 135.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 75) (4 -> 125) (5 -> 124) (6 -> 37) (7 -> 78) (8 -> 123) (9 -> 95) (10 -> 3) (11 -> 150) (12 -> 128) (13 -> 81) (14 -> 96) (15 -> 34) (16 -> 39) (17 -> 51) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 118) (22 -> 52) (23 -> 24) (24 -> 72) (25 -> 9) (26 -> 85) (27 -> 97) (28 -> 26) (29 -> 107) (30 -> 5) (31 -> 145) (32 -> 122) (33 -> 57) (34 -> 63) (35 -> 76) (36 -> 33) (37 -> 65) (38 -> 8) (39 -> 126) (40 -> 12) (41 -> 59) (42 -> 100) (43 -> 22) (44 -> 115) (45 -> 21) (46 -> 10) (47 -> 117) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 42) (52 -> 28) (53 -> 138) (54 -> 146) (55 -> 83) (56 -> 114) (57 -> 101) (58 -> 105) (59 -> 77) (60 -> 1) (61 -> 49) (62 -> 7) (63 -> 135) (64 -> 71) (65 -> 20) (66 -> 142) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 132) (75 -> 48) (76 -> 120) (77 -> 103) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 68) (84 -> 119) (85 -> 140) (86 -> 50) (87 -> 69) (88 -> 127) (89 -> 129) (90 -> 17) (91 -> 149) (92 -> 143) (93 -> 54) (94 -> 136) (95 -> 74) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 35) (100 -> 19) (101 -> 60) (102 -> 27) (103 -> 79) (104 -> 73) (105 -> 45) (106 -> 23) (107 -> 99) (108 -> 134) (109 -> 131) (110 -> 144) (111 -> 53) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 43) (118 -> 111) (119 -> 148) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 40) (124 -> 70) (125 -> 41) (126 -> 38) (127 -> 88) (128 -> 102) (129 -> 31) (130 -> 98) (131 -> 109) (132 -> 55) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 116) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 89) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 132, 55, 83, 68, 93, 54, 146, 116, 29, 107, 99, 35, 76, 120, 87, 69, 61, 49, 106, 23, 24, 72, 32, 122, 58, 105, 45, 21, 118, 111, 53, 138, 141, 137, 46, 10, 3, 75, 48, 67, 86, 50, 15, 34, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 38, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96, 4, 125, 41, 59, 77, 103, 79, 47, 117, 43, 22, 52, 28, 26, 85, 140, 36, 33, 57, 101, 60], [2, 11, 150, 89, 129, 31, 145, 90, 17, 51, 42, 100, 19, 13, 81, 112, 6, 37, 65, 20], [64, 71], [66, 142], [73, 104], [80, 139], [82, 121], [88, 127], [91, 149], [92, 143], [94, 136], [98, 130], [109, 131], [110, 144], [113, 133]]
> Nombre de cycle(s) trouvé(s) : 15

Itération n° 41 Cassage de contrainte 
> Cycle à casser : [64, 71]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[64,71] + x[71,64] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 136.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 10) (4 -> 125) (5 -> 124) (6 -> 112) (7 -> 78) (8 -> 123) (9 -> 95) (10 -> 46) (11 -> 66) (12 -> 128) (13 -> 19) (14 -> 96) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 30) (19 -> 100) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 106) (24 -> 23) (25 -> 1) (26 -> 9) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 5) (31 -> 129) (32 -> 72) (33 -> 36) (34 -> 15) (35 -> 64) (36 -> 140) (37 -> 28) (38 -> 137) (39 -> 16) (40 -> 12) (41 -> 59) (42 -> 51) (43 -> 117) (44 -> 134) (45 -> 21) (46 -> 25) (47 -> 29) (48 -> 75) (49 -> 61) (50 -> 86) (51 -> 65) (52 -> 22) (53 -> 6) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 33) (58 -> 122) (59 -> 77) (60 -> 101) (61 -> 69) (62 -> 7) (63 -> 34) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 48) (68 -> 126) (69 -> 87) (70 -> 14) (71 -> 26) (72 -> 24) (73 -> 104) (74 -> 111) (75 -> 3) (76 -> 35) (77 -> 105) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 13) (82 -> 121) (83 -> 103) (84 -> 147) (85 -> 32) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 150) (90 -> 145) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 74) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 27) (103 -> 79) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 53) (112 -> 81) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 146) (117 -> 20) (118 -> 41) (119 -> 84) (120 -> 76) (121 -> 82) (122 -> 58) (123 -> 40) (124 -> 70) (125 -> 94) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 55) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 17) (137 -> 38) (138 -> 141) (139 -> 80) (140 -> 85) (141 -> 138) (142 -> 8) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 101, 57, 33, 36, 140, 85, 32, 72, 24, 23, 106, 49, 61, 69, 87, 120, 76, 35, 64, 71, 26, 9, 95, 74, 111, 53, 6, 112, 81, 13, 19, 100, 42, 51, 65, 37, 28, 52, 22, 43, 117, 20, 2, 11, 66, 142, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96, 4, 125, 94, 136, 17, 90, 145, 31, 129, 89, 150, 132, 55, 83, 103, 79, 47, 29, 116, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 86, 67, 48, 75, 3, 10, 46, 25], [21, 118, 41, 59, 77, 105, 45], [38, 137], [58, 122], [73, 104], [80, 139], [82, 121], [88, 127], [91, 149], [92, 143], [98, 130], [99, 107], [109, 131], [110, 144], [113, 133], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 16

Itération n° 42 Cassage de contrainte 
> Cycle à casser : [38, 137]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[38,137] + x[137,38] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 136.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 29) (4 -> 125) (5 -> 124) (6 -> 37) (7 -> 78) (8 -> 38) (9 -> 25) (10 -> 3) (11 -> 150) (12 -> 40) (13 -> 81) (14 -> 96) (15 -> 50) (16 -> 148) (17 -> 51) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 118) (22 -> 52) (23 -> 24) (24 -> 72) (25 -> 1) (26 -> 71) (27 -> 97) (28 -> 26) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 122) (33 -> 36) (34 -> 15) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 16) (40 -> 123) (41 -> 59) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 21) (46 -> 10) (47 -> 117) (48 -> 75) (49 -> 106) (50 -> 86) (51 -> 42) (52 -> 28) (53 -> 138) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 31) (58 -> 105) (59 -> 77) (60 -> 101) (61 -> 49) (62 -> 7) (63 -> 34) (64 -> 35) (65 -> 20) (66 -> 142) (67 -> 48) (68 -> 126) (69 -> 61) (70 -> 14) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 95) (75 -> 91) (76 -> 120) (77 -> 103) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 68) (84 -> 147) (85 -> 92) (86 -> 67) (87 -> 69) (88 -> 127) (89 -> 129) (90 -> 17) (91 -> 149) (92 -> 143) (93 -> 54) (94 -> 136) (95 -> 9) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 57) (102 -> 27) (103 -> 79) (104 -> 73) (105 -> 45) (106 -> 23) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 53) (112 -> 6) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 146) (117 -> 43) (118 -> 111) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 70) (125 -> 41) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 85) (141 -> 137) (142 -> 128) (143 -> 12) (144 -> 110) (145 -> 90) (146 -> 66) (147 -> 114) (148 -> 119) (149 -> 55) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 101, 57, 31, 145, 90, 17, 51, 42, 100, 19, 13, 81, 112, 6, 37, 65, 20, 2, 11, 150, 132, 74, 95, 9, 25], [3, 29, 116, 146, 66, 142, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96, 4, 125, 41, 59, 77, 103, 79, 47, 117, 43, 22, 52, 28, 26, 71, 64, 35, 76, 120, 87, 69, 61, 49, 106, 23, 24, 72, 32, 122, 58, 105, 45, 21, 118, 111, 53, 138, 141, 137, 46, 10], [8, 38, 33, 36, 140, 85, 92, 143, 12, 40, 123], [15, 50, 86, 67, 48, 75, 91, 149, 55, 83, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34], [54, 93], [73, 104], [80, 139], [82, 121], [88, 127], [89, 129], [94, 136], [98, 130], [99, 107], [109, 131], [110, 144], [113, 133]]
> Nombre de cycle(s) trouvé(s) : 16

Itération n° 43 Cassage de contrainte 
> Cycle à casser : [54, 93]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[54,93] + x[93,54] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 136.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 75) (4 -> 125) (5 -> 124) (6 -> 53) (7 -> 78) (8 -> 123) (9 -> 95) (10 -> 3) (11 -> 150) (12 -> 128) (13 -> 19) (14 -> 96) (15 -> 34) (16 -> 39) (17 -> 90) (18 -> 30) (19 -> 100) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 106) (24 -> 23) (25 -> 9) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 47) (30 -> 5) (31 -> 60) (32 -> 72) (33 -> 57) (34 -> 63) (35 -> 64) (36 -> 33) (37 -> 6) (38 -> 8) (39 -> 126) (40 -> 12) (41 -> 118) (42 -> 51) (43 -> 117) (44 -> 115) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 61) (50 -> 15) (51 -> 65) (52 -> 22) (53 -> 138) (54 -> 146) (55 -> 83) (56 -> 114) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 135) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 86) (68 -> 93) (69 -> 87) (70 -> 14) (71 -> 26) (72 -> 24) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 18) (79 -> 103) (80 -> 139) (81 -> 13) (82 -> 121) (83 -> 68) (84 -> 119) (85 -> 140) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 145) (91 -> 149) (92 -> 85) (93 -> 54) (94 -> 136) (95 -> 74) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 88) (102 -> 27) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 134) (109 -> 131) (110 -> 144) (111 -> 143) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 20) (118 -> 21) (119 -> 148) (120 -> 76) (121 -> 82) (122 -> 32) (123 -> 40) (124 -> 70) (125 -> 94) (126 -> 38) (127 -> 112) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 55) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 17) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 116) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 111, 143, 92, 85, 140, 36, 33, 57, 101, 88, 127, 112, 81, 13, 19, 100, 42, 51, 65, 37, 6, 53, 138, 141, 137, 46, 10, 3, 75, 48, 67, 86, 50, 15, 34, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 38, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96, 4, 125, 94, 136, 17, 90, 145, 31, 60], [2, 11, 150, 132, 55, 83, 68, 93, 54, 146, 116, 29, 47, 79, 103, 77, 59, 41, 118, 21, 45, 105, 58, 122, 32, 72, 24, 23, 106, 49, 61, 69, 87, 120, 76, 35, 64, 71, 26, 28, 52, 22, 43, 117, 20], [66, 142], [73, 104], [80, 139], [82, 121], [89, 129], [91, 149], [98, 130], [99, 107], [109, 131], [110, 144], [113, 133]]
> Nombre de cycle(s) trouvé(s) : 13

Itération n° 44 Cassage de contrainte 
> Cycle à casser : [66, 142]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[66,142] + x[142,66] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 136.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 10) (4 -> 125) (5 -> 124) (6 -> 112) (7 -> 78) (8 -> 123) (9 -> 25) (10 -> 46) (11 -> 66) (12 -> 128) (13 -> 19) (14 -> 96) (15 -> 50) (16 -> 148) (17 -> 45) (18 -> 30) (19 -> 100) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 106) (24 -> 23) (25 -> 1) (26 -> 85) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 72) (33 -> 36) (34 -> 15) (35 -> 64) (36 -> 140) (37 -> 28) (38 -> 105) (39 -> 16) (40 -> 12) (41 -> 74) (42 -> 51) (43 -> 117) (44 -> 134) (45 -> 21) (46 -> 137) (47 -> 79) (48 -> 75) (49 -> 61) (50 -> 86) (51 -> 65) (52 -> 22) (53 -> 6) (54 -> 93) (55 -> 132) (56 -> 115) (57 -> 33) (58 -> 122) (59 -> 41) (60 -> 101) (61 -> 69) (62 -> 7) (63 -> 34) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 48) (68 -> 126) (69 -> 87) (70 -> 14) (71 -> 26) (72 -> 24) (73 -> 104) (74 -> 95) (75 -> 3) (76 -> 35) (77 -> 59) (78 -> 18) (79 -> 103) (80 -> 139) (81 -> 13) (82 -> 121) (83 -> 55) (84 -> 147) (85 -> 92) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 27) (103 -> 83) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 53) (112 -> 81) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 146) (117 -> 47) (118 -> 111) (119 -> 84) (120 -> 76) (121 -> 77) (122 -> 32) (123 -> 40) (124 -> 70) (125 -> 94) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 31) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 17) (137 -> 38) (138 -> 141) (139 -> 80) (140 -> 20) (141 -> 138) (142 -> 8) (143 -> 82) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 89) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 101, 57, 33, 36, 140, 20, 2, 11, 66, 142, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96, 4, 125, 94, 136, 17, 45, 21, 118, 111, 53, 6, 112, 81, 13, 19, 100, 42, 51, 65, 37, 28, 52, 22, 43, 117, 47, 79, 103, 83, 55, 132, 150, 89, 129, 31, 145, 90, 29, 116, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 86, 67, 48, 75, 3, 10, 46, 137, 38, 105, 58, 122, 32, 72, 24, 23, 106, 49, 61, 69, 87, 120, 76, 35, 64, 71, 26, 85, 92, 143, 82, 121, 77, 59, 41, 74, 95, 9, 25], [73, 104], [80, 139], [88, 127], [91, 149], [98, 130], [99, 107], [109, 131], [110, 144], [113, 133], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 11

Itération n° 45 Cassage de contrainte 
> Cycle à casser : [73, 104]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[73,104] + x[104,73] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 138.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 10) (4 -> 96) (5 -> 30) (6 -> 112) (7 -> 62) (8 -> 123) (9 -> 95) (10 -> 46) (11 -> 2) (12 -> 143) (13 -> 19) (14 -> 70) (15 -> 34) (16 -> 39) (17 -> 90) (18 -> 78) (19 -> 100) (20 -> 140) (21 -> 45) (22 -> 43) (23 -> 24) (24 -> 72) (25 -> 9) (26 -> 71) (27 -> 102) (28 -> 52) (29 -> 3) (30 -> 18) (31 -> 129) (32 -> 122) (33 -> 57) (34 -> 63) (35 -> 76) (36 -> 33) (37 -> 28) (38 -> 8) (39 -> 126) (40 -> 12) (41 -> 118) (42 -> 51) (43 -> 117) (44 -> 115) (45 -> 17) (46 -> 137) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 15) (51 -> 65) (52 -> 22) (53 -> 6) (54 -> 146) (55 -> 83) (56 -> 114) (57 -> 101) (58 -> 105) (59 -> 41) (60 -> 1) (61 -> 49) (62 -> 97) (63 -> 135) (64 -> 35) (65 -> 37) (66 -> 11) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 110) (74 -> 111) (75 -> 48) (76 -> 120) (77 -> 59) (78 -> 7) (79 -> 103) (80 -> 139) (81 -> 13) (82 -> 121) (83 -> 68) (84 -> 119) (85 -> 26) (86 -> 50) (87 -> 69) (88 -> 127) (89 -> 150) (90 -> 145) (91 -> 149) (92 -> 85) (93 -> 54) (94 -> 136) (95 -> 67) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 60) (102 -> 128) (103 -> 77) (104 -> 73) (105 -> 38) (106 -> 23) (107 -> 99) (108 -> 134) (109 -> 131) (110 -> 144) (111 -> 74) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 47) (118 -> 21) (119 -> 148) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 40) (124 -> 5) (125 -> 4) (126 -> 104) (127 -> 88) (128 -> 142) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 55) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 66) (143 -> 92) (144 -> 125) (145 -> 31) (146 -> 116) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 67, 86, 50, 15, 34, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 104, 73, 110, 144, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 142, 66, 11, 2, 20, 140, 36, 33, 57, 101, 60], [3, 10, 46, 137, 141, 138, 53, 6, 112, 81, 13, 19, 100, 42, 51, 65, 37, 28, 52, 22, 43, 117, 47, 79, 103, 77, 59, 41, 118, 21, 45, 17, 90, 145, 31, 129, 89, 150, 132, 55, 83, 68, 93, 54, 146, 116, 29], [8, 123, 40, 12, 143, 92, 85, 26, 71, 64, 35, 76, 120, 87, 69, 61, 49, 106, 23, 24, 72, 32, 122, 58, 105, 38], [48, 75], [74, 111], [80, 139], [82, 121], [88, 127], [91, 149], [94, 136], [98, 130], [99, 107], [109, 131], [113, 133]]
> Nombre de cycle(s) trouvé(s) : 14

Itération n° 46 Cassage de contrainte 
> Cycle à casser : [48, 75]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[48,75] + x[75,48] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 138.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 75) (4 -> 96) (5 -> 124) (6 -> 37) (7 -> 78) (8 -> 123) (9 -> 25) (10 -> 3) (11 -> 150) (12 -> 143) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 136) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 24) (24 -> 72) (25 -> 1) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 122) (33 -> 36) (34 -> 15) (35 -> 64) (36 -> 140) (37 -> 65) (38 -> 8) (39 -> 16) (40 -> 12) (41 -> 118) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 17) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 61) (50 -> 86) (51 -> 42) (52 -> 22) (53 -> 138) (54 -> 146) (55 -> 83) (56 -> 115) (57 -> 33) (58 -> 105) (59 -> 41) (60 -> 101) (61 -> 69) (62 -> 7) (63 -> 34) (64 -> 71) (65 -> 51) (66 -> 142) (67 -> 48) (68 -> 93) (69 -> 87) (70 -> 89) (71 -> 26) (72 -> 32) (73 -> 104) (74 -> 95) (75 -> 91) (76 -> 35) (77 -> 59) (78 -> 18) (79 -> 103) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 68) (84 -> 147) (85 -> 92) (86 -> 125) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 149) (92 -> 85) (93 -> 54) (94 -> 23) (95 -> 9) (96 -> 14) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 57) (102 -> 27) (103 -> 77) (104 -> 126) (105 -> 38) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 73) (111 -> 53) (112 -> 6) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 144) (117 -> 47) (118 -> 21) (119 -> 84) (120 -> 76) (121 -> 82) (122 -> 58) (123 -> 40) (124 -> 106) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 31) (130 -> 98) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 20) (141 -> 137) (142 -> 128) (143 -> 111) (144 -> 110) (145 -> 90) (146 -> 66) (147 -> 114) (148 -> 119) (149 -> 55) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 101, 57, 33, 36, 140, 20, 2, 11, 150, 132, 74, 95, 9, 25], [3, 75, 91, 149, 55, 83, 68, 93, 54, 146, 66, 142, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 106, 49, 61, 69, 87, 120, 76, 35, 64, 71, 26, 28, 52, 22, 43, 117, 47, 79, 103, 77, 59, 41, 118, 21, 45, 17, 136, 94, 23, 24, 72, 32, 122, 58, 105, 38, 8, 123, 40, 12, 143, 111, 53, 138, 141, 137, 46, 10], [4, 96, 14, 70, 89, 129, 31, 145, 90, 29, 116, 144, 110, 73, 104, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 86, 125], [6, 37, 65, 51, 42, 100, 19, 13, 81, 112], [48, 67], [80, 139], [82, 121], [85, 92], [88, 127], [98, 130], [99, 107], [109, 131], [113, 133]]
> Nombre de cycle(s) trouvé(s) : 13

Itération n° 47 Cassage de contrainte 
> Cycle à casser : [48, 67]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[48,67] + x[67,48] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 138.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 29) (4 -> 96) (5 -> 30) (6 -> 53) (7 -> 62) (8 -> 38) (9 -> 95) (10 -> 3) (11 -> 2) (12 -> 40) (13 -> 19) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 78) (19 -> 100) (20 -> 65) (21 -> 118) (22 -> 52) (23 -> 24) (24 -> 72) (25 -> 9) (26 -> 71) (27 -> 102) (28 -> 26) (29 -> 116) (30 -> 18) (31 -> 60) (32 -> 122) (33 -> 36) (34 -> 15) (35 -> 76) (36 -> 140) (37 -> 6) (38 -> 33) (39 -> 16) (40 -> 123) (41 -> 59) (42 -> 51) (43 -> 22) (44 -> 134) (45 -> 21) (46 -> 10) (47 -> 117) (48 -> 67) (49 -> 106) (50 -> 86) (51 -> 17) (52 -> 28) (53 -> 138) (54 -> 93) (55 -> 149) (56 -> 115) (57 -> 101) (58 -> 105) (59 -> 77) (60 -> 1) (61 -> 49) (62 -> 97) (63 -> 34) (64 -> 35) (65 -> 37) (66 -> 146) (67 -> 124) (68 -> 83) (69 -> 61) (70 -> 11) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 120) (77 -> 103) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 13) (82 -> 121) (83 -> 55) (84 -> 147) (85 -> 92) (86 -> 125) (87 -> 69) (88 -> 127) (89 -> 129) (90 -> 145) (91 -> 75) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 74) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 88) (102 -> 128) (103 -> 79) (104 -> 126) (105 -> 45) (106 -> 23) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 73) (111 -> 143) (112 -> 81) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 144) (117 -> 43) (118 -> 41) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 112) (128 -> 142) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 57) (141 -> 137) (142 -> 66) (143 -> 12) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 111, 143, 12, 40, 123, 8, 38, 33, 36, 140, 57, 101, 88, 127, 112, 81, 13, 19, 100, 42, 51, 17, 90, 145, 31, 60], [2, 20, 65, 37, 6, 53, 138, 141, 137, 46, 10, 3, 29, 116, 144, 110, 73, 104, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 86, 125, 4, 96, 14, 70, 11], [5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 142, 66, 146, 54, 93, 68, 83, 55, 149, 91, 75, 48, 67, 124], [21, 118, 41, 59, 77, 103, 79, 47, 117, 43, 22, 52, 28, 26, 71, 64, 35, 76, 120, 87, 69, 61, 49, 106, 23, 24, 72, 32, 122, 58, 105, 45], [80, 139], [82, 121], [85, 92], [89, 129], [94, 136], [98, 130], [99, 107], [109, 131], [113, 133], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 14

Itération n° 48 Cassage de contrainte 
> Cycle à casser : [80, 139]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[80,139] + x[139,80] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 139.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 10) (4 -> 125) (5 -> 124) (6 -> 112) (7 -> 78) (8 -> 123) (9 -> 95) (10 -> 46) (11 -> 66) (12 -> 128) (13 -> 19) (14 -> 96) (15 -> 34) (16 -> 39) (17 -> 90) (18 -> 30) (19 -> 100) (20 -> 2) (21 -> 45) (22 -> 52) (23 -> 106) (24 -> 23) (25 -> 9) (26 -> 85) (27 -> 97) (28 -> 37) (29 -> 3) (30 -> 5) (31 -> 129) (32 -> 72) (33 -> 36) (34 -> 63) (35 -> 64) (36 -> 140) (37 -> 65) (38 -> 33) (39 -> 126) (40 -> 12) (41 -> 59) (42 -> 51) (43 -> 22) (44 -> 115) (45 -> 105) (46 -> 137) (47 -> 117) (48 -> 75) (49 -> 61) (50 -> 15) (51 -> 17) (52 -> 28) (53 -> 6) (54 -> 146) (55 -> 83) (56 -> 114) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 135) (64 -> 71) (65 -> 20) (66 -> 142) (67 -> 48) (68 -> 93) (69 -> 87) (70 -> 14) (71 -> 26) (72 -> 24) (73 -> 104) (74 -> 41) (75 -> 91) (76 -> 35) (77 -> 103) (78 -> 18) (79 -> 47) (80 -> 73) (81 -> 13) (82 -> 121) (83 -> 68) (84 -> 119) (85 -> 92) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 150) (90 -> 145) (91 -> 149) (92 -> 143) (93 -> 54) (94 -> 136) (95 -> 67) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 60) (102 -> 27) (103 -> 79) (104 -> 139) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 134) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 43) (118 -> 21) (119 -> 148) (120 -> 76) (121 -> 82) (122 -> 32) (123 -> 40) (124 -> 70) (125 -> 86) (126 -> 38) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 57) (141 -> 138) (142 -> 8) (143 -> 111) (144 -> 110) (145 -> 31) (146 -> 116) (147 -> 84) (148 -> 16) (149 -> 55) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 67, 48, 75, 91, 149, 55, 83, 68, 93, 54, 146, 116, 29, 3, 10, 46, 137, 141, 138, 53, 6, 112, 81, 13, 19, 100, 42, 51, 17, 90, 145, 31, 129, 89, 150, 132, 74, 41, 59, 77, 103, 79, 47, 117, 43, 22, 52, 28, 37, 65, 20, 2, 11, 66, 142, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96, 4, 125, 86, 50, 15, 34, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 38, 33, 36, 140, 57, 101, 60], [21, 45, 105, 58, 122, 32, 72, 24, 23, 106, 49, 61, 69, 87, 120, 76, 35, 64, 71, 26, 85, 92, 143, 111, 118], [73, 104, 139, 80], [82, 121], [88, 127], [94, 136], [98, 130], [99, 107], [109, 131], [110, 144], [113, 133]]
> Nombre de cycle(s) trouvé(s) : 11

Itération n° 49 Cassage de contrainte 
> Cycle à casser : [82, 121]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[82,121] + x[121,82] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 139.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 29) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 142) (9 -> 95) (10 -> 3) (11 -> 2) (12 -> 40) (13 -> 81) (14 -> 70) (15 -> 34) (16 -> 39) (17 -> 90) (18 -> 78) (19 -> 13) (20 -> 140) (21 -> 45) (22 -> 52) (23 -> 24) (24 -> 72) (25 -> 9) (26 -> 71) (27 -> 102) (28 -> 26) (29 -> 47) (30 -> 18) (31 -> 129) (32 -> 85) (33 -> 57) (34 -> 63) (35 -> 76) (36 -> 33) (37 -> 65) (38 -> 105) (39 -> 126) (40 -> 123) (41 -> 125) (42 -> 100) (43 -> 22) (44 -> 115) (45 -> 17) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 15) (51 -> 42) (52 -> 28) (53 -> 138) (54 -> 146) (55 -> 149) (56 -> 114) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 49) (62 -> 97) (63 -> 135) (64 -> 35) (65 -> 51) (66 -> 11) (67 -> 86) (68 -> 93) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 120) (77 -> 59) (78 -> 7) (79 -> 103) (80 -> 118) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 92) (86 -> 50) (87 -> 69) (88 -> 127) (89 -> 117) (90 -> 145) (91 -> 75) (92 -> 143) (93 -> 54) (94 -> 136) (95 -> 74) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 60) (102 -> 128) (103 -> 83) (104 -> 139) (105 -> 38) (106 -> 23) (107 -> 99) (108 -> 134) (109 -> 131) (110 -> 73) (111 -> 53) (112 -> 6) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 144) (117 -> 43) (118 -> 21) (119 -> 148) (120 -> 87) (121 -> 77) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 68) (127 -> 88) (128 -> 12) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 66) (143 -> 82) (144 -> 110) (145 -> 31) (146 -> 116) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 111, 53, 138, 141, 137, 46, 10, 3, 29, 47, 79, 103, 83, 55, 149, 91, 75, 48, 67, 86, 50, 15, 34, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 68, 93, 54, 146, 116, 144, 110, 73, 104, 139, 80, 118, 21, 45, 17, 90, 145, 31, 129, 89, 117, 43, 22, 52, 28, 26, 71, 64, 35, 76, 120, 87, 69, 61, 49, 106, 23, 24, 72, 32, 85, 92, 143, 82, 121, 77, 59, 41, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 12, 40, 123, 8, 142, 66, 11, 2, 20, 140, 36, 33, 57, 101, 60], [6, 37, 65, 51, 42, 100, 19, 13, 81, 112], [38, 105], [58, 122], [88, 127], [94, 136], [98, 130], [99, 107], [109, 131], [113, 133], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 11

Itération n° 50 Cassage de contrainte 
> Cycle à casser : [38, 105]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[38,105] + x[105,38] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 139.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 75) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 38) (9 -> 142) (10 -> 3) (11 -> 66) (12 -> 40) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 78) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 106) (24 -> 23) (25 -> 46) (26 -> 28) (27 -> 102) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 129) (32 -> 72) (33 -> 57) (34 -> 15) (35 -> 64) (36 -> 33) (37 -> 65) (38 -> 137) (39 -> 16) (40 -> 123) (41 -> 59) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 29) (48 -> 67) (49 -> 61) (50 -> 86) (51 -> 42) (52 -> 22) (53 -> 111) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 1) (61 -> 69) (62 -> 97) (63 -> 34) (64 -> 71) (65 -> 51) (66 -> 146) (67 -> 95) (68 -> 126) (69 -> 87) (70 -> 124) (71 -> 26) (72 -> 24) (73 -> 104) (74 -> 41) (75 -> 48) (76 -> 35) (77 -> 121) (78 -> 7) (79 -> 47) (80 -> 118) (81 -> 112) (82 -> 143) (83 -> 103) (84 -> 147) (85 -> 140) (86 -> 125) (87 -> 120) (88 -> 127) (89 -> 150) (90 -> 145) (91 -> 149) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 60) (102 -> 128) (103 -> 79) (104 -> 139) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 73) (111 -> 74) (112 -> 6) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 144) (117 -> 20) (118 -> 21) (119 -> 84) (120 -> 76) (121 -> 82) (122 -> 32) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 12) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 55) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 17) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 10, 3, 75, 48, 67, 95, 9, 142, 17, 90, 145, 31, 129, 89, 150, 132, 55, 83, 103, 79, 47, 29, 116, 144, 110, 73, 104, 139, 80, 118, 21, 45, 105, 58, 122, 32, 72, 24, 23, 106, 49, 61, 69, 87, 120, 76, 35, 64, 71, 26, 28, 52, 22, 43, 117, 20, 2, 11, 66, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 86, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 12, 40, 123, 8, 38, 137, 141, 138, 53, 111, 74, 41, 59, 77, 121, 82, 143, 92, 85, 140, 36, 33, 57, 101, 60], [6, 37, 65, 51, 42, 100, 19, 13, 81, 112], [88, 127], [91, 149], [94, 136], [98, 130], [99, 107], [109, 131], [113, 133]]
> Nombre de cycle(s) trouvé(s) : 9

Itération n° 51 Cassage de contrainte 
> Cycle à casser : [88, 127]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[88,127] + x[127,88] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 139.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 29) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 38) (9 -> 95) (10 -> 3) (11 -> 66) (12 -> 40) (13 -> 19) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 78) (19 -> 100) (20 -> 2) (21 -> 118) (22 -> 52) (23 -> 24) (24 -> 72) (25 -> 46) (26 -> 71) (27 -> 102) (28 -> 26) (29 -> 116) (30 -> 18) (31 -> 60) (32 -> 122) (33 -> 57) (34 -> 15) (35 -> 76) (36 -> 33) (37 -> 65) (38 -> 137) (39 -> 16) (40 -> 123) (41 -> 59) (42 -> 51) (43 -> 22) (44 -> 134) (45 -> 21) (46 -> 10) (47 -> 117) (48 -> 75) (49 -> 106) (50 -> 86) (51 -> 17) (52 -> 28) (53 -> 6) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 105) (59 -> 77) (60 -> 1) (61 -> 49) (62 -> 97) (63 -> 34) (64 -> 35) (65 -> 20) (66 -> 142) (67 -> 48) (68 -> 126) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 91) (76 -> 120) (77 -> 121) (78 -> 7) (79 -> 47) (80 -> 73) (81 -> 13) (82 -> 143) (83 -> 103) (84 -> 147) (85 -> 140) (86 -> 125) (87 -> 69) (88 -> 127) (89 -> 129) (90 -> 145) (91 -> 149) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 67) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 88) (102 -> 128) (103 -> 79) (104 -> 139) (105 -> 45) (106 -> 23) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 74) (112 -> 81) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 146) (117 -> 43) (118 -> 41) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 112) (128 -> 12) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 9) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 55) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 10, 3, 29, 116, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 86, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 12, 40, 123, 8, 38, 137, 141, 138, 53, 6, 37, 65, 20, 2, 11, 66, 142, 9, 95, 67, 48, 75, 91, 149, 55, 83, 103, 79, 47, 117, 43, 22, 52, 28, 26, 71, 64, 35, 76, 120, 87, 69, 61, 49, 106, 23, 24, 72, 32, 122, 58, 105, 45, 21, 118, 41, 59, 77, 121, 82, 143, 92, 85, 140, 36, 33, 57, 101, 88, 127, 112, 81, 13, 19, 100, 42, 51, 17, 90, 145, 31, 60], [73, 104, 139, 80], [74, 111], [89, 129], [94, 136], [98, 130], [99, 107], [109, 131], [110, 144], [113, 133], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 11

Itération n° 52 Cassage de contrainte 
> Cycle à casser : [74, 111]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[74,111] + x[111,74] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 139.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 75) (4 -> 96) (5 -> 30) (6 -> 53) (7 -> 62) (8 -> 38) (9 -> 25) (10 -> 3) (11 -> 2) (12 -> 40) (13 -> 81) (14 -> 70) (15 -> 34) (16 -> 39) (17 -> 51) (18 -> 78) (19 -> 13) (20 -> 65) (21 -> 45) (22 -> 43) (23 -> 106) (24 -> 23) (25 -> 1) (26 -> 28) (27 -> 102) (28 -> 52) (29 -> 116) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 36) (34 -> 63) (35 -> 64) (36 -> 140) (37 -> 6) (38 -> 137) (39 -> 126) (40 -> 123) (41 -> 125) (42 -> 100) (43 -> 117) (44 -> 115) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 61) (50 -> 15) (51 -> 42) (52 -> 22) (53 -> 111) (54 -> 146) (55 -> 132) (56 -> 114) (57 -> 33) (58 -> 122) (59 -> 41) (60 -> 31) (61 -> 69) (62 -> 97) (63 -> 135) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 86) (68 -> 93) (69 -> 87) (70 -> 124) (71 -> 26) (72 -> 24) (73 -> 104) (74 -> 95) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 7) (79 -> 103) (80 -> 118) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 92) (86 -> 50) (87 -> 120) (88 -> 101) (89 -> 129) (90 -> 29) (91 -> 149) (92 -> 143) (93 -> 54) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 57) (102 -> 128) (103 -> 83) (104 -> 139) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 134) (109 -> 131) (110 -> 73) (111 -> 74) (112 -> 127) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 144) (117 -> 47) (118 -> 21) (119 -> 148) (120 -> 76) (121 -> 77) (122 -> 32) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 68) (127 -> 88) (128 -> 12) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 85) (141 -> 138) (142 -> 17) (143 -> 82) (144 -> 110) (145 -> 90) (146 -> 66) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 11) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 31, 145, 90, 29, 116, 144, 110, 73, 104, 139, 80, 118, 21, 45, 105, 58, 122, 32, 72, 24, 23, 106, 49, 61, 69, 87, 120, 76, 35, 64, 71, 26, 28, 52, 22, 43, 117, 47, 79, 103, 83, 55, 132, 150, 11, 2, 20, 65, 37, 6, 53, 111, 74, 95, 9, 25], [3, 75, 48, 67, 86, 50, 15, 34, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 68, 93, 54, 146, 66, 142, 17, 51, 42, 100, 19, 13, 81, 112, 127, 88, 101, 57, 33, 36, 140, 85, 92, 143, 82, 121, 77, 59, 41, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 12, 40, 123, 8, 38, 137, 46, 10], [89, 129], [91, 149], [94, 136], [98, 130], [99, 107], [109, 131], [113, 133], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 10

Itération n° 53 Cassage de contrainte 
> Cycle à casser : [89, 129]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[89,129] + x[129,89] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 140.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 146) (4 -> 125) (5 -> 124) (6 -> 112) (7 -> 78) (8 -> 123) (9 -> 95) (10 -> 3) (11 -> 66) (12 -> 128) (13 -> 81) (14 -> 96) (15 -> 34) (16 -> 148) (17 -> 90) (18 -> 30) (19 -> 100) (20 -> 2) (21 -> 45) (22 -> 52) (23 -> 106) (24 -> 23) (25 -> 46) (26 -> 9) (27 -> 97) (28 -> 37) (29 -> 47) (30 -> 5) (31 -> 60) (32 -> 72) (33 -> 38) (34 -> 129) (35 -> 64) (36 -> 33) (37 -> 65) (38 -> 137) (39 -> 16) (40 -> 80) (41 -> 59) (42 -> 51) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 61) (50 -> 15) (51 -> 17) (52 -> 28) (53 -> 6) (54 -> 93) (55 -> 149) (56 -> 115) (57 -> 140) (58 -> 122) (59 -> 77) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 19) (64 -> 71) (65 -> 20) (66 -> 142) (67 -> 86) (68 -> 126) (69 -> 87) (70 -> 14) (71 -> 26) (72 -> 24) (73 -> 110) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 121) (78 -> 18) (79 -> 103) (80 -> 139) (81 -> 13) (82 -> 143) (83 -> 55) (84 -> 147) (85 -> 92) (86 -> 50) (87 -> 120) (88 -> 101) (89 -> 117) (90 -> 145) (91 -> 75) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 74) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 27) (103 -> 83) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 118) (112 -> 127) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 29) (117 -> 43) (118 -> 21) (119 -> 84) (120 -> 76) (121 -> 82) (122 -> 32) (123 -> 40) (124 -> 70) (125 -> 41) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 104) (140 -> 36) (141 -> 138) (142 -> 8) (143 -> 12) (144 -> 116) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 10, 3, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 19, 100, 42, 51, 17, 90, 145, 31, 60], [2, 11, 66, 142, 8, 123, 40, 80, 139, 104, 73, 110, 144, 116, 29, 47, 79, 103, 83, 55, 149, 91, 75, 48, 67, 86, 50, 15, 34, 129, 89, 117, 43, 22, 52, 28, 37, 65, 20], [4, 125, 41, 59, 77, 121, 82, 143, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96], [6, 112, 127, 88, 101, 57, 140, 36, 33, 38, 137, 141, 138, 53], [9, 95, 74, 111, 118, 21, 45, 105, 58, 122, 32, 72, 24, 23, 106, 49, 61, 69, 87, 120, 76, 35, 64, 71, 26], [13, 81], [85, 92], [94, 136], [98, 130], [99, 107], [109, 131], [113, 133], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 13

Itération n° 54 Cassage de contrainte 
> Cycle à casser : [13, 81]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[13,81] + x[81,13] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 140.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 75) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 123) (9 -> 25) (10 -> 3) (11 -> 2) (12 -> 143) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 78) (19 -> 13) (20 -> 117) (21 -> 45) (22 -> 52) (23 -> 94) (24 -> 23) (25 -> 1) (26 -> 71) (27 -> 102) (28 -> 26) (29 -> 116) (30 -> 18) (31 -> 129) (32 -> 72) (33 -> 38) (34 -> 15) (35 -> 76) (36 -> 33) (37 -> 65) (38 -> 137) (39 -> 16) (40 -> 12) (41 -> 74) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 29) (48 -> 67) (49 -> 106) (50 -> 86) (51 -> 42) (52 -> 28) (53 -> 6) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 140) (58 -> 122) (59 -> 41) (60 -> 66) (61 -> 49) (62 -> 97) (63 -> 34) (64 -> 35) (65 -> 51) (66 -> 146) (67 -> 95) (68 -> 126) (69 -> 61) (70 -> 11) (71 -> 64) (72 -> 24) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 120) (77 -> 59) (78 -> 7) (79 -> 47) (80 -> 118) (81 -> 112) (82 -> 121) (83 -> 103) (84 -> 147) (85 -> 92) (86 -> 125) (87 -> 69) (88 -> 101) (89 -> 150) (90 -> 145) (91 -> 149) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 57) (102 -> 128) (103 -> 79) (104 -> 139) (105 -> 58) (106 -> 124) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 73) (111 -> 53) (112 -> 127) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 144) (117 -> 43) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 77) (122 -> 32) (123 -> 40) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 142) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 55) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 17) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 8) (143 -> 82) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 66, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 86, 125, 4, 96, 14, 70, 11, 2, 20, 117, 43, 22, 52, 28, 26, 71, 64, 35, 76, 120, 87, 69, 61, 49, 106, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 142, 8, 123, 40, 12, 143, 82, 121, 77, 59, 41, 74, 111, 53, 6, 37, 65, 51, 42, 100, 19, 13, 81, 112, 127, 88, 101, 57, 140, 36, 33, 38, 137, 46, 10, 3, 75, 48, 67, 95, 9, 25], [17, 90, 145, 31, 129, 89, 150, 132, 55, 83, 103, 79, 47, 29, 116, 144, 110, 73, 104, 139, 80, 118, 21, 45, 105, 58, 122, 32, 72, 24, 23, 94, 136], [85, 92], [91, 149], [98, 130], [99, 107], [109, 131], [113, 133], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 9

Itération n° 55 Cassage de contrainte 
> Cycle à casser : [85, 92]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[85,92] + x[92,85] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 140.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 75) (4 -> 125) (5 -> 124) (6 -> 37) (7 -> 78) (8 -> 123) (9 -> 25) (10 -> 3) (11 -> 66) (12 -> 128) (13 -> 81) (14 -> 96) (15 -> 34) (16 -> 39) (17 -> 90) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 106) (24 -> 23) (25 -> 1) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 5) (31 -> 129) (32 -> 72) (33 -> 36) (34 -> 63) (35 -> 64) (36 -> 140) (37 -> 65) (38 -> 137) (39 -> 126) (40 -> 12) (41 -> 74) (42 -> 100) (43 -> 117) (44 -> 115) (45 -> 105) (46 -> 10) (47 -> 29) (48 -> 67) (49 -> 61) (50 -> 15) (51 -> 42) (52 -> 22) (53 -> 6) (54 -> 146) (55 -> 83) (56 -> 114) (57 -> 33) (58 -> 122) (59 -> 41) (60 -> 101) (61 -> 69) (62 -> 7) (63 -> 135) (64 -> 71) (65 -> 51) (66 -> 142) (67 -> 95) (68 -> 93) (69 -> 87) (70 -> 14) (71 -> 26) (72 -> 24) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 18) (79 -> 47) (80 -> 118) (81 -> 112) (82 -> 121) (83 -> 103) (84 -> 119) (85 -> 92) (86 -> 50) (87 -> 120) (88 -> 86) (89 -> 150) (90 -> 145) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 57) (102 -> 27) (103 -> 79) (104 -> 139) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 134) (109 -> 131) (110 -> 73) (111 -> 53) (112 -> 127) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 144) (117 -> 20) (118 -> 21) (119 -> 148) (120 -> 76) (121 -> 77) (122 -> 32) (123 -> 40) (124 -> 70) (125 -> 94) (126 -> 38) (127 -> 88) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 55) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 17) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 85) (141 -> 138) (142 -> 8) (143 -> 82) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 101, 57, 33, 36, 140, 85, 92, 143, 82, 121, 77, 59, 41, 74, 111, 53, 6, 37, 65, 51, 42, 100, 19, 13, 81, 112, 127, 88, 86, 50, 15, 34, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 38, 137, 46, 10, 3, 75, 48, 67, 95, 9, 25], [2, 11, 66, 142, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96, 4, 125, 94, 136, 17, 90, 145, 31, 129, 89, 150, 132, 55, 83, 103, 79, 47, 29, 116, 144, 110, 73, 104, 139, 80, 118, 21, 45, 105, 58, 122, 32, 72, 24, 23, 106, 49, 61, 69, 87, 120, 76, 35, 64, 71, 26, 28, 52, 22, 43, 117, 20], [54, 146], [68, 93], [91, 149], [98, 130], [99, 107], [109, 131], [113, 133], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 10

Itération n° 56 Cassage de contrainte 
> Cycle à casser : [54, 146]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[54,146] + x[146,54] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 140.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 10) (4 -> 125) (5 -> 124) (6 -> 37) (7 -> 78) (8 -> 123) (9 -> 95) (10 -> 46) (11 -> 150) (12 -> 128) (13 -> 19) (14 -> 96) (15 -> 50) (16 -> 148) (17 -> 142) (18 -> 30) (19 -> 100) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 106) (24 -> 23) (25 -> 9) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 72) (33 -> 57) (34 -> 15) (35 -> 64) (36 -> 33) (37 -> 65) (38 -> 8) (39 -> 16) (40 -> 12) (41 -> 59) (42 -> 51) (43 -> 117) (44 -> 134) (45 -> 105) (46 -> 137) (47 -> 79) (48 -> 75) (49 -> 61) (50 -> 86) (51 -> 17) (52 -> 22) (53 -> 6) (54 -> 93) (55 -> 132) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 34) (64 -> 71) (65 -> 20) (66 -> 146) (67 -> 48) (68 -> 126) (69 -> 87) (70 -> 14) (71 -> 26) (72 -> 24) (73 -> 104) (74 -> 111) (75 -> 3) (76 -> 35) (77 -> 121) (78 -> 18) (79 -> 103) (80 -> 118) (81 -> 13) (82 -> 143) (83 -> 55) (84 -> 147) (85 -> 140) (86 -> 88) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 29) (91 -> 149) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 67) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 60) (102 -> 27) (103 -> 83) (104 -> 139) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 73) (111 -> 53) (112 -> 81) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 144) (117 -> 47) (118 -> 21) (119 -> 84) (120 -> 76) (121 -> 82) (122 -> 32) (123 -> 40) (124 -> 70) (125 -> 41) (126 -> 39) (127 -> 112) (128 -> 102) (129 -> 31) (130 -> 98) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 94) (137 -> 38) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 89) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 67, 48, 75, 3, 10, 46, 137, 38, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 14, 96, 4, 125, 41, 59, 77, 121, 82, 143, 92, 85, 140, 36, 33, 57, 101, 60], [2, 11, 150, 89, 129, 31, 145, 90, 29, 116, 144, 110, 73, 104, 139, 80, 118, 21, 45, 105, 58, 122, 32, 72, 24, 23, 106, 49, 61, 69, 87, 120, 76, 35, 64, 71, 26, 28, 52, 22, 43, 117, 47, 79, 103, 83, 55, 132, 74, 111, 53, 6, 37, 65, 20], [13, 19, 100, 42, 51, 17, 142, 66, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 86, 88, 127, 112, 81], [91, 149], [94, 136], [98, 130], [99, 107], [109, 131], [113, 133], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 10

Itération n° 57 Cassage de contrainte 
> Cycle à casser : [91, 149]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[91,149] + x[149,91] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 140.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 29) (4 -> 96) (5 -> 124) (6 -> 53) (7 -> 78) (8 -> 123) (9 -> 25) (10 -> 3) (11 -> 2) (12 -> 128) (13 -> 81) (14 -> 38) (15 -> 50) (16 -> 39) (17 -> 51) (18 -> 30) (19 -> 13) (20 -> 65) (21 -> 45) (22 -> 43) (23 -> 106) (24 -> 23) (25 -> 1) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 72) (33 -> 36) (34 -> 15) (35 -> 64) (36 -> 140) (37 -> 6) (38 -> 137) (39 -> 126) (40 -> 12) (41 -> 24) (42 -> 100) (43 -> 117) (44 -> 115) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 61) (50 -> 86) (51 -> 42) (52 -> 22) (53 -> 111) (54 -> 146) (55 -> 149) (56 -> 114) (57 -> 33) (58 -> 122) (59 -> 41) (60 -> 31) (61 -> 69) (62 -> 7) (63 -> 135) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 95) (68 -> 93) (69 -> 87) (70 -> 89) (71 -> 26) (72 -> 63) (73 -> 104) (74 -> 132) (75 -> 48) (76 -> 35) (77 -> 59) (78 -> 18) (79 -> 103) (80 -> 118) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 92) (86 -> 125) (87 -> 120) (88 -> 101) (89 -> 129) (90 -> 17) (91 -> 75) (92 -> 143) (93 -> 54) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 57) (102 -> 27) (103 -> 83) (104 -> 139) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 134) (109 -> 131) (110 -> 73) (111 -> 74) (112 -> 127) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 144) (117 -> 47) (118 -> 21) (119 -> 148) (120 -> 76) (121 -> 77) (122 -> 32) (123 -> 40) (124 -> 70) (125 -> 4) (126 -> 68) (127 -> 88) (128 -> 102) (129 -> 34) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 85) (141 -> 138) (142 -> 8) (143 -> 82) (144 -> 110) (145 -> 90) (146 -> 66) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 11) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 31, 145, 90, 17, 51, 42, 100, 19, 13, 81, 112, 127, 88, 101, 57, 33, 36, 140, 85, 92, 143, 82, 121, 77, 59, 41, 24, 23, 106, 49, 61, 69, 87, 120, 76, 35, 64, 71, 26, 28, 52, 22, 43, 117, 47, 79, 103, 83, 55, 149, 91, 75, 48, 67, 95, 9, 25], [2, 20, 65, 37, 6, 53, 111, 74, 132, 150, 11], [3, 29, 116, 144, 110, 73, 104, 139, 80, 118, 21, 45, 105, 58, 122, 32, 72, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 68, 93, 54, 146, 66, 142, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 70, 89, 129, 34, 15, 50, 86, 125, 4, 96, 14, 38, 137, 46, 10], [94, 136], [98, 130], [99, 107], [109, 131], [113, 133], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 9

Itération n° 58 Cassage de contrainte 
> Cycle à casser : [94, 136]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[94,136] + x[136,94] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 140.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 29) (4 -> 125) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 142) (9 -> 95) (10 -> 3) (11 -> 14) (12 -> 40) (13 -> 81) (14 -> 96) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 78) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 52) (23 -> 24) (24 -> 72) (25 -> 9) (26 -> 71) (27 -> 102) (28 -> 26) (29 -> 116) (30 -> 18) (31 -> 129) (32 -> 85) (33 -> 36) (34 -> 15) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 137) (39 -> 16) (40 -> 123) (41 -> 118) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 117) (48 -> 75) (49 -> 106) (50 -> 86) (51 -> 42) (52 -> 28) (53 -> 6) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 33) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 49) (62 -> 97) (63 -> 34) (64 -> 35) (65 -> 51) (66 -> 60) (67 -> 48) (68 -> 126) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 111) (75 -> 91) (76 -> 120) (77 -> 59) (78 -> 7) (79 -> 47) (80 -> 73) (81 -> 112) (82 -> 121) (83 -> 103) (84 -> 147) (85 -> 92) (86 -> 67) (87 -> 69) (88 -> 101) (89 -> 70) (90 -> 145) (91 -> 149) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 74) (96 -> 4) (97 -> 27) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 57) (102 -> 128) (103 -> 79) (104 -> 139) (105 -> 38) (106 -> 23) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 144) (111 -> 53) (112 -> 127) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 146) (117 -> 43) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 77) (122 -> 58) (123 -> 8) (124 -> 5) (125 -> 94) (126 -> 39) (127 -> 88) (128 -> 12) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 17) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 20) (141 -> 138) (142 -> 66) (143 -> 82) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 55) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 111, 53, 6, 37, 65, 51, 42, 100, 19, 13, 81, 112, 127, 88, 101, 57, 33, 36, 140, 20, 2, 11, 14, 96, 4, 125, 94, 136, 17, 90, 145, 31, 129, 89, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 12, 40, 123, 8, 142, 66, 60], [3, 29, 116, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 86, 67, 48, 75, 91, 149, 55, 83, 103, 79, 47, 117, 43, 22, 52, 28, 26, 71, 64, 35, 76, 120, 87, 69, 61, 49, 106, 23, 24, 72, 32, 85, 92, 143, 82, 121, 77, 59, 41, 118, 21, 45, 105, 38, 137, 46, 10], [58, 122], [73, 104, 139, 80], [98, 130], [99, 107], [109, 131], [110, 144], [113, 133], [132, 150], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 11

Itération n° 59 Cassage de contrainte 
> Cycle à casser : [58, 122]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[58,122] + x[122,58] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 140.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 10) (4 -> 125) (5 -> 124) (6 -> 53) (7 -> 78) (8 -> 123) (9 -> 25) (10 -> 46) (11 -> 2) (12 -> 128) (13 -> 19) (14 -> 96) (15 -> 34) (16 -> 39) (17 -> 136) (18 -> 30) (19 -> 100) (20 -> 65) (21 -> 118) (22 -> 43) (23 -> 24) (24 -> 72) (25 -> 1) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 90) (30 -> 5) (31 -> 129) (32 -> 122) (33 -> 57) (34 -> 63) (35 -> 64) (36 -> 33) (37 -> 6) (38 -> 14) (39 -> 126) (40 -> 12) (41 -> 59) (42 -> 51) (43 -> 117) (44 -> 115) (45 -> 21) (46 -> 137) (47 -> 79) (48 -> 67) (49 -> 61) (50 -> 15) (51 -> 17) (52 -> 22) (53 -> 111) (54 -> 146) (55 -> 149) (56 -> 114) (57 -> 101) (58 -> 105) (59 -> 77) (60 -> 66) (61 -> 69) (62 -> 7) (63 -> 135) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 86) (68 -> 93) (69 -> 87) (70 -> 11) (71 -> 26) (72 -> 32) (73 -> 110) (74 -> 95) (75 -> 48) (76 -> 35) (77 -> 121) (78 -> 18) (79 -> 103) (80 -> 139) (81 -> 13) (82 -> 143) (83 -> 55) (84 -> 119) (85 -> 140) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 70) (90 -> 145) (91 -> 75) (92 -> 85) (93 -> 54) (94 -> 23) (95 -> 9) (96 -> 4) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 88) (102 -> 27) (103 -> 83) (104 -> 73) (105 -> 45) (106 -> 49) (107 -> 99) (108 -> 134) (109 -> 131) (110 -> 144) (111 -> 74) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 47) (118 -> 80) (119 -> 148) (120 -> 76) (121 -> 82) (122 -> 58) (123 -> 40) (124 -> 106) (125 -> 41) (126 -> 68) (127 -> 112) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 38) (138 -> 141) (139 -> 104) (140 -> 36) (141 -> 138) (142 -> 8) (143 -> 92) (144 -> 116) (145 -> 31) (146 -> 3) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 66, 142, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 106, 49, 61, 69, 87, 120, 76, 35, 64, 71, 26, 28, 52, 22, 43, 117, 47, 79, 103, 83, 55, 149, 91, 75, 48, 67, 86, 50, 15, 34, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 68, 93, 54, 146, 3, 10, 46, 137, 38, 14, 96, 4, 125, 41, 59, 77, 121, 82, 143, 92, 85, 140, 36, 33, 57, 101, 88, 127, 112, 81, 13, 19, 100, 42, 51, 17, 136, 94, 23, 24, 72, 32, 122, 58, 105, 45, 21, 118, 80, 139, 104, 73, 110, 144, 116, 29, 90, 145, 31, 129, 89, 70, 11, 2, 20, 65, 37, 6, 53, 111, 74, 95, 9, 25], [98, 130], [99, 107], [109, 131], [113, 133], [132, 150], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 7

Itération n° 60 Cassage de contrainte 
> Cycle à casser : [98, 130]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[98,130] + x[130,98] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 141.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 146) (4 -> 96) (5 -> 124) (6 -> 53) (7 -> 78) (8 -> 123) (9 -> 25) (10 -> 3) (11 -> 66) (12 -> 128) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 51) (18 -> 30) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 94) (24 -> 23) (25 -> 1) (26 -> 28) (27 -> 97) (28 -> 52) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 98) (33 -> 36) (34 -> 15) (35 -> 64) (36 -> 140) (37 -> 6) (38 -> 137) (39 -> 16) (40 -> 12) (41 -> 59) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 61) (50 -> 86) (51 -> 65) (52 -> 22) (53 -> 111) (54 -> 93) (55 -> 149) (56 -> 115) (57 -> 33) (58 -> 122) (59 -> 77) (60 -> 31) (61 -> 69) (62 -> 7) (63 -> 72) (64 -> 71) (65 -> 37) (66 -> 142) (67 -> 95) (68 -> 126) (69 -> 87) (70 -> 89) (71 -> 26) (72 -> 24) (73 -> 104) (74 -> 41) (75 -> 48) (76 -> 35) (77 -> 121) (78 -> 18) (79 -> 103) (80 -> 118) (81 -> 112) (82 -> 143) (83 -> 55) (84 -> 147) (85 -> 32) (86 -> 125) (87 -> 120) (88 -> 101) (89 -> 129) (90 -> 29) (91 -> 75) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 19) (101 -> 57) (102 -> 27) (103 -> 83) (104 -> 139) (105 -> 58) (106 -> 49) (107 -> 99) (108 -> 135) (109 -> 131) (110 -> 73) (111 -> 74) (112 -> 127) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 144) (117 -> 47) (118 -> 21) (119 -> 84) (120 -> 76) (121 -> 82) (122 -> 42) (123 -> 40) (124 -> 106) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 102) (129 -> 34) (130 -> 38) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 17) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 20) (141 -> 138) (142 -> 8) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 31, 145, 90, 29, 116, 144, 110, 73, 104, 139, 80, 118, 21, 45, 105, 58, 122, 42, 100, 19, 13, 81, 112, 127, 88, 101, 57, 33, 36, 140, 20, 2, 11, 66, 142, 8, 123, 40, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30, 5, 124, 106, 49, 61, 69, 87, 120, 76, 35, 64, 71, 26, 28, 52, 22, 43, 117, 47, 79, 103, 83, 55, 149, 91, 75, 48, 67, 95, 9, 25], [3, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 72, 24, 23, 94, 136, 17, 51, 65, 37, 6, 53, 111, 74, 41, 59, 77, 121, 82, 143, 92, 85, 32, 98, 130, 38, 137, 46, 10], [4, 96, 14, 70, 89, 129, 34, 15, 50, 86, 125], [99, 107], [109, 131], [113, 133], [132, 150], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 8

Itération n° 61 Cassage de contrainte 
> Cycle à casser : [99, 107]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[99,107] + x[107,99] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 142.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 146) (4 -> 125) (5 -> 124) (6 -> 53) (7 -> 78) (8 -> 142) (9 -> 25) (10 -> 3) (11 -> 2) (12 -> 128) (13 -> 19) (14 -> 96) (15 -> 34) (16 -> 39) (17 -> 136) (18 -> 30) (19 -> 100) (20 -> 65) (21 -> 118) (22 -> 52) (23 -> 24) (24 -> 72) (25 -> 1) (26 -> 71) (27 -> 97) (28 -> 26) (29 -> 116) (30 -> 5) (31 -> 145) (32 -> 122) (33 -> 57) (34 -> 129) (35 -> 99) (36 -> 33) (37 -> 6) (38 -> 130) (39 -> 126) (40 -> 123) (41 -> 59) (42 -> 51) (43 -> 22) (44 -> 115) (45 -> 21) (46 -> 10) (47 -> 117) (48 -> 67) (49 -> 61) (50 -> 15) (51 -> 17) (52 -> 28) (53 -> 138) (54 -> 93) (55 -> 149) (56 -> 114) (57 -> 101) (58 -> 105) (59 -> 77) (60 -> 31) (61 -> 69) (62 -> 7) (63 -> 135) (64 -> 121) (65 -> 37) (66 -> 11) (67 -> 86) (68 -> 83) (69 -> 87) (70 -> 14) (71 -> 64) (72 -> 63) (73 -> 104) (74 -> 95) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 18) (79 -> 47) (80 -> 40) (81 -> 13) (82 -> 143) (83 -> 55) (84 -> 119) (85 -> 140) (86 -> 50) (87 -> 120) (88 -> 127) (89 -> 70) (90 -> 29) (91 -> 75) (92 -> 85) (93 -> 68) (94 -> 23) (95 -> 9) (96 -> 4) (97 -> 62) (98 -> 32) (99 -> 107) (100 -> 42) (101 -> 88) (102 -> 27) (103 -> 79) (104 -> 139) (105 -> 45) (106 -> 49) (107 -> 12) (108 -> 134) (109 -> 131) (110 -> 73) (111 -> 74) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 144) (117 -> 43) (118 -> 111) (119 -> 148) (120 -> 76) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 106) (125 -> 41) (126 -> 38) (127 -> 112) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 31, 145, 90, 29, 116, 144, 110, 73, 104, 139, 80, 40, 123, 8, 142, 66, 11, 2, 20, 65, 37, 6, 53, 138, 141, 137, 46, 10, 3, 146, 54, 93, 68, 83, 55, 149, 91, 75, 48, 67, 86, 50, 15, 34, 129, 89, 70, 14, 96, 4, 125, 41, 59, 77, 103, 79, 47, 117, 43, 22, 52, 28, 26, 71, 64, 121, 82, 143, 92, 85, 140, 36, 33, 57, 101, 88, 127, 112, 81, 13, 19, 100, 42, 51, 17, 136, 94, 23, 24, 72, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 38, 130, 98, 32, 122, 58, 105, 45, 21, 118, 111, 74, 95, 9, 25], [5, 124, 106, 49, 61, 69, 87, 120, 76, 35, 99, 107, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30], [109, 131], [113, 133], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 5

Itération n° 62 Cassage de contrainte 
> Cycle à casser : [109, 131]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[109,131] + x[131,109] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 143.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 10) (4 -> 96) (5 -> 30) (6 -> 53) (7 -> 78) (8 -> 142) (9 -> 95) (10 -> 46) (11 -> 2) (12 -> 128) (13 -> 19) (14 -> 70) (15 -> 34) (16 -> 39) (17 -> 136) (18 -> 93) (19 -> 100) (20 -> 117) (21 -> 45) (22 -> 52) (23 -> 106) (24 -> 23) (25 -> 9) (26 -> 71) (27 -> 97) (28 -> 26) (29 -> 3) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 57) (34 -> 63) (35 -> 99) (36 -> 33) (37 -> 6) (38 -> 130) (39 -> 126) (40 -> 123) (41 -> 59) (42 -> 51) (43 -> 22) (44 -> 115) (45 -> 105) (46 -> 137) (47 -> 29) (48 -> 67) (49 -> 61) (50 -> 15) (51 -> 65) (52 -> 28) (53 -> 111) (54 -> 146) (55 -> 149) (56 -> 114) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 135) (64 -> 121) (65 -> 37) (66 -> 11) (67 -> 86) (68 -> 83) (69 -> 87) (70 -> 124) (71 -> 64) (72 -> 24) (73 -> 104) (74 -> 132) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 41) (79 -> 47) (80 -> 40) (81 -> 13) (82 -> 143) (83 -> 55) (84 -> 119) (85 -> 140) (86 -> 88) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 17) (91 -> 75) (92 -> 85) (93 -> 54) (94 -> 125) (95 -> 74) (96 -> 14) (97 -> 62) (98 -> 109) (99 -> 107) (100 -> 42) (101 -> 60) (102 -> 27) (103 -> 79) (104 -> 139) (105 -> 58) (106 -> 49) (107 -> 12) (108 -> 134) (109 -> 131) (110 -> 73) (111 -> 118) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 144) (117 -> 43) (118 -> 21) (119 -> 148) (120 -> 76) (121 -> 82) (122 -> 32) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 68) (127 -> 112) (128 -> 102) (129 -> 31) (130 -> 98) (131 -> 50) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 38) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 116) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 89) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 132, 150, 89, 129, 31, 145, 90, 17, 136, 94, 125, 4, 96, 14, 70, 124, 5, 30, 18, 93, 54, 146, 116, 144, 110, 73, 104, 139, 80, 40, 123, 8, 142, 66, 11, 2, 20, 117, 43, 22, 52, 28, 26, 71, 64, 121, 82, 143, 92, 85, 140, 36, 33, 57, 101, 60], [3, 10, 46, 137, 38, 130, 98, 109, 131, 50, 15, 34, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 68, 83, 55, 149, 91, 75, 48, 67, 86, 88, 127, 112, 81, 13, 19, 100, 42, 51, 65, 37, 6, 53, 111, 118, 21, 45, 105, 58, 122, 32, 72, 24, 23, 106, 49, 61, 69, 87, 120, 76, 35, 99, 107, 12, 128, 102, 27, 97, 62, 7, 78, 41, 59, 77, 103, 79, 47, 29], [113, 133], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 4

Itération n° 63 Cassage de contrainte 
> Cycle à casser : [113, 133]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[113,133] + x[133,113] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 145.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 10) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 78) (8 -> 123) (9 -> 95) (10 -> 46) (11 -> 66) (12 -> 107) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 39) (17 -> 136) (18 -> 93) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 52) (23 -> 24) (24 -> 113) (25 -> 9) (26 -> 71) (27 -> 97) (28 -> 26) (29 -> 90) (30 -> 18) (31 -> 60) (32 -> 72) (33 -> 36) (34 -> 15) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 8) (39 -> 126) (40 -> 12) (41 -> 59) (42 -> 100) (43 -> 22) (44 -> 115) (45 -> 105) (46 -> 137) (47 -> 117) (48 -> 67) (49 -> 106) (50 -> 131) (51 -> 17) (52 -> 28) (53 -> 6) (54 -> 146) (55 -> 149) (56 -> 114) (57 -> 33) (58 -> 122) (59 -> 77) (60 -> 1) (61 -> 49) (62 -> 7) (63 -> 135) (64 -> 121) (65 -> 51) (66 -> 142) (67 -> 86) (68 -> 83) (69 -> 61) (70 -> 89) (71 -> 64) (72 -> 63) (73 -> 80) (74 -> 111) (75 -> 48) (76 -> 120) (77 -> 103) (78 -> 41) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 143) (83 -> 55) (84 -> 119) (85 -> 32) (86 -> 125) (87 -> 69) (88 -> 101) (89 -> 129) (90 -> 145) (91 -> 75) (92 -> 85) (93 -> 54) (94 -> 23) (95 -> 74) (96 -> 14) (97 -> 62) (98 -> 130) (99 -> 35) (100 -> 19) (101 -> 57) (102 -> 27) (103 -> 79) (104 -> 73) (105 -> 58) (106 -> 124) (107 -> 99) (108 -> 134) (109 -> 98) (110 -> 144) (111 -> 118) (112 -> 127) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 43) (118 -> 21) (119 -> 148) (120 -> 87) (121 -> 82) (122 -> 42) (123 -> 40) (124 -> 5) (125 -> 4) (126 -> 68) (127 -> 88) (128 -> 102) (129 -> 34) (130 -> 38) (131 -> 109) (132 -> 150) (133 -> 116) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 104) (140 -> 20) (141 -> 138) (142 -> 128) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 3) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 111, 118, 21, 45, 105, 58, 122, 42, 100, 19, 13, 81, 112, 127, 88, 101, 57, 33, 36, 140, 20, 2, 11, 66, 142, 128, 102, 27, 97, 62, 7, 78, 41, 59, 77, 103, 79, 47, 117, 43, 22, 52, 28, 26, 71, 64, 121, 82, 143, 92, 85, 32, 72, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 68, 83, 55, 149, 91, 75, 48, 67, 86, 125, 4, 96, 14, 70, 89, 129, 34, 15, 50, 131, 109, 98, 130, 38, 8, 123, 40, 12, 107, 99, 35, 76, 120, 87, 69, 61, 49, 106, 124, 5, 30, 18, 93, 54, 146, 3, 10, 46, 137, 141, 138, 53, 6, 37, 65, 51, 17, 136, 94, 23, 24, 113, 133, 116, 29, 90, 145, 31, 60], [73, 80, 139, 104], [110, 144], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 4

Itération n° 64 Cassage de contrainte 
> Cycle à casser : [110, 144]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[110,144] + x[144,110] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 145.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 29) (4 -> 96) (5 -> 124) (6 -> 37) (7 -> 78) (8 -> 142) (9 -> 95) (10 -> 3) (11 -> 66) (12 -> 128) (13 -> 19) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 136) (18 -> 30) (19 -> 100) (20 -> 2) (21 -> 118) (22 -> 52) (23 -> 24) (24 -> 113) (25 -> 46) (26 -> 71) (27 -> 97) (28 -> 26) (29 -> 90) (30 -> 5) (31 -> 60) (32 -> 122) (33 -> 57) (34 -> 15) (35 -> 99) (36 -> 33) (37 -> 65) (38 -> 137) (39 -> 16) (40 -> 123) (41 -> 59) (42 -> 51) (43 -> 22) (44 -> 134) (45 -> 21) (46 -> 10) (47 -> 117) (48 -> 67) (49 -> 61) (50 -> 131) (51 -> 17) (52 -> 28) (53 -> 6) (54 -> 93) (55 -> 149) (56 -> 115) (57 -> 101) (58 -> 105) (59 -> 77) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 72) (64 -> 121) (65 -> 20) (66 -> 146) (67 -> 86) (68 -> 126) (69 -> 87) (70 -> 89) (71 -> 64) (72 -> 32) (73 -> 104) (74 -> 41) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 18) (79 -> 47) (80 -> 40) (81 -> 13) (82 -> 143) (83 -> 55) (84 -> 147) (85 -> 140) (86 -> 125) (87 -> 120) (88 -> 127) (89 -> 129) (90 -> 145) (91 -> 75) (92 -> 85) (93 -> 68) (94 -> 23) (95 -> 74) (96 -> 14) (97 -> 62) (98 -> 130) (99 -> 107) (100 -> 42) (101 -> 88) (102 -> 27) (103 -> 83) (104 -> 139) (105 -> 45) (106 -> 49) (107 -> 12) (108 -> 135) (109 -> 98) (110 -> 73) (111 -> 79) (112 -> 81) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 144) (117 -> 43) (118 -> 111) (119 -> 84) (120 -> 76) (121 -> 82) (122 -> 58) (123 -> 8) (124 -> 106) (125 -> 4) (126 -> 39) (127 -> 112) (128 -> 102) (129 -> 34) (130 -> 38) (131 -> 109) (132 -> 150) (133 -> 116) (134 -> 108) (135 -> 63) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 9) (143 -> 92) (144 -> 110) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 10, 3, 29, 90, 145, 31, 60], [2, 11, 66, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 72, 32, 122, 58, 105, 45, 21, 118, 111, 79, 47, 117, 43, 22, 52, 28, 26, 71, 64, 121, 82, 143, 92, 85, 140, 36, 33, 57, 101, 88, 127, 112, 81, 13, 19, 100, 42, 51, 17, 136, 94, 23, 24, 113, 133, 116, 144, 110, 73, 104, 139, 80, 40, 123, 8, 142, 9, 95, 74, 41, 59, 77, 103, 83, 55, 149, 91, 75, 48, 67, 86, 125, 4, 96, 14, 70, 89, 129, 34, 15, 50, 131, 109, 98, 130, 38, 137, 141, 138, 53, 6, 37, 65, 20], [5, 124, 106, 49, 61, 69, 87, 120, 76, 35, 99, 107, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30], [132, 150]]
> Nombre de cycle(s) trouvé(s) : 4

Itération n° 65 Cassage de contrainte 
> Cycle à casser : [132, 150]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[132,150] + x[150,132] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 145.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 10) (4 -> 125) (5 -> 124) (6 -> 53) (7 -> 78) (8 -> 123) (9 -> 95) (10 -> 46) (11 -> 2) (12 -> 128) (13 -> 19) (14 -> 96) (15 -> 34) (16 -> 39) (17 -> 90) (18 -> 30) (19 -> 100) (20 -> 117) (21 -> 45) (22 -> 52) (23 -> 94) (24 -> 23) (25 -> 9) (26 -> 71) (27 -> 97) (28 -> 26) (29 -> 3) (30 -> 5) (31 -> 60) (32 -> 72) (33 -> 57) (34 -> 129) (35 -> 99) (36 -> 33) (37 -> 6) (38 -> 130) (39 -> 126) (40 -> 80) (41 -> 118) (42 -> 51) (43 -> 22) (44 -> 115) (45 -> 105) (46 -> 137) (47 -> 29) (48 -> 75) (49 -> 61) (50 -> 15) (51 -> 65) (52 -> 28) (53 -> 111) (54 -> 146) (55 -> 83) (56 -> 114) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 69) (62 -> 7) (63 -> 135) (64 -> 121) (65 -> 37) (66 -> 142) (67 -> 48) (68 -> 93) (69 -> 87) (70 -> 14) (71 -> 64) (72 -> 63) (73 -> 110) (74 -> 132) (75 -> 91) (76 -> 35) (77 -> 59) (78 -> 18) (79 -> 47) (80 -> 139) (81 -> 13) (82 -> 143) (83 -> 103) (84 -> 119) (85 -> 140) (86 -> 67) (87 -> 120) (88 -> 127) (89 -> 70) (90 -> 145) (91 -> 149) (92 -> 85) (93 -> 54) (94 -> 136) (95 -> 74) (96 -> 4) (97 -> 62) (98 -> 109) (99 -> 107) (100 -> 42) (101 -> 88) (102 -> 27) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 49) (107 -> 12) (108 -> 134) (109 -> 131) (110 -> 144) (111 -> 79) (112 -> 81) (113 -> 24) (114 -> 147) (115 -> 56) (116 -> 133) (117 -> 43) (118 -> 21) (119 -> 148) (120 -> 76) (121 -> 82) (122 -> 32) (123 -> 40) (124 -> 106) (125 -> 86) (126 -> 68) (127 -> 112) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 50) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 17) (137 -> 38) (138 -> 141) (139 -> 104) (140 -> 36) (141 -> 138) (142 -> 8) (143 -> 92) (144 -> 116) (145 -> 31) (146 -> 66) (147 -> 84) (148 -> 16) (149 -> 55) (150 -> 11) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 132, 150, 11, 2, 20, 117, 43, 22, 52, 28, 26, 71, 64, 121, 82, 143, 92, 85, 140, 36, 33, 57, 101, 88, 127, 112, 81, 13, 19, 100, 42, 51, 65, 37, 6, 53, 111, 79, 47, 29, 3, 10, 46, 137, 38, 130, 98, 109, 131, 50, 15, 34, 129, 89, 70, 14, 96, 4, 125, 86, 67, 48, 75, 91, 149, 55, 83, 103, 77, 59, 41, 118, 21, 45, 105, 58, 122, 32, 72, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 68, 93, 54, 146, 66, 142, 8, 123, 40, 80, 139, 104, 73, 110, 144, 116, 133, 113, 24, 23, 94, 136, 17, 90, 145, 31, 60], [5, 124, 106, 49, 61, 69, 87, 120, 76, 35, 99, 107, 12, 128, 102, 27, 97, 62, 7, 78, 18, 30], [138, 141]]
> Nombre de cycle(s) trouvé(s) : 3

Itération n° 66 Cassage de contrainte 
> Cycle à casser : [138, 141]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[138,141] + x[141,138] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 146.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 29) (4 -> 96) (5 -> 30) (6 -> 53) (7 -> 62) (8 -> 38) (9 -> 25) (10 -> 3) (11 -> 2) (12 -> 128) (13 -> 19) (14 -> 70) (15 -> 34) (16 -> 39) (17 -> 136) (18 -> 78) (19 -> 100) (20 -> 65) (21 -> 45) (22 -> 43) (23 -> 106) (24 -> 23) (25 -> 1) (26 -> 28) (27 -> 102) (28 -> 52) (29 -> 90) (30 -> 18) (31 -> 129) (32 -> 72) (33 -> 36) (34 -> 15) (35 -> 99) (36 -> 140) (37 -> 6) (38 -> 130) (39 -> 126) (40 -> 123) (41 -> 59) (42 -> 51) (43 -> 117) (44 -> 115) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 67) (49 -> 61) (50 -> 86) (51 -> 17) (52 -> 22) (53 -> 138) (54 -> 146) (55 -> 149) (56 -> 114) (57 -> 33) (58 -> 122) (59 -> 77) (60 -> 101) (61 -> 69) (62 -> 97) (63 -> 135) (64 -> 71) (65 -> 37) (66 -> 11) (67 -> 95) (68 -> 93) (69 -> 87) (70 -> 124) (71 -> 26) (72 -> 63) (73 -> 104) (74 -> 41) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 7) (79 -> 111) (80 -> 40) (81 -> 13) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 92) (86 -> 88) (87 -> 120) (88 -> 127) (89 -> 150) (90 -> 145) (91 -> 75) (92 -> 143) (93 -> 54) (94 -> 125) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 109) (99 -> 107) (100 -> 42) (101 -> 57) (102 -> 133) (103 -> 83) (104 -> 139) (105 -> 58) (106 -> 49) (107 -> 12) (108 -> 134) (109 -> 131) (110 -> 73) (111 -> 118) (112 -> 81) (113 -> 24) (114 -> 147) (115 -> 56) (116 -> 144) (117 -> 47) (118 -> 21) (119 -> 148) (120 -> 76) (121 -> 64) (122 -> 32) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 68) (127 -> 112) (128 -> 142) (129 -> 89) (130 -> 98) (131 -> 50) (132 -> 74) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 46) (138 -> 141) (139 -> 80) (140 -> 85) (141 -> 137) (142 -> 66) (143 -> 82) (144 -> 110) (145 -> 31) (146 -> 116) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 101, 57, 33, 36, 140, 85, 92, 143, 82, 121, 64, 71, 26, 28, 52, 22, 43, 117, 47, 79, 111, 118, 21, 45, 105, 58, 122, 32, 72, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 68, 93, 54, 146, 116, 144, 110, 73, 104, 139, 80, 40, 123, 8, 38, 130, 98, 109, 131, 50, 86, 88, 127, 112, 81, 13, 19, 100, 42, 51, 17, 136, 94, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 133, 113, 24, 23, 106, 49, 61, 69, 87, 120, 76, 35, 99, 107, 12, 128, 142, 66, 11, 2, 20, 65, 37, 6, 53, 138, 141, 137, 46, 10, 3, 29, 90, 145, 31, 129, 89, 150, 132, 74, 41, 59, 77, 103, 83, 55, 149, 91, 75, 48, 67, 95, 9, 25], [15, 34]]
> Nombre de cycle(s) trouvé(s) : 2

Itération n° 67 Cassage de contrainte 
> Cycle à casser : [15, 34]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[15,34] + x[34,15] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 146.0
   Permutations :
(1 -> 60) (2 -> 20) (3 -> 10) (4 -> 96) (5 -> 124) (6 -> 53) (7 -> 78) (8 -> 142) (9 -> 25) (10 -> 46) (11 -> 2) (12 -> 128) (13 -> 19) (14 -> 70) (15 -> 34) (16 -> 39) (17 -> 136) (18 -> 30) (19 -> 100) (20 -> 117) (21 -> 45) (22 -> 52) (23 -> 24) (24 -> 113) (25 -> 1) (26 -> 71) (27 -> 97) (28 -> 26) (29 -> 3) (30 -> 5) (31 -> 145) (32 -> 72) (33 -> 57) (34 -> 129) (35 -> 99) (36 -> 33) (37 -> 6) (38 -> 130) (39 -> 126) (40 -> 123) (41 -> 59) (42 -> 51) (43 -> 22) (44 -> 115) (45 -> 105) (46 -> 15) (47 -> 29) (48 -> 67) (49 -> 61) (50 -> 86) (51 -> 65) (52 -> 28) (53 -> 138) (54 -> 93) (55 -> 149) (56 -> 114) (57 -> 101) (58 -> 122) (59 -> 77) (60 -> 31) (61 -> 69) (62 -> 7) (63 -> 135) (64 -> 121) (65 -> 37) (66 -> 146) (67 -> 95) (68 -> 83) (69 -> 87) (70 -> 11) (71 -> 64) (72 -> 63) (73 -> 104) (74 -> 111) (75 -> 48) (76 -> 35) (77 -> 103) (78 -> 41) (79 -> 47) (80 -> 40) (81 -> 13) (82 -> 143) (83 -> 55) (84 -> 119) (85 -> 140) (86 -> 125) (87 -> 120) (88 -> 127) (89 -> 150) (90 -> 17) (91 -> 75) (92 -> 85) (93 -> 18) (94 -> 23) (95 -> 9) (96 -> 14) (97 -> 62) (98 -> 109) (99 -> 107) (100 -> 42) (101 -> 88) (102 -> 27) (103 -> 79) (104 -> 139) (105 -> 58) (106 -> 49) (107 -> 12) (108 -> 134) (109 -> 131) (110 -> 73) (111 -> 118) (112 -> 81) (113 -> 133) (114 -> 147) (115 -> 56) (116 -> 144) (117 -> 43) (118 -> 21) (119 -> 148) (120 -> 76) (121 -> 82) (122 -> 32) (123 -> 8) (124 -> 106) (125 -> 4) (126 -> 68) (127 -> 112) (128 -> 102) (129 -> 89) (130 -> 98) (131 -> 50) (132 -> 74) (133 -> 116) (134 -> 44) (135 -> 108) (136 -> 94) (137 -> 38) (138 -> 141) (139 -> 80) (140 -> 36) (141 -> 137) (142 -> 66) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 84) (148 -> 16) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 31, 145, 90, 17, 136, 94, 23, 24, 113, 133, 116, 144, 110, 73, 104, 139, 80, 40, 123, 8, 142, 66, 146, 54, 93, 18, 30, 5, 124, 106, 49, 61, 69, 87, 120, 76, 35, 99, 107, 12, 128, 102, 27, 97, 62, 7, 78, 41, 59, 77, 103, 79, 47, 29, 3, 10, 46, 15, 34, 129, 89, 150, 132, 74, 111, 118, 21, 45, 105, 58, 122, 32, 72, 63, 135, 108, 134, 44, 115, 56, 114, 147, 84, 119, 148, 16, 39, 126, 68, 83, 55, 149, 91, 75, 48, 67, 95, 9, 25], [2, 20, 117, 43, 22, 52, 28, 26, 71, 64, 121, 82, 143, 92, 85, 140, 36, 33, 57, 101, 88, 127, 112, 81, 13, 19, 100, 42, 51, 65, 37, 6, 53, 138, 141, 137, 38, 130, 98, 109, 131, 50, 86, 125, 4, 96, 14, 70, 11]]
> Nombre de cycle(s) trouvé(s) : 2

Itération n° 68 Cassage de contrainte 
> Cycle à casser : [2, 20, 117, 43, 22, 52, 28, 26, 71, 64, 121, 82, 143, 92, 85, 140, 36, 33, 57, 101, 88, 127, 112, 81, 13, 19, 100, 42, 51, 65, 37, 6, 53, 138, 141, 137, 38, 130, 98, 109, 131, 50, 86, 125, 4, 96, 14, 70, 11]
> Taille du cycle à casser : 49
> Nouvelle contrainte : x[2,20] + x[20,117] + x[117,43] + x[43,22] + x[22,52] + x[52,28] + x[28,26] + x[26,71] + x[71,64] + x[64,121] + x[121,82] + x[82,143] + x[143,92] + x[92,85] + x[85,140] + x[140,36] + x[36,33] + x[33,57] + x[57,101] + x[101,88] + x[88,127] + x[127,112] + x[112,81] + x[81,13] + x[13,19] + x[19,100] + x[100,42] + x[42,51] + x[51,65] + x[65,37] + x[37,6] + x[6,53] + x[53,138] + x[138,141] + x[141,137] + x[137,38] + x[38,130] + x[130,98] + x[98,109] + x[109,131] + x[131,50] + x[50,86] + x[86,125] + x[125,4] + x[4,96] + x[96,14] + x[14,70] + x[70,11] + x[11,2] ≤ 48
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 146.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 10) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 123) (9 -> 95) (10 -> 46) (11 -> 66) (12 -> 107) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 39) (17 -> 51) (18 -> 93) (19 -> 13) (20 -> 2) (21 -> 45) (22 -> 43) (23 -> 94) (24 -> 23) (25 -> 9) (26 -> 28) (27 -> 102) (28 -> 52) (29 -> 90) (30 -> 18) (31 -> 60) (32 -> 72) (33 -> 36) (34 -> 15) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 8) (39 -> 126) (40 -> 80) (41 -> 78) (42 -> 100) (43 -> 117) (44 -> 115) (45 -> 105) (46 -> 137) (47 -> 79) (48 -> 67) (49 -> 106) (50 -> 131) (51 -> 42) (52 -> 22) (53 -> 6) (54 -> 146) (55 -> 149) (56 -> 111) (57 -> 33) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 49) (62 -> 97) (63 -> 135) (64 -> 71) (65 -> 20) (66 -> 142) (67 -> 86) (68 -> 83) (69 -> 61) (70 -> 89) (71 -> 26) (72 -> 63) (73 -> 110) (74 -> 132) (75 -> 48) (76 -> 120) (77 -> 59) (78 -> 7) (79 -> 103) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 119) (85 -> 92) (86 -> 125) (87 -> 69) (88 -> 101) (89 -> 129) (90 -> 145) (91 -> 75) (92 -> 143) (93 -> 54) (94 -> 136) (95 -> 74) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 35) (100 -> 19) (101 -> 57) (102 -> 133) (103 -> 77) (104 -> 73) (105 -> 58) (106 -> 124) (107 -> 99) (108 -> 134) (109 -> 98) (110 -> 144) (111 -> 118) (112 -> 127) (113 -> 24) (114 -> 147) (115 -> 56) (116 -> 29) (117 -> 47) (118 -> 21) (119 -> 148) (120 -> 87) (121 -> 64) (122 -> 32) (123 -> 40) (124 -> 5) (125 -> 4) (126 -> 68) (127 -> 88) (128 -> 12) (129 -> 34) (130 -> 38) (131 -> 109) (132 -> 150) (133 -> 113) (134 -> 44) (135 -> 108) (136 -> 17) (137 -> 141) (138 -> 53) (139 -> 104) (140 -> 85) (141 -> 138) (142 -> 128) (143 -> 82) (144 -> 116) (145 -> 31) (146 -> 3) (147 -> 114) (148 -> 16) (149 -> 91) (150 -> 84) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 9, 95, 74, 132, 150, 84, 119, 148, 16, 39, 126, 68, 83, 55, 149, 91, 75, 48, 67, 86, 125, 4, 96, 14, 70, 89, 129, 34, 15, 50, 131, 109, 98, 130, 38, 8, 123, 40, 80, 139, 104, 73, 110, 144, 116, 29, 90, 145, 31, 60], [2, 11, 66, 142, 128, 12, 107, 99, 35, 76, 120, 87, 69, 61, 49, 106, 124, 5, 30, 18, 93, 54, 146, 3, 10, 46, 137, 141, 138, 53, 6, 37, 65, 20], [7, 62, 97, 27, 102, 133, 113, 24, 23, 94, 136, 17, 51, 42, 100, 19, 13, 81, 112, 127, 88, 101, 57, 33, 36, 140, 85, 92, 143, 82, 121, 64, 71, 26, 28, 52, 22, 43, 117, 47, 79, 103, 77, 59, 41, 78], [21, 45, 105, 58, 122, 32, 72, 63, 135, 108, 134, 44, 115, 56, 111, 118], [114, 147]]
> Nombre de cycle(s) trouvé(s) : 5

Itération n° 69 Cassage de contrainte 
> Cycle à casser : [114, 147]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[114,147] + x[147,114] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 146.0
   Permutations :
(1 -> 25) (2 -> 20) (3 -> 29) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 142) (9 -> 95) (10 -> 3) (11 -> 2) (12 -> 107) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 136) (18 -> 78) (19 -> 13) (20 -> 117) (21 -> 45) (22 -> 52) (23 -> 24) (24 -> 113) (25 -> 46) (26 -> 71) (27 -> 102) (28 -> 26) (29 -> 47) (30 -> 18) (31 -> 145) (32 -> 72) (33 -> 57) (34 -> 15) (35 -> 76) (36 -> 33) (37 -> 65) (38 -> 137) (39 -> 16) (40 -> 123) (41 -> 74) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 105) (46 -> 10) (47 -> 79) (48 -> 75) (49 -> 106) (50 -> 131) (51 -> 42) (52 -> 28) (53 -> 6) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 122) (59 -> 41) (60 -> 1) (61 -> 49) (62 -> 97) (63 -> 34) (64 -> 121) (65 -> 51) (66 -> 146) (67 -> 48) (68 -> 126) (69 -> 61) (70 -> 89) (71 -> 64) (72 -> 63) (73 -> 104) (74 -> 132) (75 -> 91) (76 -> 120) (77 -> 59) (78 -> 7) (79 -> 111) (80 -> 40) (81 -> 112) (82 -> 143) (83 -> 103) (84 -> 147) (85 -> 140) (86 -> 125) (87 -> 66) (88 -> 86) (89 -> 129) (90 -> 17) (91 -> 149) (92 -> 85) (93 -> 68) (94 -> 23) (95 -> 67) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 35) (100 -> 19) (101 -> 60) (102 -> 128) (103 -> 77) (104 -> 139) (105 -> 58) (106 -> 124) (107 -> 99) (108 -> 135) (109 -> 98) (110 -> 73) (111 -> 118) (112 -> 127) (113 -> 133) (114 -> 56) (115 -> 44) (116 -> 144) (117 -> 43) (118 -> 21) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 32) (123 -> 8) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 12) (129 -> 31) (130 -> 38) (131 -> 109) (132 -> 150) (133 -> 116) (134 -> 69) (135 -> 108) (136 -> 94) (137 -> 141) (138 -> 53) (139 -> 80) (140 -> 36) (141 -> 138) (142 -> 9) (143 -> 92) (144 -> 110) (145 -> 90) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 55) (150 -> 11) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 10, 3, 29, 47, 79, 111, 118, 21, 45, 105, 58, 122, 32, 72, 63, 34, 15, 50, 131, 109, 98, 130, 38, 137, 141, 138, 53, 6, 37, 65, 51, 42, 100, 19, 13, 81, 112, 127, 88, 86, 125, 4, 96, 14, 70, 89, 129, 31, 145, 90, 17, 136, 94, 23, 24, 113, 133, 116, 144, 110, 73, 104, 139, 80, 40, 123, 8, 142, 9, 95, 67, 48, 75, 91, 149, 55, 83, 103, 77, 59, 41, 74, 132, 150, 11, 2, 20, 117, 43, 22, 52, 28, 26, 71, 64, 121, 82, 143, 92, 85, 140, 36, 33, 57, 101, 60], [5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 12, 107, 99, 35, 76, 120, 87, 66, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 69, 61, 49, 106, 124], [108, 135]]
> Nombre de cycle(s) trouvé(s) : 3

Itération n° 70 Cassage de contrainte 
> Cycle à casser : [108, 135]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[108,135] + x[135,108] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 146.0
   Permutations :
(1 -> 25) (2 -> 11) (3 -> 29) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 123) (9 -> 142) (10 -> 3) (11 -> 66) (12 -> 107) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 51) (18 -> 78) (19 -> 13) (20 -> 2) (21 -> 118) (22 -> 52) (23 -> 94) (24 -> 72) (25 -> 46) (26 -> 71) (27 -> 102) (28 -> 26) (29 -> 90) (30 -> 18) (31 -> 129) (32 -> 122) (33 -> 57) (34 -> 15) (35 -> 76) (36 -> 33) (37 -> 65) (38 -> 137) (39 -> 16) (40 -> 80) (41 -> 125) (42 -> 100) (43 -> 22) (44 -> 134) (45 -> 21) (46 -> 10) (47 -> 117) (48 -> 75) (49 -> 106) (50 -> 131) (51 -> 42) (52 -> 28) (53 -> 6) (54 -> 93) (55 -> 83) (56 -> 115) (57 -> 101) (58 -> 105) (59 -> 41) (60 -> 1) (61 -> 49) (62 -> 97) (63 -> 34) (64 -> 121) (65 -> 20) (66 -> 146) (67 -> 48) (68 -> 126) (69 -> 61) (70 -> 124) (71 -> 64) (72 -> 32) (73 -> 110) (74 -> 95) (75 -> 91) (76 -> 120) (77 -> 59) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 143) (83 -> 103) (84 -> 147) (85 -> 140) (86 -> 67) (87 -> 69) (88 -> 86) (89 -> 150) (90 -> 145) (91 -> 149) (92 -> 85) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 35) (100 -> 19) (101 -> 60) (102 -> 128) (103 -> 77) (104 -> 73) (105 -> 45) (106 -> 23) (107 -> 99) (108 -> 135) (109 -> 98) (110 -> 144) (111 -> 79) (112 -> 127) (113 -> 24) (114 -> 56) (115 -> 44) (116 -> 133) (117 -> 43) (118 -> 111) (119 -> 84) (120 -> 87) (121 -> 82) (122 -> 58) (123 -> 40) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 12) (129 -> 89) (130 -> 38) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 17) (137 -> 141) (138 -> 53) (139 -> 104) (140 -> 36) (141 -> 138) (142 -> 8) (143 -> 92) (144 -> 116) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 55) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 25, 46, 10, 3, 29, 90, 145, 31, 129, 89, 150, 132, 74, 95, 9, 142, 8, 123, 40, 80, 139, 104, 73, 110, 144, 116, 133, 113, 24, 72, 32, 122, 58, 105, 45, 21, 118, 111, 79, 47, 117, 43, 22, 52, 28, 26, 71, 64, 121, 82, 143, 92, 85, 140, 36, 33, 57, 101, 60], [2, 11, 66, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 131, 109, 98, 130, 38, 137, 141, 138, 53, 6, 37, 65, 20], [4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 12, 107, 99, 35, 76, 120, 87, 69, 61, 49, 106, 23, 94, 136, 17, 51, 42, 100, 19, 13, 81, 112, 127, 88, 86, 67, 48, 75, 91, 149, 55, 83, 103, 77, 59, 41, 125]]
> Nombre de cycle(s) trouvé(s) : 3

Itération n° 71 Cassage de contrainte 
> Cycle à casser : [2, 11, 66, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 131, 109, 98, 130, 38, 137, 141, 138, 53, 6, 37, 65, 20]
> Taille du cycle à casser : 38
> Nouvelle contrainte : x[2,11] + x[11,66] + x[66,146] + x[146,54] + x[54,93] + x[93,68] + x[68,126] + x[126,39] + x[39,16] + x[16,148] + x[148,119] + x[119,84] + x[84,147] + x[147,114] + x[114,56] + x[56,115] + x[115,44] + x[44,134] + x[134,108] + x[108,135] + x[135,63] + x[63,34] + x[34,15] + x[15,50] + x[50,131] + x[131,109] + x[109,98] + x[98,130] + x[130,38] + x[38,137] + x[137,141] + x[141,138] + x[138,53] + x[53,6] + x[6,37] + x[37,65] + x[65,20] + x[20,2] ≤ 37
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 146.0
   Permutations :
(1 -> 60) (2 -> 11) (3 -> 10) (4 -> 96) (5 -> 30) (6 -> 37) (7 -> 62) (8 -> 123) (9 -> 142) (10 -> 46) (11 -> 66) (12 -> 107) (13 -> 81) (14 -> 70) (15 -> 50) (16 -> 148) (17 -> 90) (18 -> 78) (19 -> 13) (20 -> 2) (21 -> 118) (22 -> 43) (23 -> 94) (24 -> 72) (25 -> 1) (26 -> 28) (27 -> 102) (28 -> 52) (29 -> 3) (30 -> 18) (31 -> 129) (32 -> 122) (33 -> 36) (34 -> 15) (35 -> 76) (36 -> 140) (37 -> 65) (38 -> 137) (39 -> 16) (40 -> 80) (41 -> 59) (42 -> 100) (43 -> 117) (44 -> 134) (45 -> 21) (46 -> 25) (47 -> 29) (48 -> 67) (49 -> 106) (50 -> 131) (51 -> 42) (52 -> 22) (53 -> 6) (54 -> 93) (55 -> 149) (56 -> 115) (57 -> 33) (58 -> 105) (59 -> 77) (60 -> 101) (61 -> 49) (62 -> 97) (63 -> 34) (64 -> 71) (65 -> 51) (66 -> 146) (67 -> 95) (68 -> 126) (69 -> 61) (70 -> 124) (71 -> 26) (72 -> 32) (73 -> 110) (74 -> 41) (75 -> 48) (76 -> 120) (77 -> 103) (78 -> 7) (79 -> 47) (80 -> 139) (81 -> 112) (82 -> 121) (83 -> 55) (84 -> 147) (85 -> 92) (86 -> 125) (87 -> 69) (88 -> 86) (89 -> 150) (90 -> 145) (91 -> 75) (92 -> 143) (93 -> 68) (94 -> 136) (95 -> 9) (96 -> 14) (97 -> 27) (98 -> 130) (99 -> 35) (100 -> 19) (101 -> 57) (102 -> 128) (103 -> 83) (104 -> 73) (105 -> 45) (106 -> 23) (107 -> 99) (108 -> 135) (109 -> 98) (110 -> 144) (111 -> 79) (112 -> 127) (113 -> 24) (114 -> 56) (115 -> 44) (116 -> 133) (117 -> 20) (118 -> 111) (119 -> 84) (120 -> 87) (121 -> 64) (122 -> 58) (123 -> 40) (124 -> 5) (125 -> 4) (126 -> 39) (127 -> 88) (128 -> 12) (129 -> 89) (130 -> 38) (131 -> 109) (132 -> 74) (133 -> 113) (134 -> 108) (135 -> 63) (136 -> 17) (137 -> 141) (138 -> 53) (139 -> 104) (140 -> 85) (141 -> 138) (142 -> 8) (143 -> 82) (144 -> 116) (145 -> 31) (146 -> 54) (147 -> 114) (148 -> 119) (149 -> 91) (150 -> 132) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 60, 101, 57, 33, 36, 140, 85, 92, 143, 82, 121, 64, 71, 26, 28, 52, 22, 43, 117, 20, 2, 11, 66, 146, 54, 93, 68, 126, 39, 16, 148, 119, 84, 147, 114, 56, 115, 44, 134, 108, 135, 63, 34, 15, 50, 131, 109, 98, 130, 38, 137, 141, 138, 53, 6, 37, 65, 51, 42, 100, 19, 13, 81, 112, 127, 88, 86, 125, 4, 96, 14, 70, 124, 5, 30, 18, 78, 7, 62, 97, 27, 102, 128, 12, 107, 99, 35, 76, 120, 87, 69, 61, 49, 106, 23, 94, 136, 17, 90, 145, 31, 129, 89, 150, 132, 74, 41, 59, 77, 103, 83, 55, 149, 91, 75, 48, 67, 95, 9, 142, 8, 123, 40, 80, 139, 104, 73, 110, 144, 116, 133, 113, 24, 72, 32, 122, 58, 105, 45, 21, 118, 111, 79, 47, 29, 3, 10, 46, 25]]
> Nombre de cycle(s) trouvé(s) : 1

FIN - Problème résolu :
> temps total = 146.0
> Nombre d'itération nécéssaires : 72
> Nombre de contraintes ajoutées : 71
> Ordre de parcours des drônes : 
1 -> 60 -> 101 -> 57 -> 33 -> 36 -> 140 -> 85 -> 92 -> 143 -> 82 -> 121 -> 64 -> 71 -> 26 -> 28 -> 52 -> 22 -> 43 -> 117 -> 20 -> 2 -> 11 -> 66 -> 146 -> 54 -> 93 -> 68 -> 126 -> 39 -> 16 -> 148 -> 119 -> 84 -> 147 -> 114 -> 56 -> 115 -> 44 -> 134 -> 108 -> 135 -> 63 -> 34 -> 15 -> 50 -> 131 -> 109 -> 98 -> 130 -> 38 -> 137 -> 141 -> 138 -> 53 -> 6 -> 37 -> 65 -> 51 -> 42 -> 100 -> 19 -> 13 -> 81 -> 112 -> 127 -> 88 -> 86 -> 125 -> 4 -> 96 -> 14 -> 70 -> 124 -> 5 -> 30 -> 18 -> 78 -> 7 -> 62 -> 97 -> 27 -> 102 -> 128 -> 12 -> 107 -> 99 -> 35 -> 76 -> 120 -> 87 -> 69 -> 61 -> 49 -> 106 -> 23 -> 94 -> 136 -> 17 -> 90 -> 145 -> 31 -> 129 -> 89 -> 150 -> 132 -> 74 -> 41 -> 59 -> 77 -> 103 -> 83 -> 55 -> 149 -> 91 -> 75 -> 48 -> 67 -> 95 -> 9 -> 142 -> 8 -> 123 -> 40 -> 80 -> 139 -> 104 -> 73 -> 110 -> 144 -> 116 -> 133 -> 113 -> 24 -> 72 -> 32 -> 122 -> 58 -> 105 -> 45 -> 21 -> 118 -> 111 -> 79 -> 47 -> 29 -> 3 -> 10 -> 46 -> 25 -> 1. 
