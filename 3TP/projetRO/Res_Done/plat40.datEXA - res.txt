Résolution exacte pour plat/plat40.dat points à visiter :
Résolution d'initiale :  
> temps total = 152.0
   Permutations :
(1 -> 4) (2 -> 18) (3 -> 11) (4 -> 1) (5 -> 31) (6 -> 25) (7 -> 29) (8 -> 16) (9 -> 33) (10 -> 32) (11 -> 3) (12 -> 28) (13 -> 30) (14 -> 19) (15 -> 24) (16 -> 8) (17 -> 23) (18 -> 2) (19 -> 14) (20 -> 35) (21 -> 22) (22 -> 21) (23 -> 17) (24 -> 15) (25 -> 6) (26 -> 36) (27 -> 34) (28 -> 12) (29 -> 7) (30 -> 13) (31 -> 5) (32 -> 10) (33 -> 9) (34 -> 27) (35 -> 20) (36 -> 26) (37 -> 40) (38 -> 39) (39 -> 38) (40 -> 37) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 4], [2, 18], [3, 11], [5, 31], [6, 25], [7, 29], [8, 16], [9, 33], [10, 32], [12, 28], [13, 30], [14, 19], [15, 24], [17, 23], [20, 35], [21, 22], [26, 36], [27, 34], [37, 40], [38, 39]]
> Nombre de cycle(s) trouvé(s) : 20
Itération n° 1 Cassage de contrainte 
> Cycle à casser : [1, 4]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[1,4] + x[4,1] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 156.0
   Permutations :
(1 -> 4) (2 -> 18) (3 -> 11) (4 -> 14) (5 -> 31) (6 -> 25) (7 -> 29) (8 -> 16) (9 -> 33) (10 -> 32) (11 -> 3) (12 -> 28) (13 -> 1) (14 -> 15) (15 -> 24) (16 -> 30) (17 -> 8) (18 -> 2) (19 -> 38) (20 -> 35) (21 -> 22) (22 -> 21) (23 -> 17) (24 -> 23) (25 -> 6) (26 -> 36) (27 -> 34) (28 -> 12) (29 -> 7) (30 -> 13) (31 -> 5) (32 -> 10) (33 -> 9) (34 -> 27) (35 -> 20) (36 -> 26) (37 -> 40) (38 -> 39) (39 -> 19) (40 -> 37) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 4, 14, 15, 24, 23, 17, 8, 16, 30, 13], [2, 18], [3, 11], [5, 31], [6, 25], [7, 29], [9, 33], [10, 32], [12, 28], [19, 38, 39], [20, 35], [21, 22], [26, 36], [27, 34], [37, 40]]
> Nombre de cycle(s) trouvé(s) : 15

Itération n° 2 Cassage de contrainte 
> Cycle à casser : [2, 18]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[2,18] + x[18,2] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 162.0
   Permutations :
(1 -> 13) (2 -> 18) (3 -> 11) (4 -> 1) (5 -> 31) (6 -> 25) (7 -> 10) (8 -> 17) (9 -> 33) (10 -> 32) (11 -> 3) (12 -> 28) (13 -> 30) (14 -> 4) (15 -> 14) (16 -> 8) (17 -> 23) (18 -> 29) (19 -> 38) (20 -> 35) (21 -> 22) (22 -> 21) (23 -> 24) (24 -> 15) (25 -> 6) (26 -> 36) (27 -> 34) (28 -> 12) (29 -> 7) (30 -> 16) (31 -> 5) (32 -> 20) (33 -> 9) (34 -> 27) (35 -> 40) (36 -> 26) (37 -> 2) (38 -> 39) (39 -> 19) (40 -> 37) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 13, 30, 16, 8, 17, 23, 24, 15, 14, 4], [2, 18, 29, 7, 10, 32, 20, 35, 40, 37], [3, 11], [5, 31], [6, 25], [9, 33], [12, 28], [19, 38, 39], [21, 22], [26, 36], [27, 34]]
> Nombre de cycle(s) trouvé(s) : 11

Itération n° 3 Cassage de contrainte 
> Cycle à casser : [3, 11]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[3,11] + x[11,3] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 165.0
   Permutations :
(1 -> 4) (2 -> 18) (3 -> 11) (4 -> 14) (5 -> 31) (6 -> 25) (7 -> 10) (8 -> 16) (9 -> 33) (10 -> 32) (11 -> 15) (12 -> 28) (13 -> 1) (14 -> 3) (15 -> 24) (16 -> 30) (17 -> 8) (18 -> 29) (19 -> 38) (20 -> 35) (21 -> 22) (22 -> 21) (23 -> 17) (24 -> 23) (25 -> 6) (26 -> 36) (27 -> 34) (28 -> 12) (29 -> 7) (30 -> 13) (31 -> 5) (32 -> 20) (33 -> 9) (34 -> 27) (35 -> 40) (36 -> 26) (37 -> 2) (38 -> 39) (39 -> 19) (40 -> 37) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 4, 14, 3, 11, 15, 24, 23, 17, 8, 16, 30, 13], [2, 18, 29, 7, 10, 32, 20, 35, 40, 37], [5, 31], [6, 25], [9, 33], [12, 28], [19, 38, 39], [21, 22], [26, 36], [27, 34]]
> Nombre de cycle(s) trouvé(s) : 10

Itération n° 4 Cassage de contrainte 
> Cycle à casser : [5, 31]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[5,31] + x[31,5] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 171.0
   Permutations :
(1 -> 4) (2 -> 37) (3 -> 11) (4 -> 14) (5 -> 31) (6 -> 25) (7 -> 29) (8 -> 16) (9 -> 33) (10 -> 32) (11 -> 38) (12 -> 28) (13 -> 1) (14 -> 3) (15 -> 24) (16 -> 30) (17 -> 8) (18 -> 2) (19 -> 18) (20 -> 35) (21 -> 22) (22 -> 21) (23 -> 17) (24 -> 23) (25 -> 6) (26 -> 36) (27 -> 34) (28 -> 12) (29 -> 7) (30 -> 13) (31 -> 15) (32 -> 10) (33 -> 9) (34 -> 27) (35 -> 20) (36 -> 26) (37 -> 40) (38 -> 39) (39 -> 19) (40 -> 5) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 4, 14, 3, 11, 38, 39, 19, 18, 2, 37, 40, 5, 31, 15, 24, 23, 17, 8, 16, 30, 13], [6, 25], [7, 29], [9, 33], [10, 32], [12, 28], [20, 35], [21, 22], [26, 36], [27, 34]]
> Nombre de cycle(s) trouvé(s) : 10

Itération n° 5 Cassage de contrainte 
> Cycle à casser : [6, 25]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[6,25] + x[25,6] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 175.0
   Permutations :
(1 -> 4) (2 -> 18) (3 -> 11) (4 -> 14) (5 -> 40) (6 -> 25) (7 -> 29) (8 -> 16) (9 -> 17) (10 -> 32) (11 -> 31) (12 -> 28) (13 -> 1) (14 -> 3) (15 -> 24) (16 -> 30) (17 -> 8) (18 -> 6) (19 -> 38) (20 -> 35) (21 -> 22) (22 -> 21) (23 -> 15) (24 -> 23) (25 -> 33) (26 -> 36) (27 -> 34) (28 -> 12) (29 -> 7) (30 -> 13) (31 -> 5) (32 -> 10) (33 -> 9) (34 -> 27) (35 -> 20) (36 -> 26) (37 -> 2) (38 -> 39) (39 -> 19) (40 -> 37) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 4, 14, 3, 11, 31, 5, 40, 37, 2, 18, 6, 25, 33, 9, 17, 8, 16, 30, 13], [7, 29], [10, 32], [12, 28], [15, 24, 23], [19, 38, 39], [20, 35], [21, 22], [26, 36], [27, 34]]
> Nombre de cycle(s) trouvé(s) : 10

Itération n° 6 Cassage de contrainte 
> Cycle à casser : [7, 29]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[7,29] + x[29,7] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 175.0
   Permutations :
(1 -> 13) (2 -> 37) (3 -> 14) (4 -> 1) (5 -> 31) (6 -> 25) (7 -> 29) (8 -> 16) (9 -> 33) (10 -> 7) (11 -> 3) (12 -> 28) (13 -> 30) (14 -> 4) (15 -> 24) (16 -> 8) (17 -> 23) (18 -> 2) (19 -> 38) (20 -> 32) (21 -> 22) (22 -> 21) (23 -> 17) (24 -> 15) (25 -> 35) (26 -> 36) (27 -> 34) (28 -> 12) (29 -> 18) (30 -> 6) (31 -> 11) (32 -> 10) (33 -> 9) (34 -> 27) (35 -> 20) (36 -> 26) (37 -> 40) (38 -> 39) (39 -> 19) (40 -> 5) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 13, 30, 6, 25, 35, 20, 32, 10, 7, 29, 18, 2, 37, 40, 5, 31, 11, 3, 14, 4], [8, 16], [9, 33], [12, 28], [15, 24], [17, 23], [19, 38, 39], [21, 22], [26, 36], [27, 34]]
> Nombre de cycle(s) trouvé(s) : 10

Itération n° 7 Cassage de contrainte 
> Cycle à casser : [8, 16]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[8,16] + x[16,8] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 177.0
   Permutations :
(1 -> 13) (2 -> 37) (3 -> 35) (4 -> 1) (5 -> 31) (6 -> 18) (7 -> 29) (8 -> 17) (9 -> 33) (10 -> 7) (11 -> 3) (12 -> 28) (13 -> 30) (14 -> 4) (15 -> 23) (16 -> 8) (17 -> 9) (18 -> 2) (19 -> 38) (20 -> 32) (21 -> 22) (22 -> 21) (23 -> 24) (24 -> 15) (25 -> 6) (26 -> 36) (27 -> 34) (28 -> 12) (29 -> 14) (30 -> 16) (31 -> 11) (32 -> 10) (33 -> 25) (34 -> 27) (35 -> 20) (36 -> 26) (37 -> 40) (38 -> 39) (39 -> 19) (40 -> 5) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 13, 30, 16, 8, 17, 9, 33, 25, 6, 18, 2, 37, 40, 5, 31, 11, 3, 35, 20, 32, 10, 7, 29, 14, 4], [12, 28], [15, 23, 24], [19, 38, 39], [21, 22], [26, 36], [27, 34]]
> Nombre de cycle(s) trouvé(s) : 7

Itération n° 8 Cassage de contrainte 
> Cycle à casser : [12, 28]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[12,28] + x[28,12] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 180.0
   Permutations :
(1 -> 13) (2 -> 4) (3 -> 11) (4 -> 1) (5 -> 22) (6 -> 18) (7 -> 10) (8 -> 17) (9 -> 33) (10 -> 32) (11 -> 31) (12 -> 28) (13 -> 30) (14 -> 29) (15 -> 24) (16 -> 8) (17 -> 9) (18 -> 2) (19 -> 38) (20 -> 35) (21 -> 12) (22 -> 21) (23 -> 15) (24 -> 23) (25 -> 6) (26 -> 36) (27 -> 34) (28 -> 14) (29 -> 7) (30 -> 16) (31 -> 5) (32 -> 20) (33 -> 25) (34 -> 27) (35 -> 3) (36 -> 26) (37 -> 40) (38 -> 39) (39 -> 19) (40 -> 37) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 13, 30, 16, 8, 17, 9, 33, 25, 6, 18, 2, 4], [3, 11, 31, 5, 22, 21, 12, 28, 14, 29, 7, 10, 32, 20, 35], [15, 24, 23], [19, 38, 39], [26, 36], [27, 34], [37, 40]]
> Nombre de cycle(s) trouvé(s) : 7

Itération n° 9 Cassage de contrainte 
> Cycle à casser : [26, 36]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[26,36] + x[36,26] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 188.0
   Permutations :
(1 -> 4) (2 -> 18) (3 -> 11) (4 -> 14) (5 -> 31) (6 -> 30) (7 -> 10) (8 -> 17) (9 -> 33) (10 -> 32) (11 -> 38) (12 -> 21) (13 -> 1) (14 -> 3) (15 -> 23) (16 -> 8) (17 -> 9) (18 -> 29) (19 -> 39) (20 -> 35) (21 -> 22) (22 -> 5) (23 -> 24) (24 -> 26) (25 -> 6) (26 -> 36) (27 -> 34) (28 -> 12) (29 -> 7) (30 -> 16) (31 -> 15) (32 -> 20) (33 -> 25) (34 -> 27) (35 -> 40) (36 -> 13) (37 -> 2) (38 -> 19) (39 -> 28) (40 -> 37) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 4, 14, 3, 11, 38, 19, 39, 28, 12, 21, 22, 5, 31, 15, 23, 24, 26, 36, 13], [2, 18, 29, 7, 10, 32, 20, 35, 40, 37], [6, 30, 16, 8, 17, 9, 33, 25], [27, 34]]
> Nombre de cycle(s) trouvé(s) : 4

Itération n° 10 Cassage de contrainte 
> Cycle à casser : [27, 34]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[27,34] + x[34,27] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 189.0
   Permutations :
(1 -> 4) (2 -> 18) (3 -> 11) (4 -> 14) (5 -> 31) (6 -> 25) (7 -> 10) (8 -> 16) (9 -> 17) (10 -> 32) (11 -> 38) (12 -> 21) (13 -> 1) (14 -> 27) (15 -> 23) (16 -> 30) (17 -> 8) (18 -> 29) (19 -> 39) (20 -> 35) (21 -> 22) (22 -> 5) (23 -> 24) (24 -> 26) (25 -> 33) (26 -> 36) (27 -> 34) (28 -> 12) (29 -> 7) (30 -> 6) (31 -> 15) (32 -> 20) (33 -> 9) (34 -> 40) (35 -> 3) (36 -> 13) (37 -> 2) (38 -> 19) (39 -> 28) (40 -> 37) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 4, 14, 27, 34, 40, 37, 2, 18, 29, 7, 10, 32, 20, 35, 3, 11, 38, 19, 39, 28, 12, 21, 22, 5, 31, 15, 23, 24, 26, 36, 13], [6, 25, 33, 9, 17, 8, 16, 30]]
> Nombre de cycle(s) trouvé(s) : 2

Itération n° 11 Cassage de contrainte 
> Cycle à casser : [6, 25, 33, 9, 17, 8, 16, 30]
> Taille du cycle à casser : 8
> Nouvelle contrainte : x[6,25] + x[25,33] + x[33,9] + x[9,17] + x[17,8] + x[8,16] + x[16,30] + x[30,6] ≤ 7
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 189.0
   Permutations :
(1 -> 4) (2 -> 18) (3 -> 11) (4 -> 14) (5 -> 31) (6 -> 30) (7 -> 10) (8 -> 17) (9 -> 33) (10 -> 32) (11 -> 38) (12 -> 21) (13 -> 1) (14 -> 27) (15 -> 23) (16 -> 8) (17 -> 9) (18 -> 29) (19 -> 39) (20 -> 35) (21 -> 22) (22 -> 5) (23 -> 24) (24 -> 26) (25 -> 6) (26 -> 36) (27 -> 34) (28 -> 12) (29 -> 7) (30 -> 16) (31 -> 15) (32 -> 20) (33 -> 25) (34 -> 40) (35 -> 3) (36 -> 13) (37 -> 2) (38 -> 19) (39 -> 28) (40 -> 37) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 4, 14, 27, 34, 40, 37, 2, 18, 29, 7, 10, 32, 20, 35, 3, 11, 38, 19, 39, 28, 12, 21, 22, 5, 31, 15, 23, 24, 26, 36, 13], [6, 30, 16, 8, 17, 9, 33, 25]]
> Nombre de cycle(s) trouvé(s) : 2

Itération n° 12 Cassage de contrainte 
> Cycle à casser : [6, 30, 16, 8, 17, 9, 33, 25]
> Taille du cycle à casser : 8
> Nouvelle contrainte : x[6,30] + x[30,16] + x[16,8] + x[8,17] + x[17,9] + x[9,33] + x[33,25] + x[25,6] ≤ 7
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 190.0
   Permutations :
(1 -> 13) (2 -> 37) (3 -> 35) (4 -> 1) (5 -> 22) (6 -> 30) (7 -> 29) (8 -> 17) (9 -> 33) (10 -> 7) (11 -> 3) (12 -> 28) (13 -> 36) (14 -> 4) (15 -> 31) (16 -> 8) (17 -> 23) (18 -> 2) (19 -> 38) (20 -> 32) (21 -> 12) (22 -> 21) (23 -> 24) (24 -> 15) (25 -> 6) (26 -> 25) (27 -> 14) (28 -> 39) (29 -> 18) (30 -> 16) (31 -> 5) (32 -> 10) (33 -> 9) (34 -> 27) (35 -> 20) (36 -> 26) (37 -> 40) (38 -> 11) (39 -> 19) (40 -> 34) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 13, 36, 26, 25, 6, 30, 16, 8, 17, 23, 24, 15, 31, 5, 22, 21, 12, 28, 39, 19, 38, 11, 3, 35, 20, 32, 10, 7, 29, 18, 2, 37, 40, 34, 27, 14, 4], [9, 33]]
> Nombre de cycle(s) trouvé(s) : 2

Itération n° 13 Cassage de contrainte 
> Cycle à casser : [9, 33]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[9,33] + x[33,9] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 191.0
   Permutations :
(1 -> 13) (2 -> 37) (3 -> 11) (4 -> 1) (5 -> 22) (6 -> 30) (7 -> 29) (8 -> 17) (9 -> 33) (10 -> 7) (11 -> 31) (12 -> 28) (13 -> 36) (14 -> 4) (15 -> 24) (16 -> 8) (17 -> 9) (18 -> 2) (19 -> 38) (20 -> 32) (21 -> 12) (22 -> 21) (23 -> 15) (24 -> 23) (25 -> 6) (26 -> 25) (27 -> 10) (28 -> 14) (29 -> 18) (30 -> 16) (31 -> 5) (32 -> 20) (33 -> 35) (34 -> 27) (35 -> 3) (36 -> 26) (37 -> 40) (38 -> 39) (39 -> 19) (40 -> 34) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 13, 36, 26, 25, 6, 30, 16, 8, 17, 9, 33, 35, 3, 11, 31, 5, 22, 21, 12, 28, 14, 4], [2, 37, 40, 34, 27, 10, 7, 29, 18], [15, 24, 23], [19, 38, 39], [20, 32]]
> Nombre de cycle(s) trouvé(s) : 5

Itération n° 14 Cassage de contrainte 
> Cycle à casser : [20, 32]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[20,32] + x[32,20] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 191.0
   Permutations :
(1 -> 13) (2 -> 18) (3 -> 11) (4 -> 1) (5 -> 22) (6 -> 30) (7 -> 10) (8 -> 17) (9 -> 33) (10 -> 32) (11 -> 31) (12 -> 28) (13 -> 36) (14 -> 4) (15 -> 24) (16 -> 8) (17 -> 9) (18 -> 29) (19 -> 38) (20 -> 27) (21 -> 12) (22 -> 21) (23 -> 15) (24 -> 23) (25 -> 6) (26 -> 25) (27 -> 34) (28 -> 14) (29 -> 7) (30 -> 16) (31 -> 5) (32 -> 20) (33 -> 35) (34 -> 40) (35 -> 3) (36 -> 26) (37 -> 2) (38 -> 39) (39 -> 19) (40 -> 37) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 13, 36, 26, 25, 6, 30, 16, 8, 17, 9, 33, 35, 3, 11, 31, 5, 22, 21, 12, 28, 14, 4], [2, 18, 29, 7, 10, 32, 20, 27, 34, 40, 37], [15, 24, 23], [19, 38, 39]]
> Nombre de cycle(s) trouvé(s) : 4

Itération n° 15 Cassage de contrainte 
> Cycle à casser : [15, 24, 23]
> Taille du cycle à casser : 3
> Nouvelle contrainte : x[15,24] + x[24,23] + x[23,15] ≤ 2
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 191.0
   Permutations :
(1 -> 13) (2 -> 37) (3 -> 35) (4 -> 1) (5 -> 22) (6 -> 30) (7 -> 29) (8 -> 20) (9 -> 17) (10 -> 7) (11 -> 3) (12 -> 28) (13 -> 36) (14 -> 4) (15 -> 31) (16 -> 8) (17 -> 9) (18 -> 2) (19 -> 38) (20 -> 32) (21 -> 12) (22 -> 21) (23 -> 15) (24 -> 23) (25 -> 6) (26 -> 24) (27 -> 14) (28 -> 39) (29 -> 18) (30 -> 16) (31 -> 5) (32 -> 10) (33 -> 25) (34 -> 27) (35 -> 33) (36 -> 26) (37 -> 40) (38 -> 11) (39 -> 19) (40 -> 34) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 13, 36, 26, 24, 23, 15, 31, 5, 22, 21, 12, 28, 39, 19, 38, 11, 3, 35, 33, 25, 6, 30, 16, 8, 20, 32, 10, 7, 29, 18, 2, 37, 40, 34, 27, 14, 4], [9, 17]]
> Nombre de cycle(s) trouvé(s) : 2

Itération n° 16 Cassage de contrainte 
> Cycle à casser : [9, 17]
> Taille du cycle à casser : 2
> Nouvelle contrainte : x[9,17] + x[17,9] ≤ 1
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 191.0
   Permutations :
(1 -> 4) (2 -> 18) (3 -> 35) (4 -> 14) (5 -> 31) (6 -> 25) (7 -> 10) (8 -> 16) (9 -> 17) (10 -> 32) (11 -> 3) (12 -> 21) (13 -> 1) (14 -> 28) (15 -> 23) (16 -> 30) (17 -> 8) (18 -> 29) (19 -> 38) (20 -> 27) (21 -> 22) (22 -> 5) (23 -> 24) (24 -> 15) (25 -> 26) (26 -> 36) (27 -> 34) (28 -> 12) (29 -> 7) (30 -> 6) (31 -> 11) (32 -> 20) (33 -> 9) (34 -> 40) (35 -> 33) (36 -> 13) (37 -> 2) (38 -> 39) (39 -> 19) (40 -> 37) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 4, 14, 28, 12, 21, 22, 5, 31, 11, 3, 35, 33, 9, 17, 8, 16, 30, 6, 25, 26, 36, 13], [2, 18, 29, 7, 10, 32, 20, 27, 34, 40, 37], [15, 23, 24], [19, 38, 39]]
> Nombre de cycle(s) trouvé(s) : 4

Itération n° 17 Cassage de contrainte 
> Cycle à casser : [15, 23, 24]
> Taille du cycle à casser : 3
> Nouvelle contrainte : x[15,23] + x[23,24] + x[24,15] ≤ 2
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 192.0
   Permutations :
(1 -> 13) (2 -> 37) (3 -> 35) (4 -> 1) (5 -> 22) (6 -> 30) (7 -> 29) (8 -> 20) (9 -> 17) (10 -> 7) (11 -> 3) (12 -> 28) (13 -> 36) (14 -> 4) (15 -> 31) (16 -> 8) (17 -> 23) (18 -> 2) (19 -> 38) (20 -> 32) (21 -> 12) (22 -> 21) (23 -> 24) (24 -> 15) (25 -> 6) (26 -> 25) (27 -> 14) (28 -> 39) (29 -> 18) (30 -> 16) (31 -> 5) (32 -> 10) (33 -> 9) (34 -> 27) (35 -> 33) (36 -> 26) (37 -> 40) (38 -> 11) (39 -> 19) (40 -> 34) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 13, 36, 26, 25, 6, 30, 16, 8, 20, 32, 10, 7, 29, 18, 2, 37, 40, 34, 27, 14, 4], [3, 35, 33, 9, 17, 23, 24, 15, 31, 5, 22, 21, 12, 28, 39, 19, 38, 11]]
> Nombre de cycle(s) trouvé(s) : 2

Itération n° 18 Cassage de contrainte 
> Cycle à casser : [3, 35, 33, 9, 17, 23, 24, 15, 31, 5, 22, 21, 12, 28, 39, 19, 38, 11]
> Taille du cycle à casser : 18
> Nouvelle contrainte : x[3,35] + x[35,33] + x[33,9] + x[9,17] + x[17,23] + x[23,24] + x[24,15] + x[15,31] + x[31,5] + x[5,22] + x[22,21] + x[21,12] + x[12,28] + x[28,39] + x[39,19] + x[19,38] + x[38,11] + x[11,3] ≤ 17
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 192.0
   Permutations :
(1 -> 4) (2 -> 18) (3 -> 35) (4 -> 14) (5 -> 22) (6 -> 25) (7 -> 10) (8 -> 16) (9 -> 17) (10 -> 32) (11 -> 3) (12 -> 28) (13 -> 1) (14 -> 27) (15 -> 31) (16 -> 30) (17 -> 23) (18 -> 29) (19 -> 38) (20 -> 8) (21 -> 12) (22 -> 21) (23 -> 24) (24 -> 15) (25 -> 33) (26 -> 36) (27 -> 34) (28 -> 39) (29 -> 7) (30 -> 6) (31 -> 5) (32 -> 26) (33 -> 9) (34 -> 40) (35 -> 20) (36 -> 13) (37 -> 2) (38 -> 11) (39 -> 19) (40 -> 37) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 4, 14, 27, 34, 40, 37, 2, 18, 29, 7, 10, 32, 26, 36, 13], [3, 35, 20, 8, 16, 30, 6, 25, 33, 9, 17, 23, 24, 15, 31, 5, 22, 21, 12, 28, 39, 19, 38, 11]]
> Nombre de cycle(s) trouvé(s) : 2

Itération n° 19 Cassage de contrainte 
> Cycle à casser : [1, 4, 14, 27, 34, 40, 37, 2, 18, 29, 7, 10, 32, 26, 36, 13]
> Taille du cycle à casser : 16
> Nouvelle contrainte : x[1,4] + x[4,14] + x[14,27] + x[27,34] + x[34,40] + x[40,37] + x[37,2] + x[2,18] + x[18,29] + x[29,7] + x[7,10] + x[10,32] + x[32,26] + x[26,36] + x[36,13] + x[13,1] ≤ 15
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 192.0
   Permutations :
(1 -> 13) (2 -> 37) (3 -> 35) (4 -> 1) (5 -> 22) (6 -> 25) (7 -> 29) (8 -> 16) (9 -> 17) (10 -> 7) (11 -> 3) (12 -> 28) (13 -> 36) (14 -> 4) (15 -> 31) (16 -> 30) (17 -> 23) (18 -> 2) (19 -> 38) (20 -> 8) (21 -> 12) (22 -> 21) (23 -> 24) (24 -> 15) (25 -> 33) (26 -> 32) (27 -> 14) (28 -> 39) (29 -> 18) (30 -> 6) (31 -> 5) (32 -> 10) (33 -> 9) (34 -> 27) (35 -> 20) (36 -> 26) (37 -> 40) (38 -> 11) (39 -> 19) (40 -> 34) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 13, 36, 26, 32, 10, 7, 29, 18, 2, 37, 40, 34, 27, 14, 4], [3, 35, 20, 8, 16, 30, 6, 25, 33, 9, 17, 23, 24, 15, 31, 5, 22, 21, 12, 28, 39, 19, 38, 11]]
> Nombre de cycle(s) trouvé(s) : 2

Itération n° 20 Cassage de contrainte 
> Cycle à casser : [1, 13, 36, 26, 32, 10, 7, 29, 18, 2, 37, 40, 34, 27, 14, 4]
> Taille du cycle à casser : 16
> Nouvelle contrainte : x[1,13] + x[13,36] + x[36,26] + x[26,32] + x[32,10] + x[10,7] + x[7,29] + x[29,18] + x[18,2] + x[2,37] + x[37,40] + x[40,34] + x[34,27] + x[27,14] + x[14,4] + x[4,1] ≤ 15
> Nouvelle résolution après ajout de la nouvelle contrainte !
> temps total = 191.99999999999997
   Permutations :
(1 -> 13) (2 -> 37) (3 -> 35) (4 -> 1) (5 -> 22) (6 -> 30) (7 -> 29) (8 -> 17) (9 -> 33) (10 -> 7) (11 -> 3) (12 -> 28) (13 -> 36) (14 -> 4) (15 -> 31) (16 -> 8) (17 -> 9) (18 -> 2) (19 -> 38) (20 -> 32) (21 -> 12) (22 -> 21) (23 -> 15) (24 -> 23) (25 -> 6) (26 -> 24) (27 -> 14) (28 -> 39) (29 -> 18) (30 -> 16) (31 -> 5) (32 -> 10) (33 -> 20) (34 -> 27) (35 -> 25) (36 -> 26) (37 -> 40) (38 -> 11) (39 -> 19) (40 -> 34) > Cycle(s) trouvé(s) : Array{Int64,1}[[1, 13, 36, 26, 24, 23, 15, 31, 5, 22, 21, 12, 28, 39, 19, 38, 11, 3, 35, 25, 6, 30, 16, 8, 17, 9, 33, 20, 32, 10, 7, 29, 18, 2, 37, 40, 34, 27, 14, 4]]
> Nombre de cycle(s) trouvé(s) : 1

FIN - Problème résolu :
> temps total = 191.99999999999997
> Nombre d'itération nécéssaires : 21
> Nombre de contraintes ajoutées : 20
> Ordre de parcours des drônes : 
1 -> 13 -> 36 -> 26 -> 24 -> 23 -> 15 -> 31 -> 5 -> 22 -> 21 -> 12 -> 28 -> 39 -> 19 -> 38 -> 11 -> 3 -> 35 -> 25 -> 6 -> 30 -> 16 -> 8 -> 17 -> 9 -> 33 -> 20 -> 32 -> 10 -> 7 -> 29 -> 18 -> 2 -> 37 -> 40 -> 34 -> 27 -> 14 -> 4 -> 1. 
